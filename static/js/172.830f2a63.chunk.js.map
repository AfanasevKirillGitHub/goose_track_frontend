{"version":3,"file":"static/js/172.830f2a63.chunk.js","mappings":"oOAEaA,EAAOC,EAAAA,GAAAA,IAAH,kEAKJC,EAAMD,EAAAA,GAAAA,OAAH,8L,UCAHE,EAAgB,WAC3B,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACAE,GAAoBC,EAAAA,EAAAA,KAApBD,gBAEFE,EAAmB,SAACC,GACxB,IAAQC,EAASD,EAAIE,cAAbD,KACRJ,EAAgB,CAAEM,KAAMF,IACxBN,EAAKS,eAAeH,EACrB,EAEKI,EAAeC,aAAaC,QAAQ,cAE1C,OACE,SAAC,EAAD,UACoB,OAAjBF,GACC,SAAC,EAAD,CAAQG,KAAK,SAASC,QAASV,EAAkBE,KAAK,KAAtD,UACE,gBAAKS,IAAKC,EAAKC,IAAI,WAAWC,MAAO,CAAEC,MAAO,aAGhD,SAAC,EAAD,CAAQN,KAAK,SAASC,QAASV,EAAkBE,KAAK,KAAtD,UACE,gBAAKS,IAAKK,EAAIH,IAAI,WAAWC,MAAO,CAAEC,MAAO,aAKtD,C,kHC9BYE,EAAUxB,EAAAA,GAAAA,IAAH,mKAOE,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,kBAAnB,IAIVC,EAAQ7B,EAAAA,GAAAA,IAAH,4QAUC,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMK,MAAMC,MAAtB,IACF,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,eAAnB,IACP,SAAAH,GAAK,OAAIA,EAAMJ,MAAMQ,QAAQC,KAAxB,IAGRC,EAAWpC,EAAAA,GAAAA,OAAH,0VAKV,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOU,KAAnB,IASC,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,I,UCrCRC,EAAYC,SAASC,cAAc,eAO5BC,EAAQ,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,UACnCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAACtC,GACdA,aAAeuC,eAA8B,WAAbvC,EAAIwC,MACtCL,GAEH,EAID,OAHAM,OAAOC,iBAAiB,UAAWJ,GACnCN,SAASW,KAAK9B,MAAM+B,SAAW,SAExB,WACLH,OAAOI,oBAAoB,UAAWP,GAEtC,IAAMQ,EAAad,SAASC,cAAc,kBAChC,OAAVa,QAAU,IAAVA,GAAAA,EAAYC,UAAUC,SAAS,WAAahB,SAASW,KAAK9B,MAAM+B,SAAW,SAAWZ,SAASW,KAAK9B,MAAM+B,SAAW,EACtH,CACF,GAAE,CAACT,IAQJ,OAAOc,EAAAA,EAAAA,eACL,SAAC,EAAD,CAAYxC,QAPO,SAACT,GAChBA,EAAIkD,SAAWlD,EAAIE,eACrBiC,GAEH,EAGC,UACE,UAAC,EAAD,WACGC,GACD,SAAC,EAAD,CAAa5B,KAAK,SAASC,QAAS0B,EAApC,UACE,SAAC,eAAD,WAKNJ,EAEH,C,8EC9CM,IAAMoB,EAAuB,CAClC,CAAElD,KAAM,UAAWmD,KAAM,gBAAiBC,GAAI,GAC9C,CAAEpD,KAAM,QAASmD,KAAM,SAAUC,GAAI,IAG1BC,EAA0B,CACrC,CAAErD,KAAM,aAAcmD,KAAM,UAAWC,GAAI,GAC3C,CAAEpD,KAAM,WAAYmD,KAAM,WAAYC,GAAI,G,+ECP/BvD,EAAqB,WAAO,IAAD,IACtC,GAAwCyD,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqB3D,EAArB,KAIA,MAAO,CAAEM,KAHC,UAAGqD,EAAaC,IAAI,eAApB,QAA+B,KAG1BC,MAFJ,UAAGF,EAAaC,IAAI,gBAApB,QAAgC,GAErB5D,gBAAAA,EACvB,C,2TCaY8D,IAnBWnE,GAAAA,GAAAA,OAAH,0VAKV,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOyC,MAAnB,IASC,SAAA3C,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IAKYtC,GAAAA,GAAAA,GAAH,yPAIN,SAAA8B,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IACP,SAAAxC,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUC,CAA1B,IACH,SAAA1C,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYD,CAA5B,IACX,SAAA/C,GAAC,OAAIA,EAAEC,MAAMC,OAAO+C,KAAnB,IAGS,SAAA5C,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,KAIbC,GAAY5E,GAAAA,GAAAA,IAAH,kGAMT6E,GAAU7E,GAAAA,GAAAA,OAAH,0bACT,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACJ,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACJ,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACC,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMK,MAAMC,MAAtB,IACZ,SAAAF,GAAK,OAAIA,EAAMJ,MAAMoD,QAAQC,IAAxB,IACN,SAAAtD,GAAC,OAAIA,EAAEC,MAAMC,OAAOqD,MAAnB,IACU,SAAAvD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IAER,SAAAR,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUC,CAA1B,IACH,SAAA1C,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYQ,EAA5B,IACL,SAAAnD,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IAMT,SAAA7C,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,eAAnB,IAIZC,IAAmBnF,EAAAA,GAAAA,IAAO6E,GAAP7E,CAAH,kEACP,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOyD,KAAnB,IACZ,SAAA3D,GAAC,OAAIA,EAAEC,MAAMC,OAAO0D,MAAnB,I,WCvDCC,GAAiB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aACvBC,GAAMpF,EAAAA,GAAAA,MAANoF,EAEFC,GAAWC,EAAAA,GAAAA,MAEXC,EAAY,qCAAG,+FACbF,GAASG,EAAAA,GAAAA,OADI,OAGnBpD,SAASqD,SAASC,SAHC,2CAAH,qDAMlB,OACE,mCACE,UAAC,GAAD,UAAgBN,EAAE,oCAClB,WAAC,GAAD,YACE,UAAC,GAAD,CAAqBxE,KAAK,SAASC,QAAS0E,EAA5C,SACGH,EAAE,UAEL,UAAC,GAAD,CAAYxE,KAAK,SAASC,QAASsE,EAAnC,SACGC,EAAE,aAKZ,E,WC3BYO,GAAS/F,GAAAA,GAAAA,OAAH,0pBAIF,SAAA8B,GAAK,OAAKA,EAAMkE,OAAS,KAAOlE,EAAMJ,MAAMiD,MAAM,EAA7C,IAEX,SAAA7C,GAAK,OAAKA,EAAMkE,OAAS,MAAQ,KAA5B,IACJ,SAAAlE,GAAK,OAAKA,EAAMkE,OAAS,KAAO,IAA3B,IACJ,SAAAlE,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACC,SAAA7C,GAAK,OACpBA,EAAMkE,OAASlE,EAAMJ,MAAMK,MAAMC,OAASF,EAAMJ,MAAMK,MAAMkE,MADxC,IAEZ,SAAAnE,GAAK,OAAIA,EAAMJ,MAAMoD,QAAQC,IAAxB,IACN,SAAAtD,GAAC,OAAIA,EAAEC,MAAMC,OAAOqD,MAAnB,IACU,SAAAvD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IAER,SAAAR,GAAK,OAAKA,EAAMkE,OAAS,OAASlE,EAAMJ,MAAM6C,UAAU2B,CAAnD,IACH,SAAApE,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYQ,EAA5B,IACL,SAAAnD,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IAKH,SAAAxC,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAKX,SAAAlD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,eAAnB,IAIZ,SAAApD,GAAK,OAAKA,EAAMkE,OAAS,MAAQ,KAA5B,IACJ,SAAAlE,GAAK,OAAKA,EAAMkE,OAAS,KAAO,IAA3B,IC7BNG,GAAY,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,OAClBR,GAAMpF,EAAAA,GAAAA,MAANoF,EAER,GAAsCY,EAAAA,GAAAA,WAAS,GAA/C,gBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAe,WACnBD,GAAgBD,EACjB,EAED,OACE,mCACE,WAAC,GAAD,CAAWL,OAAQA,EAAQhF,KAAK,SAASC,QAAS,kBAAMsF,GAAN,EAAlD,UACGf,EADH,+BAEE,UAAC,iBAAD,OAGDa,IACC,UAAC3D,GAAA,EAAD,CAAOC,YAAa4D,EAApB,UACE,UAACjB,GAAD,CAAgBC,aAAcgB,QAKvC,EChCYC,GAAcxG,GAAAA,GAAAA,OAAH,kyBASX,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO8E,MAAnB,IAEA,SAAA3E,GAAK,OAAIA,EAAMJ,MAAMoD,QAAQC,IAAxB,IAWF,SAAAtD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,ICjBLoE,GAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAMhC,OACE,UAAC,GAAD,CAAgB3F,KAAK,SAASC,QANX,WACnB0F,IACAnE,SAASW,KAAK9B,MAAM+B,SAAW,EAChC,EAGC,UACE,UAAC,gBAAD,KAGL,E,WCfYwD,GAAgB5G,GAAAA,GAAAA,IAAH,wmBACJ,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMC,OAAOkF,KAAvB,IAQH,SAAA/E,GAAK,OAAIA,EAAMJ,MAAMC,OAAOC,kBAAvB,IAsBhBkF,GAAU9G,GAAAA,GAAAA,IAAH,woBAaI,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOkF,KAAnB,IAmBZE,GAAc/G,GAAAA,GAAAA,IAAH,2SAIL,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAGH,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAIL,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAIbqC,GAAUhH,GAAAA,GAAAA,IAAH,qRAgBPiH,GAAQjH,GAAAA,GAAAA,GAAH,gbACP,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACK,SAAAR,GAAK,OAAIA,EAAMJ,MAAMwF,WAAWC,IAA3B,IACL,SAAArF,GAAK,OAAIA,EAAMJ,MAAM2C,YAAY+C,OAA5B,IACP,SAAAtF,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUC,CAA1B,IACH,SAAA1C,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYQ,EAA5B,IAKL,SAAAnD,GAAK,OAAIA,EAAMJ,MAAM6C,UAAU2B,CAA1B,IACH,SAAApE,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYQ,EAA5B,IAIP,SAAAnD,GAAK,OAAIA,EAAMJ,MAAM6C,UAAU8C,IAA1B,IACH,SAAAvF,GAAK,OAAIA,EAAMJ,MAAM+C,YAAY6C,GAA5B,IAIXC,GAAOvH,GAAAA,GAAAA,KAAH,gDAIJwH,GAAWxH,GAAAA,GAAAA,GAAH,qPAGJ,SAAA8B,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IACP,SAAAxC,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUkD,EAA1B,IACH,SAAA3F,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYD,CAA5B,IACX,SAAA1C,GAAK,OAAIA,EAAMJ,MAAMC,OAAO+F,IAAvB,IAGK,SAAA5F,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACT,SAAA7C,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUoD,CAA1B,IAITC,GAAU5H,GAAAA,GAAAA,GAAH,iIAQP6H,IAAO7H,EAAAA,GAAAA,IAAO8H,GAAAA,GAAP9H,CAAH,2tBAQA,SAAA8B,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IACP,SAAAxC,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUoD,CAA1B,IACH,SAAA7F,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYD,CAA5B,IACX,SAAA/C,GAAC,OAAIA,EAAEC,MAAMC,OAAO+C,KAAnB,IACO,SAAA5C,GAAK,OAAIA,EAAMJ,MAAMK,MAAMC,MAAtB,IAKJ,SAAAF,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAIZ,SAAAlD,GAAC,OAAIA,EAAEC,MAAMC,OAAOoG,OAAnB,IACI,SAAAtG,GAAC,OAAIA,EAAEC,MAAMC,OAAOqG,KAAnB,IAKN,SAAAvG,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACI,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,eAAnB,IAKF,SAAApD,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUC,CAA1B,ICpKTyD,ID6KejI,GAAAA,GAAAA,OAAH,uuBAIR,SAAA8B,GAAK,OAClBA,EAAMkE,OAASlE,EAAMJ,MAAMiD,MAAM,GAAK7C,EAAMJ,MAAMiD,MAAM,EADtC,IAEX,SAAA7C,GAAK,OAAKA,EAAMkE,OAAS,MAAQ,KAA5B,IACJ,SAAAlE,GAAK,OAAKA,EAAMkE,OAAS,KAAO,IAA3B,IACJ,SAAAlE,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IACC,SAAA7C,GAAK,OAAIA,EAAMJ,MAAMK,MAAMkE,MAAtB,IACZ,SAAAnE,GAAK,OAAIA,EAAMJ,MAAMoD,QAAQC,IAAxB,IACN,SAAAtD,GAAC,OAAIA,EAAEC,MAAMC,OAAOqD,MAAnB,IACU,SAAAvD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IAER,SAAAR,GAAK,OAAKA,EAAMkE,OAAS,OAASlE,EAAMJ,MAAM6C,UAAU2B,CAAnD,IACH,SAAApE,GAAK,OAAIA,EAAMJ,MAAM+C,YAAYQ,EAA5B,IACL,SAAAnD,GAAK,OAAIA,EAAMJ,MAAM2C,YAAYC,QAA5B,IAMH,SAAAxC,GAAK,OAAIA,EAAMJ,MAAMiD,MAAM,EAAtB,IAKX,SAAAlD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOuD,eAAnB,IAKZ,SAAApD,GAAK,OAAKA,EAAMkE,OAAS,MAAQ,KAA5B,IACJ,SAAAlE,GAAK,OAAKA,EAAMkE,OAAS,KAAO,IAA3B,IC/MW,SAAC,GAAkC,IAAhCkC,EAA+B,EAA/BA,iBACvB1C,GAAMpF,EAAAA,GAAAA,MAANoF,EAGR,GAAkCY,EAAAA,GAAAA,WAAS,GAA3C,gBAAO+B,EAAP,KAAkBC,EAAlB,KAEMC,EAAyB,WAC7B,OAAIpF,OAAOqF,YAAc,KAChBF,GAAa,IAGdD,GAAaI,GACtB,EAUKA,EAAe,WACnBL,IACA1F,SAASW,KAAK9B,MAAM+B,SAAW,EAChC,EAED,OACE,UAAC,GAAD,CAAkBS,GAAG,gBAAgB5C,QAbT,SAACuH,GACzBA,EAAM9E,SAAW8E,EAAM9H,eACzB6H,GAEH,EASC,UACE,WAAC,GAAD,CAAY1E,GAAG,UAAf,WACE,6BACE,WAAC,GAAD,YACE,UAAC,GAAD,CACE4E,OAAM,UAAKC,GAAAA,GAAAA,MAAL,gBAAsBC,GAAAA,GAAAA,QAAtB,OACNvH,IAAI,gBAEN,WAAC,GAAD,gBACG,UAAC,GAAD,iBADH,cAGA,UAACsF,GAAD,CAAiBC,gBAAiBuB,QAGpC,UAAC,GAAD,UAAc1C,EAAd,oCAEA,UAAC,GAAD,UACG1B,GAAAA,EAAAA,KAAiB,gBAAGF,EAAH,EAAGA,KAAMnD,EAAT,EAASA,KAAMoD,EAAf,EAAeA,GAAf,OAChB,0BACE,WAAC,GAAD,CAAS+E,GAAIhF,EAAM3C,QAASoH,EAA5B,UACY,YAATzE,GAAqB,UAAC,gBAAD,KAAoB,UAAC,eAAD,IAAkB,IAC3D4B,EAAE,cAAD,OAAe/E,QAHZoD,EADO,UAWtB,UAACsC,GAAD,QAIP,GCtEY0C,GAAS7I,GAAAA,GAAAA,OAAH,iTAgBN8I,GAAW9I,GAAAA,GAAAA,IAAH,iF,WChBR8I,GAAW9I,GAAAA,GAAAA,IAAH,6C,WCCRwB,GAAUxB,GAAAA,GAAAA,IAAH,4JAUP+I,GAAgB/I,GAAAA,GAAAA,IAAH,0fAQV,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,eAAnB,IACD,SAAAH,GAAK,OAAIA,EAAMJ,MAAMQ,QAAQC,KAAxB,IAuBR0F,IAAO7H,EAAAA,GAAAA,IAAO8H,GAAAA,GAAP9H,CAAH,smBAUD,SAAAyB,GAAC,OAAIA,EAAEC,MAAMoD,QAAQkE,SAApB,IACE,SAAAvH,GAAC,OAAIA,EAAEC,MAAMoD,QAAQkE,SAApB,IACT,SAAAvH,GAAC,OAAIA,EAAEC,MAAMC,OAAO+C,KAAnB,IAOC,SAAAjD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IAMG,SAAAR,GAAK,OAAIA,EAAMJ,MAAM6C,UAAUC,CAA1B,IC9DhByE,GAAgBzG,SAASC,cAAc,eAOhCsG,GAAgB,SAAC,GAAuC,IAArCpG,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SACnC4C,GAAMpF,EAAAA,GAAAA,MAANoF,GAER3C,EAAAA,GAAAA,YAAU,WACR,IAAMqG,EAAY,SAAC1I,GACbA,aAAeuC,eAA8B,WAAbvC,EAAIwC,MACtCL,GAEH,EAID,OAHAM,OAAOC,iBAAiB,UAAWgG,GACnC1G,SAASW,KAAK9B,MAAM+B,SAAW,SAExB,WACLH,OAAOI,oBAAoB,UAAW6F,GACtC1G,SAASW,KAAK9B,MAAM+B,SAAW,EAChC,CACF,GAAE,CAACT,IAEJ,IAAMwG,EAAe,SAAC3I,GAChBA,EAAIkD,SAAWlD,EAAIE,eACrBiC,GAEH,EAED,OAAOc,EAAAA,GAAAA,eACL,UAAC,GAAD,CAAYxC,QAASkI,EAArB,UACE,WAAC,GAAD,WACGvG,GACD,WAAC,GAAD,CAASgG,GAAG,UAAU3H,QAASkI,EAA/B,WACE,UAAC,gBAAD,IACC3D,EAAE,kBAEL,UAACW,GAAD,CAAWH,QAAM,SAGrBiD,GAEH,E,WC9CYG,GAAUpJ,GAAAA,GAAAA,IAAH,iLAMA,SAAA8B,GAAK,OAAKA,EAAMuH,OAAS,MAAQ,aAA5B,IACJ,SAAAvH,GAAK,OAAKA,EAAMuH,OAAS,OAAS,UAA7B,IAGbC,GAAOtJ,GAAAA,GAAAA,EAAH,mNAMN,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO8E,MAAnB,IAOC8C,GAAavJ,GAAAA,GAAAA,IAAH,4KAEX,SAAAyB,GAAC,OAAIA,EAAEC,MAAMoD,QAAQ0E,MAApB,IAUAC,GAAgBzJ,GAAAA,GAAAA,IAAH,mQAKd,SAAAyB,GAAC,OAAIA,EAAEC,MAAMoD,QAAQ0E,MAApB,IAWAE,GAAS1J,GAAAA,GAAAA,IAAH,gDAIN2J,GAAc3J,GAAAA,GAAAA,IAAH,wNCpDX4J,GAAyC,SAAC,GAE9B,IAAD,EADtBP,EACsB,EADtBA,OAEQQ,GAASC,EAAAA,GAAAA,KAATD,KACArE,GAAMpF,EAAAA,GAAAA,MAANoF,EAEFuE,EAAQ,UAAGF,EAAKpJ,YAAR,aAAG,EAAWuJ,MAAM,KAAK,GAEvC,OACE,WAAC,GAAD,CAAYX,OAAQA,EAApB,WACE,UAAC,GAAD,UAAU7D,EAAE,GAAD,OAAIuE,MACK,OAAnBF,EAAKI,WAAyC,SAAnBJ,EAAKI,WAC/B,UAAC,GAAD,WACE,UAAC,GAAD,WACE,UAAC,iBAAD,SAIJ,UAAC,GAAD,WACE,UAAC,GAAD,CAAW/I,IAAK2I,EAAKI,UAAW7I,IAAI,oBAK7C,EC5BY0H,GAAW,WACtB,OAAkC1C,EAAAA,GAAAA,WAAS,GAA3C,gBAAO8D,EAAP,KAAkBC,EAAlB,KACMxH,EAAc,WAClBwH,GAAcD,EACf,EAED,OACE,mCACE,UAAC,GAAD,CAAajJ,QAAS0B,EAAtB,UACE,UAACiH,GAAD,CAAYP,QAAM,MAEnBa,IACC,UAACnB,GAAD,CAAepG,YAAaA,EAA5B,UACE,UAACiH,GAAD,CAAYP,QAAQ,QAK7B,E,WCrBYe,GAAYpK,GAAAA,GAAAA,OAAH,2JAIX,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMC,OAAO0I,aAAvB,IAOHC,GAActK,GAAAA,GAAAA,KAAH,gXCRXuK,GAAc,WACzB,IAGIC,EAHE/E,GAAWC,EAAAA,GAAAA,MACX+E,GAAeC,EAAAA,GAAAA,IAAYC,GAAAA,IA0BjC,OAtBoB,SAACF,GACnB,OAAQA,GACN,IAAK,WACHD,EAAW,YACX,MACF,IAAK,YACHA,EAAW,aACX,MACF,IAAK,YACHA,EAAW,WACX,MACF,IAAK,aACHA,EAAW,YACX,MAEF,UAGH,CAEDI,CAAYH,IAGV,iCACE,WAAC,GAAD,CACEzJ,KAAK,SACLC,QAAS,kBAAMwE,GAASoF,EAAAA,GAAAA,IAAYL,GAA3B,EAFX,UAIoB,aAAjBC,GAAgD,cAAjBA,GAC9B,UAAC,cAAD,KAEA,UAAC,eAAD,KAEF,UAAC,GAAD,+BAIP,EC9CYK,GAAa9K,GAAAA,GAAAA,OAAH,0wBAQV,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO8E,MAAnB,IAEA,SAAA3E,GAAK,OAAIA,EAAMJ,MAAMoD,QAAQC,IAAxB,IAWF,SAAAtD,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,IAAnB,IChBLyI,GAAiB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,eAM/B,OACE,UAAC,GAAD,CAAehK,KAAK,SAASC,QANX,WAClB+J,IACAxI,SAASW,KAAK9B,MAAM+B,SAAW,QAChC,EAGC,UACE,UAAC,iBAAD,KAGL,EChBY6H,GAAcjL,GAAAA,GAAAA,OAAH,2OAML,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMK,MAAMC,MAAtB,IAGb,SAAAF,GAAK,OAAIA,EAAMJ,MAAMC,OAAOW,IAAvB,IAGJ,SAAAR,GAAK,OAAIA,EAAMJ,MAAMC,OAAOuJ,aAAvB,IASJZ,IALQtK,GAAAA,GAAAA,IAAH,0DAKSA,GAAAA,GAAAA,KAAH,iXCjBXmL,GAAc,WACzB,IAGIX,EAHE/E,GAAWC,EAAAA,GAAAA,MA2BjB,OAtBoB,SAAC+E,GACnB,OAAQA,GACN,IAAK,WACHD,EAAW,YACX,MACF,IAAK,YACHA,EAAW,WACX,MACF,IAAK,YACHA,EAAW,aACX,MACF,IAAK,aACHA,EAAW,YACX,MAEF,UAGH,CAEDI,EAxBqBF,EAAAA,GAAAA,IAAYC,GAAAA,MA2B/B,iCACE,WAAC,GAAD,CACE3J,KAAK,SACLC,QAAS,kBAAMwE,GAASoF,EAAAA,GAAAA,IAAYL,GAA3B,EAFX,WAIE,UAAC,eAAD,KACA,UAAC,GAAD,+BAIP,E,WC3CYY,GAAcpL,GAAAA,GAAAA,GAAH,iPAUX,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO0J,YAAnB,IAIDC,GAAoBtL,GAAAA,GAAAA,IAAH,mHAQjBuL,GAAcvL,GAAAA,GAAAA,IAAH,mFAMXwL,GAAiBxL,GAAAA,GAAAA,EAAH,uJAMhB,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO0J,YAAnB,IAGCI,GAASzL,GAAAA,GAAAA,KAAH,uJACR,SAAAyB,GAAC,OAAIA,EAAEC,MAAMC,OAAO+J,UAAnB,ICjCCC,GAAkB,WAC7B,IAAQC,GAASC,EAAAA,GAAAA,IAAmB,MAA5BD,KACApG,GAAMpF,EAAAA,GAAAA,MAANoF,EACFK,GAAWiG,EAAAA,EAAAA,MAEjB,OACE,mCACG,OAACF,QAAD,IAACA,OAAD,EAACA,EAAMG,QAAoB,GAC1BlG,EAASmG,SAASC,SAAS,eACzB,WAAC,GAAD,YACE,iBACExD,OAAM,UAAKC,GAAAA,GAAAA,WAAL,gBAA2BC,GAAAA,GAAAA,aAA3B,OACNvH,IAAI,UAEN,WAAC,GAAD,YACE,UAAC,GAAD,UACyB,kBAAtByE,EAASmG,SACNxG,EADH,mCAEGA,EAFH,kCAIH,WAAC,GAAD,WACG,KACD,UAAC,GAAD,UAAYA,EAAE,YAFhB,IAEwCA,EAAE,mBAKjD,OAACoG,QAAD,IAACA,OAAD,EAACA,EAAMG,QAAoB,GAC1BlG,EAASmG,SAASC,SAAS,cACzB,UAAC,GAAD,UACyB,kBAAtBpG,EAASmG,SACNxG,EADH,mCAEGA,EAFH,mCAKN,OAACoG,QAAD,IAACA,GAAAA,EAAMG,UACN,UAAC,GAAD,UACyB,kBAAtBlG,EAASmG,SACNxG,EADH,mCAEGA,EAFH,mCAOV,ECvCYqD,GAAS,SAAC,GAAkC,IAAhCX,EAA+B,EAA/BA,iBACvB,OACE,WAAC,GAAD,YACE,UAAC6C,GAAD,CAAgBC,eAAgB9C,KAChC,UAACyD,GAAD,KACA,WAAC,GAAD,YACE,UAACR,GAAD,KACA,UAACZ,GAAD,KACA,UAACrK,GAAA,EAAD,KACA,UAAC,GAAD,SAIP,E,WCvBYgM,GAAkBlM,GAAAA,GAAAA,IAAH,iIACN,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMC,OAAOkF,KAAvB,IAGH,SAAA/E,GAAK,OAAIA,EAAMJ,MAAMC,OAAOwK,cAAvB,IAIhB/C,GAAUpJ,GAAAA,GAAAA,IAAH,+NAGE,SAAA8B,GAAK,OAAIA,EAAMJ,MAAMC,OAAOyK,kBAAvB,ICNdC,GAAqB,WAChC,IAAMC,EAAmB,WACJ9J,SAASC,cAAc,kBAC/Bc,UAAUgJ,OAAO,UAC7B,EAED,OACE,UAAC,GAAD,WACE,WAAC,GAAD,CAAYC,UAAU,YAAtB,WACE,UAACvE,GAAD,CAAgBC,iBAAkBoE,KAElC,6BACE,UAACzD,GAAD,CAAQX,iBAAkBoE,KAC1B,UAAC,GAAAG,SAAD,CAAUC,UAAU,UAACC,GAAA,EAAD,IAApB,UACE,UAAC,KAAD,aAMX,C","sources":["components/ChangeLngElem/ChangeLngElem.styled.ts","components/ChangeLngElem/ChangeLngElem.tsx","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","helpers/pages.ts","hooks/useGetSearchParams.ts","components/Sidebar/LogoutBtn/ModalForLogOut/ModalForLogOut.styled.ts","components/Sidebar/LogoutBtn/ModalForLogOut/ModalForLogOut.tsx","components/Sidebar/LogoutBtn/LogoutBtn.styled.ts","components/Sidebar/LogoutBtn/LogoutBtn.tsx","components/Sidebar/CloseSidebarBtn/CloseSidebarBtn.styled.ts","components/Sidebar/CloseSidebarBtn/CloseSidebarBtn.tsx","components/Sidebar/Sidebar.styled.tsx","components/Sidebar/Sidebar.tsx","components/Header/Header.styled.ts","components/Header/UserInfo/UserInfo.styled.ts","components/Header/UserModal/ModalUserInfo.styled.ts","components/Header/UserModal/ModalUserInfo.tsx","components/Header/UserAvatar/UserAvatar.styled.ts","components/Header/UserAvatar/UserAvatar.tsx","components/Header/UserInfo/UserInfo.tsx","components/Header/ThemeToogle/ThemeToogle.styled.ts","components/Header/ThemeToogle/ThemeToogle.tsx","components/Sidebar/OpenSidebarBtn/OpenSidebarBtn.styled.ts","components/Sidebar/OpenSidebarBtn/OpenSidebarBtn.tsx","components/Header/ColorToggle/ColorToggle.styled.ts","components/Header/ColorToggle/ColorToggle.tsx","components/Header/MotivationGoose/MotivationGoose.styled.ts","components/Header/MotivationGoose/MotivationGoose.tsx","components/Header/Header.tsx","pages/UserPage/UserPage.styled.ts","pages/UserPage/UserPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  padding: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport USA from '../../helpers/photos/usa.png';\nimport UA from '../../helpers/photos/ukraine.png';\nimport * as SC from './ChangeLngElem.styled';\n\nexport const ChangeLngElem = () => {\n  const { i18n } = useTranslation();\n  const { setSearchParams } = useGetSearchParams();\n\n  const onchangeLngClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    const { name } = evt.currentTarget;\n    setSearchParams({ lang: name });\n    i18n.changeLanguage(name);\n  };\n\n  const selectedLang = localStorage.getItem('i18nextLng');\n\n  return (\n    <SC.Wrap>\n      {selectedLang === 'ua' ? (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"en\">\n          <img src={USA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      ) : (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"ua\">\n          <img src={UA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      )}\n    </SC.Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 360px;\n  max-width: 1200px;\n  max-height: 90%;\n  padding: 40px 28px;\n  border-radius: ${props => props.theme.radii.normal};\n  background-color: ${p => p.theme.colors.modalBackground};\n  box-shadow: ${props => props.theme.shadows.modal};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 8px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.black};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    transform: scale(1.1);\n  }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { SVG } from '../../images';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const closeModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', closeModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n      // document.body.style.overflow = '';\n      const mobileMenu = document.querySelector('#menuContainer') as HTMLElement;\n      mobileMenu?.classList.contains('is-open') ? document.body.style.overflow = 'hidden' : document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <SVG.CloseIcon />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import { mainNav } from './interfaces/mainNav/mainNav';\n\nexport const authPages: mainNav[] = [\n  { name: 'Sign up', href: '/registration', id: 1 },\n  { name: 'Login', href: '/login', id: 2 },\n];\n\nexport const accountPages: mainNav[] = [\n  { name: 'My account', href: 'account', id: 3 },\n  { name: 'Calendar', href: 'calendar', id: 4 },\n];\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useGetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const lang = searchParams.get('lang') ?? 'en';\n  const token = searchParams.get('token') ?? '';\n\n  return { lang, token, setSearchParams };\n};\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.navBcg};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    transform: scale(1.3);\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 24px;\n  font-family: 'Inter';\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.m};\n  color: ${p => p.theme.colors.grey3};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${props => props.theme.space[5]}px;\n  }\n`;\n\nexport const ModalList = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  list-style: none;\n`;\n\nexport const ItemBtn = styled.button`\n  width: ${props => props.theme.space[8]}px;\n  height: ${props => props.theme.space[6]}px;\n  padding: ${props => props.theme.space[0]}px;\n  border-radius: ${props => props.theme.radii.normal};\n  border: ${props => props.theme.borders.none};\n  color: ${p => p.theme.colors.white3};\n  background-color: ${p => p.theme.colors.blue};\n  cursor: pointer;\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.xl};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    background-color: ${p => p.theme.colors.hoverBackground};\n  }\n`;\n\nexport const SecondaryItemBtn = styled(ItemBtn)`\n  background-color: ${p => p.theme.colors.grey2};\n  color: ${p => p.theme.colors.black4};\n`;\n","import { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\nimport { logOut } from '../../../../redux/auth/authOperations';\nimport * as SC from './ModalForLogOut.styled';\n\ninterface IProps {\n  onCloseModal: () => void;\n}\n\nexport const ModalForLogOut = ({ onCloseModal }: IProps) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n\n  const handleLogout = async () => {\n    await dispatch(logOut());\n\n    document.location.reload();\n  };\n\n  return (\n    <>\n      <SC.ModalTitle>{t(`Do you really wanna fly away?`)}</SC.ModalTitle>\n      <SC.ModalList>\n        <SC.SecondaryItemBtn type=\"button\" onClick={handleLogout}>\n          {t(`Yes`)}\n        </SC.SecondaryItemBtn>\n        <SC.ItemBtn type=\"button\" onClick={onCloseModal}>\n          {t(`No`)}\n        </SC.ItemBtn>\n      </SC.ModalList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\ninterface IButton {\n  design?: boolean;\n  to?: boolean;\n}\n\nexport const Button = styled.button<IButton>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: ${props => (props.design ? '18' : props.theme.space[0])}px;\n\n  width: ${props => (props.design ? '108' : '141')}px;\n  height: ${props => (props.design ? '37' : '46')}px;\n  padding: ${props => props.theme.space[0]}px;\n  border-radius: ${props =>\n    props.design ? props.theme.radii.normal : props.theme.radii.medium};\n  border: ${props => props.theme.borders.none};\n  color: ${p => p.theme.colors.white3};\n  background-color: ${p => p.theme.colors.blue};\n  cursor: pointer;\n  font-size: ${props => (props.design ? '14px' : props.theme.fontSizes.l)};\n  line-height: ${props => props.theme.lineHeights.xl};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n  }\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    background-color: ${p => p.theme.colors.hoverBackground};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.design ? '108' : '141')}px;\n    height: ${props => (props.design ? '37' : '56')}px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useState } from 'react';\nimport { Modal } from '../../Modal/Modal';\nimport { ModalForLogOut } from './ModalForLogOut/ModalForLogOut';\nimport { SVG } from '../../../images';\nimport * as SC from './LogoutBtn.styled';\n\ninterface IProps {\n  design?: boolean;\n}\n\nexport const LogoutBtn = ({ design }: IProps) => {\n  const { t } = useTranslation();\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalHandler = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <>\n      <SC.Button design={design} type=\"button\" onClick={() => modalHandler()}>\n        {t`Log Out`}\n        <SVG.LogOutIcon />\n      </SC.Button>\n\n      {isModalOpen && (\n        <Modal toggleModal={modalHandler}>\n          <ModalForLogOut onCloseModal={modalHandler} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ButtonClose = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    padding: 0;\n    margin-left: auto;\n\n    color: ${p => p.theme.colors.black5};\n    background-color: rgba(0, 0, 0, 0);\n    border: ${props => props.theme.borders.none};\n    cursor: pointer;\n    transition: color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    svg {\n        width: 24px;\n        height: 24px;\n    }\n\n    :hover,\n    :focus {\n        color: ${p => p.theme.colors.blue};\n        transform: scale(1.1);\n    }\n\n    @media screen and (min-width: 768px) and (max-width: 1439px) {\n        width: 32px;\n        height: 32px;\n\n        svg {\n            width: 32px;\n            height: 32px;\n        }\n    }\n\n    @media screen and (min-width: 1440px) {\n        display: none;\n    }\n`;","import { SVG } from '../../../images';\nimport * as SC from './CloseSidebarBtn.styled';\n\ninterface IProps {\n  closeBurgerMenu: () => void;\n}\n\nexport const CloseSidebarBtn = ({ closeBurgerMenu }: IProps ) => {\n  const closeSidebar = () => {\n    closeBurgerMenu();\n    document.body.style.overflow = '';\n  };\n\n  return (\n    <SC.ButtonClose type=\"button\" onClick={closeSidebar}>\n      <SVG.CloseIcon />\n    </SC.ButtonClose>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MenuContainer = styled.div`\n  background-color: ${props => props.theme.colors.white};\n  @media screen and (max-width: 1439px) {\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 5;\n    width: 100%;\n    height: 100%;\n    background-color: ${props => props.theme.colors.backdropBackground};\n\n    opacity: 0;\n    visibility: hidden;\n    pointer-events: none;\n\n    transition-property: opacity, visibility;\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n    &.is-open {\n      opacity: 1;\n      visibility: visible;\n      pointer-events: initial;\n    }\n\n    &.is-open > div {\n      transform: translateX(0);\n    }\n  }\n`;\n\nexport const Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  width: 225px;\n\n  @media screen and (max-width: 1439px) {\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 6;\n    padding: 24px 20px;\n    background-color: ${p => p.theme.colors.white};\n\n    transform: translateX(-100%);\n\n    transition-property: transform;\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 289px;\n    padding: 24px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 32px 24px;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: baseline;\n  margin-bottom: ${props => props.theme.space[7]}px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin-bottom: ${props => props.theme.space[6]}px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: ${props => props.theme.space[5]}px;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  margin: 0 6px 0 0;\n  width: 36px;\n  height: 36px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 60px;\n    height: 60px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 72px;\n    height: 72px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.blue};\n  font-family: ${props => props.theme.fontFamily.logo};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.xl};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: ${props => props.theme.lineHeights.xl};\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: ${props => props.theme.fontSizes.xxxl};\n    line-height: ${props => props.theme.lineHeights.xxs};\n  }\n`;\n\nexport const Span = styled.span`\n  font-style: italic;\n`;\n\nexport const NavTitle = styled.h2`\n  margin-bottom: 24px;\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.m};\n  color: ${props => props.theme.colors.grey};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${props => props.theme.space[5]}px;\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: auto;\n  list-style: none;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: baseline;\n  padding: 10px 12px;\n  text-decoration: none;\n\n  font-family: 'Inter';\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.m};\n  color: ${p => p.theme.colors.grey3};\n  border-radius: ${props => props.theme.radii.normal};\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    margin-right: ${props => props.theme.space[3]}px;\n  }\n\n  &.active {\n    color: ${p => p.theme.colors.navLink};\n    background: ${p => p.theme.colors.blue3};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${p => p.theme.colors.blue};\n    background: ${p => p.theme.colors.hoverBackground};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 20px;\n    font-size: ${props => props.theme.fontSizes.m};\n  }\n`;\n\ninterface IButton {\n  design?: boolean;\n  to?: boolean;\n}\n\nexport const ButtonReview = styled.button<IButton>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: ${props =>\n    props.design ? props.theme.space[4] : props.theme.space[0]}px;\n  width: ${props => (props.design ? '108' : '141')}px;\n  height: ${props => (props.design ? '37' : '46')}px;\n  padding: ${props => props.theme.space[0]}px;\n  border-radius: ${props => props.theme.radii.medium};\n  border: ${props => props.theme.borders.none};\n  color: ${p => p.theme.colors.white3};\n  background-color: ${p => p.theme.colors.blue};\n  cursor: pointer;\n  font-size: ${props => (props.design ? '14px' : props.theme.fontSizes.l)};\n  line-height: ${props => props.theme.lineHeights.xl};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  box-shadow: 0 0 15px rgba(236, 236, 236, 0.5);\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n  }\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    background-color: ${p => p.theme.colors.hoverBackground};\n    transform: scale(1.02);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: ${props => (props.design ? '108' : '141')}px;\n    height: ${props => (props.design ? '37' : '46')}px;\n  }\n`;\n","import { MouseEvent, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { accountPages } from '../../helpers/pages';\nimport { LogoutBtn } from './LogoutBtn/LogoutBtn';\nimport { CloseSidebarBtn } from './CloseSidebarBtn/CloseSidebarBtn';\nimport { SVG, IMG, IMG2x } from '../../images';\nimport * as SC from './Sidebar.styled';\n\ninterface IProps {\n  toggleBurgerMenu: () => void;\n}\n\nexport const AccountSidebar = ({ toggleBurgerMenu }: IProps) => {\n  const { t } = useTranslation();\n\n  // ======================== for closing Sidebar by navigate on accountPages if media screen less 1440 px\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  const navigateByAccountPages = () => {\n    if (window.innerWidth >= 1440) {\n      return setIsDesktop(true);\n    }\n\n    return !isDesktop && closeSidebar();\n  };\n\n  // ======================== for closing Sidebar by touching overlay\n  const closeOnClickByOverlay = (event: MouseEvent<HTMLElement>) => {\n    if (event.target === event.currentTarget) {\n      closeSidebar();\n    }\n  };\n\n  // ======================== for closing Sidebar by using \"toggleBurgerMenu\" and NOT hidden overlay\n  const closeSidebar = () => {\n    toggleBurgerMenu();\n    document.body.style.overflow = '';\n  };\n\n  return (\n    <SC.MenuContainer id=\"menuContainer\" onClick={closeOnClickByOverlay}>\n      <SC.Sidebar id=\"sidebar\">\n        <div>\n          <SC.LogoWrapper>\n            <SC.LogoImg\n              srcSet={`${IMG.goose} 1x, ${IMG2x.goose2x} 2x`}\n              alt=\"logo goose\"\n            />\n            <SC.Title>\n              G<SC.Span>oo</SC.Span>seTrack\n            </SC.Title>\n            <CloseSidebarBtn closeBurgerMenu={toggleBurgerMenu} />\n          </SC.LogoWrapper>\n\n          <SC.NavTitle>{t`User Panel`}</SC.NavTitle>\n\n          <SC.NavList>\n            {accountPages.map(({ href, name, id }) => (\n              <li key={id}>\n                <SC.Link to={href} onClick={navigateByAccountPages}>\n                  {href === 'account' ? <SVG.UserCheck /> : <SVG.Calendar />}{' '}\n                  {t(`navigation.${name}`)}\n                </SC.Link>\n              </li>\n            ))}\n          </SC.NavList>\n        </div>\n\n        <LogoutBtn />\n      </SC.Sidebar>\n    </SC.MenuContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px 20px 64px 20px;\n\n  @media (min-width: 768px) {\n    padding: 24px 32px 64px 32px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 40px 32px 16px 32px;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n","import styled from 'styled-components';\n\nexport const UserInfo = styled.div`\n  cursor: pointer;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: transparent;\n  overflow-y: auto;\n`;\n\nexport const ModalUserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: absolute;\n  min-width: 197px;\n  width: max-content;\n  height: 189px;\n  background: ${p => p.theme.colors.modalBackground};\n  box-shadow: ${props => props.theme.shadows.modal};\n\n  border-radius: 8px;\n  top: 60px;\n  right: 35px;\n\n  padding: 14px 0;\n\n  @media (min-width: 375px) {\n    top: 60px;\n    right: 20px;\n  }\n\n  @media (min-width: 768px) {\n    top: 75px;\n    right: 30px;\n  }\n\n  @media (min-width: 1440px) {\n    top: 90px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: baseline;\n  gap: 8px;\n  padding: 10px 18px;\n  text-decoration: none;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  border-top: ${p => p.theme.borders.modalLink};\n  border-bottom: ${p => p.theme.borders.modalLink};\n  color: ${p => p.theme.colors.grey3};\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    border-color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus-visible {\n    background: gold;\n    color: ${p => p.theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 18px;\n\n    font-size: ${props => props.theme.fontSizes.m};\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { MouseEvent, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SVG } from '../../../images';\nimport { LogoutBtn } from '../../Sidebar/LogoutBtn/LogoutBtn';\nimport * as SC from './ModalUserInfo.styled';\n\nconst modalUserRoot = document.querySelector('#user-modal') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const ModalUserInfo = ({ toggleModal, children }: IProps) => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const coseModal = (evt: Event) => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.ModalUserInfo>\n        {children}\n        <SC.Link to=\"account\" onClick={closeOnClick}>\n          <SVG.UserCheck />\n          {t('My Account')}\n        </SC.Link>\n        <LogoutBtn design />\n      </SC.ModalUserInfo>\n    </SC.Overlay>,\n    modalUserRoot\n  );\n};\n","import styled from 'styled-components';\n\ninterface IWrapper {\n  invert: boolean;\n}\n\nexport const Wrapper = styled.div<IWrapper>`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  padding-left: 18px;\n  padding-right: 18px;\n  flex-direction: ${props => (props.invert ? 'row' : 'row-reverse')};\n  justify-content: ${props => (props.invert ? 'none' : 'flex-end')};\n`;\n\nexport const Text = styled.p`\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 18px;\n  color: ${p => p.theme.colors.black5};\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const AvatarUser = styled.div`\n  border-radius: 50%;\n  border: ${p => p.theme.borders.avatar};\n  width: 32px;\n  height: 32px;\n\n  @media (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n  }\n`;\n\nexport const AvatarDefault = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  border: ${p => p.theme.borders.avatar};\n  padding: 2px;\n  width: 32px;\n  height: 32px;\n\n  @media (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 16px;\n  height: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useAuth } from '../../../hooks/useAuth';\nimport * as SC from './UserAvatar.styled';\nimport { SVG } from '../../../images';\n\ninterface IUserAvatarProps {\n  invert: boolean;\n}\n\nexport const UserAvatar: React.FC<IUserAvatarProps> = ({\n  invert,\n}: IUserAvatarProps) => {\n  const { user } = useAuth();\n  const { t } = useTranslation();\n\n  const userName = user.name?.split(' ')[0];\n\n  return (\n    <SC.Wrapper invert={invert}>\n      <SC.Text>{t(`${userName}`)}</SC.Text>\n      {user.avatarURL === null || user.avatarURL === 'null' ? (\n        <SC.AvatarDefault>\n          <SC.IconWrapper>\n            <SVG.UserAvatar />\n          </SC.IconWrapper>\n        </SC.AvatarDefault>\n      ) : (\n        <SC.AvatarUser>\n          <SC.Avatar src={user.avatarURL} alt=\"User Avatar\" />\n        </SC.AvatarUser>\n      )}\n    </SC.Wrapper>\n  );\n};\n","import * as SC from './UserInfo.styled';\nimport { useState } from 'react';\nimport { ModalUserInfo } from '../UserModal/ModalUserInfo';\nimport { UserAvatar } from '../UserAvatar/UserAvatar';\n\nexport const UserInfo = () => {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <SC.UserInfo onClick={toggleModal}>\n        <UserAvatar invert />\n      </SC.UserInfo>\n      {showModal && (\n        <ModalUserInfo toggleModal={toggleModal}>\n          <UserAvatar invert={false} />\n        </ModalUserInfo>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToogleBtn = styled.button`\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  color: ${props => props.theme.colors.themeSwitcher};\n\n  width: 26px;\n  height: 26px;\n  padding: 0;\n`;\n\nexport const HiddenTitle = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n\n  :active,\n  :focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    white-space: normal;\n    width: auto;\n  }\n`;\n","import { SVG } from '../../../images';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTheme, changeTheme } from '../../../redux/theme/themeReducer';\nimport * as SC from './ThemeToogle.styled';\n\nexport const ThemeToogle = () => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(getTheme);\n\n  let newTheme: string;\n\n  const getNewTheme = (currentTheme: string) => {\n    switch (currentTheme) {\n      case 'darkblue':\n        newTheme = 'lightblue';\n        break;\n      case 'darkgreen':\n        newTheme = 'lightgreen';\n        break;\n      case 'lightblue':\n        newTheme = 'darkblue';\n        break;\n      case 'lightgreen':\n        newTheme = 'darkgreen';\n        break;\n\n      default:\n        return newTheme;\n    }\n  };\n\n  getNewTheme(currentTheme);\n\n  return (\n    <>\n      <SC.ToogleBtn\n        type=\"button\"\n        onClick={() => dispatch(changeTheme(newTheme))}\n      >\n        {currentTheme === 'darkblue' || currentTheme === 'darkgreen' ? (\n          <SVG.SunIcon />\n        ) : (\n          <SVG.MoonIcon />\n        )}\n        <SC.HiddenTitle>Theme Toggle</SC.HiddenTitle>\n      </SC.ToogleBtn>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ButtonOpen = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    padding: 0;\n\n    color: ${p => p.theme.colors.black5};\n    background-color: rgba(0, 0, 0, 0);\n    border: ${props => props.theme.borders.none};\n    cursor: pointer;\n    transition: color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    svg {\n        width: 24px;\n        height: 24px;\n    }\n\n    :hover,\n    :focus {\n        color: ${p => p.theme.colors.blue};\n        transform: scale(1.1);\n    }\n\n    @media screen and (min-width: 768px) and (max-width: 1439px) {\n        width: 32px;\n        height: 32px;\n\n        svg {\n            width: 32px;\n            height: 32px;\n        }\n    }\n\n    @media screen and (min-width: 1440px) {\n        display: none;\n    }\n`;","import { SVG } from '../../../images';\nimport * as SC from './OpenSidebarBtn.styled';\n\ninterface IProps {\n  openBurgerMenu: () => void;\n}\n\nexport const OpenSidebarBtn = ({ openBurgerMenu }: IProps ) => {\n  const openSidebar = () => {\n    openBurgerMenu();\n    document.body.style.overflow = 'hidden';\n  };\n\n  return (\n    <SC.ButtonOpen type=\"button\" onClick={openSidebar}>\n      <SVG.BurgerMenu />\n    </SC.ButtonOpen>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColorPicker = styled.button`\n  border: none;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  background-color: transparent;\n  border-radius: ${props => props.theme.radii.normal};\n  overflow: hidden;\n  cursor: pointer;\n  color: ${props => props.theme.colors.blue};\n\n  svg {\n    fill: ${props => props.theme.colors.colorSwitcher};\n  }\n`;\n\nexport const Color = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const HiddenTitle = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n\n  :active,\n  :focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    white-space: normal;\n    width: auto;\n  }\n`;\n","import * as SC from './ColorToggle.styled';\nimport { SVG } from '../../../images';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTheme, changeTheme } from '../../../redux/theme/themeReducer';\n\nexport const ColorToggle = () => {\n  const dispatch = useDispatch();\n  const currentTheme = useSelector(getTheme);\n\n  let newTheme: string;\n\n  const getNewTheme = (currentTheme: string) => {\n    switch (currentTheme) {\n      case 'darkblue':\n        newTheme = 'darkgreen';\n        break;\n      case 'darkgreen':\n        newTheme = 'darkblue';\n        break;\n      case 'lightblue':\n        newTheme = 'lightgreen';\n        break;\n      case 'lightgreen':\n        newTheme = 'lightblue';\n        break;\n\n      default:\n        return newTheme;\n    }\n  };\n\n  getNewTheme(currentTheme);\n\n  return (\n    <>\n      <SC.ColorPicker\n        type=\"button\"\n        onClick={() => dispatch(changeTheme(newTheme))}\n      >\n        <SVG.DropIcon />\n        <SC.HiddenTitle>Color Picker</SC.HiddenTitle>\n      </SC.ColorPicker>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderTitle = styled.h1`\n  display: none;\n\n  @media (min-width: 1440px) {\n    display: block;\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 32px;\n    color: ${p => p.theme.colors.columnHeader};\n  }\n`;\n\nexport const MotivationWrapper = styled.div`\n  display: none;\n  @media (min-width: 1440px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const WrapperText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const MotivationText = styled.p`\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n  color: ${p => p.theme.colors.columnHeader};\n`;\n\nexport const Accent = styled.span`\n  color: ${p => p.theme.colors.currentDay};\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { useFetchTasksQuery } from '../../../redux/task/taskOperations';\nimport { IMG, IMG2x } from '../../../images';\n\nimport * as SC from './MotivationGoose.styled';\n\nexport const MotivationGoose = () => {\n  const { data } = useFetchTasksQuery(null);\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  return (\n    <>\n      {(data?.length as number) > 0 &&\n        location.pathname.includes('/calendar') && (\n          <SC.MotivationWrapper>\n            <img\n              srcSet={`${IMG.motivation} 1x, ${IMG2x.motivation2x} 2x`}\n              alt=\"logo\"\n            />\n            <SC.WrapperText>\n              <SC.HeaderTitle>\n                {location.pathname === '/user/account'\n                  ? t`User Profile`\n                  : t`Calendar`}\n              </SC.HeaderTitle>\n              <SC.MotivationText>\n                {' '}\n                <SC.Accent>{t('let go')}</SC.Accent> {t('focus')}\n              </SC.MotivationText>\n            </SC.WrapperText>\n          </SC.MotivationWrapper>\n        )}\n      {(data?.length as number) > 0 &&\n        location.pathname.includes('/account') && (\n          <SC.HeaderTitle>\n            {location.pathname === '/user/account'\n              ? t`User Profile`\n              : t`Calendar`}\n          </SC.HeaderTitle>\n        )}\n      {!data?.length && (\n        <SC.HeaderTitle>\n          {location.pathname === '/user/account'\n            ? t`User Profile`\n            : t`Calendar`}\n        </SC.HeaderTitle>\n      )}\n    </>\n  );\n};\n","import * as SC from './Header.styled';\nimport { ChangeLngElem } from '../ChangeLngElem/ChangeLngElem';\nimport { UserInfo } from './UserInfo/UserInfo';\nimport { ThemeToogle } from './ThemeToogle/ThemeToogle';\nimport { OpenSidebarBtn } from '../Sidebar/OpenSidebarBtn/OpenSidebarBtn';\nimport { ColorToggle } from './ColorToggle/ColorToggle';\nimport { MotivationGoose } from './MotivationGoose/MotivationGoose';\n\ninterface IProps {\n  toggleBurgerMenu: () => void;\n}\n\nexport const Header = ({ toggleBurgerMenu }: IProps) => {\n  return (\n    <SC.Header>\n      <OpenSidebarBtn openBurgerMenu={toggleBurgerMenu} />\n      <MotivationGoose />\n      <SC.UserInfo>\n        <ColorToggle />\n        <ThemeToogle />\n        <ChangeLngElem />\n        <UserInfo />\n      </SC.UserInfo>\n    </SC.Header>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FullPageWrapper = styled.div`\n  background-color: ${props => props.theme.colors.white};\n\n  @media screen and (max-width: 1439px) {\n    background-color: ${props => props.theme.colors.mainBackground};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding-left: 0;\n  padding-right: 0;\n  background-color: ${props => props.theme.colors.taskCardBackground};\n  min-height: 100vh;\n\n  @media screen and (min-width: 1440px) {\n    display: grid;\n    grid-template-columns: 289px 1fr;\n  }\n`;\n","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { AccountSidebar } from '../../components/Sidebar/Sidebar';\nimport { Header } from '../../components/Header/Header';\nimport { Loader } from '../../components/Loader/Loader';\nimport * as SC from './UserPage.styled';\n\nexport const UserPage: React.FC = () => {\n  const handleBurgerMenu = () => {\n    const mobileMenu = document.querySelector('#menuContainer') as HTMLElement;\n    mobileMenu.classList.toggle('is-open');\n  };\n\n  return (\n    <SC.FullPageWrapper>\n      <SC.Wrapper className=\"container\">\n        <AccountSidebar toggleBurgerMenu={handleBurgerMenu} />\n\n        <div>\n          <Header toggleBurgerMenu={handleBurgerMenu} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </SC.Wrapper>\n    </SC.FullPageWrapper>\n  );\n};\n"],"names":["Wrap","styled","Btn","ChangeLngElem","i18n","useTranslation","setSearchParams","useGetSearchParams","onchangeLngClick","evt","name","currentTarget","lang","changeLanguage","selectedLang","localStorage","getItem","type","onClick","src","USA","alt","style","width","UA","Overlay","p","theme","colors","backdropBackground","Inner","props","radii","normal","modalBackground","shadows","modal","CloseBtn","black","blue","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","closeModal","KeyboardEvent","code","window","addEventListener","body","overflow","removeEventListener","mobileMenu","classList","contains","createPortal","target","authPages","href","id","accountPages","useSearchParams","searchParams","get","token","ModalTitle","navBcg","fontWeights","semiBold","fontSizes","m","lineHeights","grey3","space","ModalList","ItemBtn","borders","none","white3","xl","hoverBackground","SecondaryItemBtn","grey2","black4","ModalForLogOut","onCloseModal","t","dispatch","useDispatch","handleLogout","logOut","location","reload","Button","design","medium","l","LogoutBtn","useState","isModalOpen","setIsModalOpen","modalHandler","ButtonClose","black5","CloseSidebarBtn","closeBurgerMenu","MenuContainer","white","Sidebar","LogoWrapper","LogoImg","Title","fontFamily","logo","regular","xxxl","xxs","Span","NavTitle","xs","grey","s","NavList","Link","NavLink","navLink","blue3","AccountSidebar","toggleBurgerMenu","isDesktop","setIsDesktop","navigateByAccountPages","innerWidth","closeSidebar","event","srcSet","IMG","IMG2x","to","Header","UserInfo","ModalUserInfo","modalLink","modalUserRoot","coseModal","closeOnClick","Wrapper","invert","Text","AvatarUser","avatar","AvatarDefault","Avatar","IconWrapper","UserAvatar","user","useAuth","userName","split","avatarURL","showModal","setShowModal","ToogleBtn","themeSwitcher","HiddenTitle","ThemeToogle","newTheme","currentTheme","useSelector","getTheme","getNewTheme","changeTheme","ButtonOpen","OpenSidebarBtn","openBurgerMenu","ColorPicker","colorSwitcher","ColorToggle","HeaderTitle","columnHeader","MotivationWrapper","WrapperText","MotivationText","Accent","currentDay","MotivationGoose","data","useFetchTasksQuery","useLocation","length","pathname","includes","FullPageWrapper","mainBackground","taskCardBackground","UserPage","handleBurgerMenu","toggle","className","Suspense","fallback","Loader"],"sourceRoot":""}