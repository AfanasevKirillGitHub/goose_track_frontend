{"version":3,"file":"static/js/411.8c88399c.chunk.js","mappings":"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","sources":["hooks/useInput.ts","hooks/useValidation.ts","components/RegisterForm/RegisterForm1/RegisterForm1.styled.jsx","components/RegisterForm/RegisterForm1/RegisterForm1.tsx","components/RegisterForm/RegisterForm2/RegisterForm2.styled.jsx","components/RegisterForm/RegisterForm2/RegisterForm2.tsx","pages/RegisterPage/RegisterPage.styled.ts","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import { useValidation } from './useValidation';\nimport { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useInput = (initialValue: string, validations: ISetings) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === '') {\n      setIsDirty(false);\n    } else setIsDirty(true);\n  }, [value]);\n\n  return {\n    value,\n    onChange,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useValidation = (value: string, validations: ISetings) => {\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, isConfirmError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < (validations[validation] as number)\n            ? setMinLengthError(true)\n            : setMinLengthError(false);\n          break;\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation] && value !== ''\n            ? isConfirmError(true)\n            : isConfirmError(false);\n          break;\n        default:\n          console.log('нет такой проверки');\n      }\n    }\n  }, [value, validations]);\n\n  return {\n    minLengthError,\n    emailError,\n    confirmError,\n  };\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608;\n    height: 583;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    // height: 587px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 13px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\nexport const Google = styled.a`\n margin-bottom: 13px;\n height: 24px\n\n`\nexport const Eye = styled.span`\n    position: absolute;\n    right: 15px;\n    top: 55%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: #F59256;\n\n    @media (min-width: 768px) {\n        right: 20px;  \n    }\n`\n\n","import { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport * as SC from './RegisterForm1.styled';\nimport { useInput } from '../../../hooks/useInput';\nimport { FcGoogle } from 'react-icons/fc';\nimport { useState } from 'react';\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\n\ninterface IProps {\n  onToggle: () => void;\n  getData: (data: IFormOneData) => void;\n}\n\nexport const RegisterForm1 = ({ onToggle, getData }: IProps) => {\n  const { t } = useTranslation();\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { minLength: 6 });\n  const confirmPassword = useInput('', { isSamePassword: password.value });\n\n  const onNextForm = () => {\n    getData({ email: email.value, password: password.value });\n    onToggle();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Google href=\"https://your-tasks-hv5t.onrender.com/api/auth/google\">\n        <FcGoogle style={{ width: '1.5em', height: '1.5em' }} />\n      </SC.Google>\n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((email.isDirty &&\n                !email.emailError &&\n                '1px solid green') as string) ||\n              ((email.isDirty &&\n                email.emailError &&\n                '1px solid red') as string),\n          }}\n          type=\"email\"\n          value={email.value}\n          onChange={e => email.onChange(e)}\n          name=\"email\"\n          placeholder={t('Email')!}\n          required\n        />\n        {(email.isDirty && email.emailError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Email')}\n          </SC.Notification>\n        )) ||\n          (email.isDirty && !email.emailError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Email is correct')}\n            </SC.Notification>\n          ))}\n      </SC.Div>\n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((password.isDirty &&\n                !password.minLengthError &&\n                '1px solid green') as string) ||\n              ((password.isDirty &&\n                password.minLengthError &&\n                '1px solid red') as string),\n          }}\n          type={passwordType}\n          value={password.value}\n          onChange={e => password.onChange(e)}\n          name=\"password\"\n          placeholder={t('Password')!}\n          required\n        />\n        {password.isDirty && password.minLengthError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Password')}\n          </SC.Notification>\n        )}\n        {password.isDirty && !password.minLengthError && (\n          <SC.Notification style={{ color: 'green' }}>\n            {t('Password is correct')}\n          </SC.Notification>\n        )}\n        <SC.Eye\n          onClick={() => {\n            passwordType === 'password'\n              ? setPasswordType('text')\n              : setPasswordType('password');\n          }}\n        >\n          {passwordType === 'password' ? <HiEye /> : <HiEyeOff />}\n        </SC.Eye>\n      </SC.Div>\n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((confirmPassword.isDirty &&\n                password.value === confirmPassword.value &&\n                '1px solid green') as string) ||\n              ((confirmPassword.isDirty &&\n                password.value !== confirmPassword.value &&\n                '1px solid red') as string),\n          }}\n          type={confirmPasswordType}\n          value={confirmPassword.value}\n          onChange={e => confirmPassword.onChange(e)}\n          name=\"confirmPassword\"\n          placeholder={t('Confirm Password')!}\n          required\n        />\n        {confirmPassword.isDirty &&\n          password.value === confirmPassword.value && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('confirmPassword is correct')}\n            </SC.Notification>\n          )}\n        {confirmPassword.isDirty &&\n          password.value !== confirmPassword.value && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('confirmPassword is not correct')}\n            </SC.Notification>\n          )}\n        <SC.Eye\n          onClick={() => {\n            confirmPasswordType === 'password'\n              ? setConfirmPasswordType('text')\n              : setConfirmPasswordType('password');\n          }}\n        >\n          {confirmPasswordType === 'password' ? <HiEye /> : <HiEyeOff />}\n        </SC.Eye>\n      </SC.Div>\n      <SC.Button\n        disabled={!confirmPassword.confirmError}\n        type=\"button\"\n        onClick={onNextForm}\n      >\n        {t('Next')}\n      </SC.Button>\n      <p>\n        {t('Already have an account')}?{' '}\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`\nexport const Button1 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n// margin-bottom:not(:last-child) : 12px\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 12px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 16px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const Button2 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\n\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608px;\n    height: 643px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    height: 667px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\n\n\n","import { FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useTranslation } from 'react-i18next';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport * as SC from './RegisterForm2.styled';\nimport { useInput } from '../../../hooks/useInput';\n\ninterface IProps {\n  onToggle: () => void;\n  dataForm1: IFormOneData | {};\n}\n\nexport const RegisterForm2 = ({ onToggle, dataForm1 }: IProps) => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const name = useInput('', { minLength: 2 });\n  const city = useInput('', { minLength: 3 });\n  const phone = useInput('', { minLength: 10 });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    const payload: ICredentials = {\n      ...(dataForm1 as {\n        email: string;\n        password: string;\n      }),\n      name: name.value,\n      city: city.value,\n      phone: phone.value,\n    };\n\n    dispatch(signUp(payload));\n    form.reset();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((name.isDirty &&\n                  !name.minLengthError &&\n                  '1px solid green') as string) ||\n                ((name.isDirty &&\n                  name.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => name.onChange(e)}\n            value={name.value}\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('Name')!}\n            required\n          />\n          {name.isDirty && name.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your name pls')}\n            </SC.Notification>\n          )}\n          {name.isDirty && !name.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Name is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((city.isDirty &&\n                  !city.minLengthError &&\n                  '1px solid green') as string) ||\n                ((city.isDirty &&\n                  city.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => city.onChange(e)}\n            value={city.value}\n            type=\"text\"\n            name=\"city\"\n            placeholder={t('City, Region')!}\n            required\n          />\n          {city.isDirty && city.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your city pls')}\n            </SC.Notification>\n          )}\n          {city.isDirty && !city.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('City is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((phone.isDirty &&\n                  !phone.minLengthError &&\n                  '1px solid green') as string) ||\n                ((phone.isDirty &&\n                  phone.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => phone.onChange(e)}\n            value={phone.value}\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={t('Mobile Phone')!}\n            required\n          />\n          {phone.isDirty && phone.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your phone pls')}\n            </SC.Notification>\n          )}\n          {phone.isDirty && !phone.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Phone is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n\n        <SC.Button1\n          disabled={\n            name.minLengthError || city.minLengthError || phone.minLengthError\n          }\n          type=\"submit\"\n        >\n          {t('Registration')}\n        </SC.Button1>\n        <SC.Button2 onClick={onToggle} type=\"button\">\n          {t('Back')}\n        </SC.Button2>\n      </SC.Form>\n      <p>\n        {t('Already have an account')}?\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import { RegisterForm1 } from '../../components/RegisterForm/RegisterForm1/RegisterForm1';\nimport { RegisterForm2 } from '../../components/RegisterForm/RegisterForm2/RegisterForm2';\nimport { useState } from 'react';\nimport * as SC from './RegisterPage.styled';\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  const [Step1, setStep1] = useState<boolean>(true);\n  const [dataForm1, setDataForm1] = useState<IFormOneData | {}>({});\n\n  const toggleForm = () => {\n    setStep1(!Step1);\n  };\n\n  const getDataForm1 = (data: IFormOneData) => {\n    setDataForm1(data);\n  };\n  return (\n    <SC.Main>\n      {Step1 ? (\n        <RegisterForm1 getData={getDataForm1} onToggle={toggleForm} />\n      ) : (\n        <RegisterForm2 dataForm1={dataForm1} onToggle={toggleForm} />\n      )}\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","confirmError","isConfirmError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","Input","styled","Button","InnerDiv","Title","Div","Notification","Google","Eye","RegisterForm1","onToggle","getData","t","useTranslation","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","email","isEmail","password","minLength","confirmPassword","isSamePassword","href","style","width","height","border","type","name","placeholder","required","color","onClick","disabled","to","Button1","Button2","Form","RegisterForm2","dataForm1","dispatch","useDispatch","city","phone","onSubmit","event","preventDefault","form","currentTarget","payload","signUp","reset","autoComplete","Main","RegisterPage","Step1","setStep1","setDataForm1","toggleForm","data"],"sourceRoot":""}