{"version":3,"file":"static/js/155.5eb5c4d0.chunk.js","mappings":"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","sources":["hooks/useGetSearchParams.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","pages/CurrentDayPage/CurrentDayPage.styled.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","pages/CurrentDayPage/CurrentDayPage.tsx"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\n\nexport const useGetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const lang = searchParams.get('lang') ?? 'en';\n  const token = searchParams.get('token') ?? '';\n\n  return { lang, token, setSearchParams };\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CalendarMonitorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 32px;\n  /* background-color: #565759; */\n  width: 100%;\n`;\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const TextWrapperOutline = styled.div`\n  background-color: #3e85f3;\n  padding: 8px 12px;\n  border-radius: 8px;\n`;\n\nexport const TextWrapper = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 0.9;\n  margin-right: 10px;\n  text-transform: uppercase;\n`;\n\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  margin-left: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ButtonWrapper = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 10px 10px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  color: #616161;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: #3e85f3;\n  padding: 8px 16px;\n  background-color: #e3f3ff;\n  &.active {\n    background-color: #3e85f350;\n  }\n`;\n\nexport const LinkMonth = styled(Link)`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const LinkDay = styled(Link)`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport 'moment/locale/uk';\n\nimport * as SC from './CalendarMonitor.styled';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n  currentDay?: boolean;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n  currentDay,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <SC.CalendarMonitorWrapper>\n      <SC.LeftWrapper>\n        <SC.TextWrapperOutline>\n          {currentDay && <SC.TextWrapper>{today.format('D')}</SC.TextWrapper>}\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </SC.TextWrapperOutline>\n        <SC.ButtonsWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={prevHandler}>\n            &lt;\n          </SC.ButtonWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={todayHandler}>\n            {t('Today')}\n          </SC.ButtonWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={nextHandler}>\n            &gt;\n          </SC.ButtonWrapper>\n        </SC.ButtonsWrapper>\n      </SC.LeftWrapper>\n      <SC.ButtonsWrapper>\n        <SC.LinkMonth to=\"/user/calendar\">{t('Month')}</SC.LinkMonth>\n        <SC.LinkDay to={`/user/day/${today.format('YYYY-MM-DD')}`}>\n          {t('Day')}\n        </SC.LinkDay>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","import styled from 'styled-components';\n\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isHeader?: boolean;\n  isSelectedMonth?: boolean;\n}\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* background-color: ${p => (p.isWeekend ? '#272829' : '#1e1f21')}; */\n  color: black;\n  ${p => p.isHeader && 'text-align:center'}\n  width: 27px;\n  height: 26px;\n\n  font-weight: 700;\n  color: #343434;\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const WeekWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  /* align-items: center; */\n  justify-content: space-between;\n  width: 100%;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  padding: 10px 46px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.286;\n  color: #616161;\n`;\n\n// export const DaysWrapper = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-around;\n// `;\n\nexport const DayOfWeek = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n`;\n\n// export const WeekAndDayWrapper = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-around;\n//   width: 100%;\n// `;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-width: 1200px;\n  max-height: 90%;\n  background-color: ${p => p.theme.colors.modalBackground};\n  border: 1px solid;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 19px;\n  right: 19px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.navBcg};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const coseModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <ImCross size=\"16\" />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import { useState } from 'react';\n// import { useForm } from 'react-hook-form';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport { useAddTasksMutation } from '../../redux/task/taskOperations';\n\nexport const TaskForm = ({ fieldsData }) => {\n  const { lang } = useGetSearchParams();\n  console.log('lang :>> ', lang);\n\n  const [title, setTitle] = useState(fieldsData?.title[lang] ?? '');\n  const [start, setStart] = useState(fieldsData?.start ?? '');\n  const [end, setEnd] = useState(fieldsData?.end ?? '');\n  const [priority, setPriority] = useState(fieldsData?.priority ?? '');\n\n  const [addTask, { isLoading: taskIsLoading }] = useAddTasksMutation();\n\n  const buttonName = fieldsData ? 'Edit' : 'Add';\n\n  // console.log('title :>> ', title);\n\n  //   const {\n  //     register,\n  //     handleSubmit,\n  //     formState: { errors },\n  //   } = useForm();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    // console.log('form >>> ', e.target);\n\n    const formData = new FormData(e.target);\n\n    const taskData = {\n      title: { [lang]: formData.get('title') },\n      start: formData.get('start'),\n      end: formData.get('end'),\n      priority: formData.get('priority'),\n      date: Date.now(),\n      status: fieldsData?.status ?? 'todo',\n    };\n\n    console.log('taskData :>> ', taskData);\n    addTask(taskData);\n  };\n\n  const PRIORITY = ['low', 'medium', 'high'];\n\n  const onInput = e => {\n    switch (e.target.name) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'start':\n        setStart(e.target.value);\n        break;\n\n      case 'end':\n        setEnd(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  console.log('taskIsLoading :>> ', taskIsLoading);\n\n  return (\n    <form\n      style={{\n        width: '303px',\n        paddingTop: '48px',\n        paddingBottom: '40px',\n        paddingLeft: '18px',\n        paddingRight: '18px',\n        backgroundColor: 'white',\n      }}\n      onSubmit={onSubmit}\n    >\n      <label>\n        Title\n        <input name=\"title\" type=\"text\" value={title} onInput={onInput} />\n      </label>\n      <label>\n        Start\n        <input\n          name=\"start\"\n          id=\"start\"\n          type=\"text\"\n          value={start}\n          onInput={onInput}\n        />\n      </label>\n      <label>\n        End\n        <input name=\"end\" id=\"end\" type=\"text\" value={end} onInput={onInput} />\n      </label>\n      {/* Блок PRIORITY */}\n      <div>\n        {PRIORITY.map((el, idx) => {\n          const sellectedByDefault = PRIORITY[idx] === PRIORITY[0];\n\n          const isSelected = priority\n            ? PRIORITY[idx].includes(priority)\n            : sellectedByDefault;\n\n          return (\n            <label key={el}>\n              <input\n                name=\"priority\"\n                type=\"radio\"\n                value={el}\n                defaultChecked={isSelected}\n                onChange={e => setPriority(e.target.value)}\n              />\n              {el}\n            </label>\n          );\n        })}\n      </div>\n      {!taskIsLoading && <button type=\"submit\">{buttonName}</button>}\n    </form>\n  );\n};\n","import { Modal } from '../Modal/Modal';\nimport { TaskForm } from '../TaskForm';\n\nexport const TaskModal = ({ data, closeModal }) => {\n  console.log('data :>> ', data);\n  return (\n    <>\n      <Modal toggleModal={closeModal}>\n        <TaskForm fieldsData={data} />\n      </Modal>\n    </>\n  );\n};\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { CalendarMonitor } from '../CalendarPage/CalendarMonitor/CalendarMonitor';\nimport * as SC from './CurrentDayPage.styled';\nimport { TaskModal } from '../../components/TaskModal';\nimport { useNavigate } from 'react-router-dom';\n\nexport const CurrentDayPage = () => {\n  const { current } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  moment.updateLocale('en', { day: { dow: 1 } });\n  moment.locale(t(`lang`)!);\n\n  const [today, setToday] = useState(moment(current));\n  const [selectedDay, setSelectedDay] = useState(moment(current));\n\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const totalDays = 7;\n  const startDay = today.clone().startOf('isoWeek');\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const prevHandler = () => {\n    const prevDay = today.clone().subtract(1, 'day');\n    if (prevDay.isBefore(startDay)) {\n      setSelectedDay(startDay);\n      setToday(startDay);\n      navigate(`/user/day/${startDay.format('YYYY-MM-DD')}`);\n    } else {\n      setSelectedDay(prevDay);\n      setToday(prevDay);\n      navigate(`/user/day/${prevDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const nextHandler = () => {\n    const nextDay = today.clone().add(1, 'day');\n    if (nextDay.isAfter(startDay.clone().add(6, 'day'))) {\n      setSelectedDay(startDay.clone().add(6, 'day'));\n      setToday(startDay.clone().add(6, 'day'));\n      navigate(\n        `/user/day/${startDay.clone().add(6, 'day').format('YYYY-MM-DD')}`\n      );\n    } else {\n      setToday(nextDay);\n      setSelectedDay(nextDay);\n      navigate(`/user/day/${nextDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const todayHandler = () => {\n    setSelectedDay(moment());\n    setToday(moment());\n    navigate(`/user/day/${moment().format('YYYY-MM-DD')}`);\n  };\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return selectedDay.isSame(day, 'day');\n  };\n\n  const toggleModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  return (\n    <main style={{ width: '1151px' }}>\n      <SC.PageWrapper>\n        <CalendarMonitor\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n          todayHandler={todayHandler}\n          today={today}\n          currentDay={true}\n        />\n        <SC.WeekWrapper>\n          {daysArray.map(dayItem => (\n            <SC.DayOfWeek key={dayItem.format('DDMMYY')}>\n              <span>{dayItem.format('ddd').toUpperCase()}</span>\n              <SC.CellWrapper>\n                {isCurrentDay(dayItem) ? (\n                  <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </SC.CellWrapper>\n            </SC.DayOfWeek>\n          ))}\n        </SC.WeekWrapper>\n      </SC.PageWrapper>\n\n      <button type=\"button\" onClick={toggleModal}>\n        Open modal\n      </button>\n      {isOpenModal && <TaskModal data={null} closeModal={toggleModal} />}\n    </main>\n  );\n};\n"],"names":["useGetSearchParams","useSearchParams","searchParams","setSearchParams","lang","get","token","CalendarMonitorWrapper","styled","LeftWrapper","TextWrapperOutline","TextWrapper","TitleWrapper","ButtonsWrapper","ButtonWrapper","Link","NavLink","LinkMonth","LinkDay","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","currentDay","t","useTranslation","format","type","onClick","to","PageWrapper","CellWrapper","p","isWeekend","isHeader","CurrentDay","props","theme","colors","blue","white","radii","normal","WeekWrapper","DayOfWeek","Overlay","backdropBackground","Inner","modalBackground","CloseBtn","navBcg","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","coseModal","evt","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","target","currentTarget","size","TaskForm","fieldsData","console","log","useState","title","setTitle","start","setStart","end","setEnd","priority","setPriority","useAddTasksMutation","addTask","taskIsLoading","isLoading","buttonName","PRIORITY","onInput","e","name","value","width","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","onSubmit","preventDefault","formData","FormData","taskData","date","Date","now","status","id","map","el","idx","sellectedByDefault","isSelected","includes","defaultChecked","onChange","TaskModal","data","closeModal","CurrentDayPage","current","useParams","navigate","useNavigate","moment","day","dow","setToday","selectedDay","setSelectedDay","isOpenModal","setIsOpenModal","startDay","clone","startOf","subtract","daysArray","Array","add","isCurrentDay","isSame","prevDay","isBefore","nextDay","isAfter","dayItem","toUpperCase"],"sourceRoot":""}