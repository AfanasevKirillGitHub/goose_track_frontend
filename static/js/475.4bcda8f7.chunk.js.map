{"version":3,"file":"static/js/475.4bcda8f7.chunk.js","mappings":"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","sources":["components/Account/AccountSidebar.styled.jsx","components/LogOut/LogOut.styled.jsx","components/LogOut/LogOut.jsx","components/Account/AccountSidebar.jsx","helpers/pages.ts","pages/CalendarPage/CalendarHeader/CalendarHeader.styled.ts","pages/CalendarPage/CalendarHeader/CalendarHeader.tsx","pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","pages/CalendarPage/CalendarGrid/CalendarGrid.styled.ts","pages/CalendarPage/CalendarGrid/CalendarGrid.tsx","pages/CalendarPage/CalendarPage.styled.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Sidebar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 289px;\n  height: 812px;\n  background-color: #fff;\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    height: 1024px;\n  }\n  @media screen and (min-width: 1440px) {\n    height: 770px;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  margin: 0 auto;\n  width: 71px;\n  height: 68px;\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin: 32px 64px 32px 24px;\n`;\n\nexport const Title = styled.h1`\n  color: #3e85f3;\n  font-family: 'Coolvetica';\n  font-size: 24px;\n  line-height: 1.5;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n`;\n\nexport const Span = styled.span`\n  font-style: italic;\n`;\n\nexport const NavTitle = styled.h2`\n  margin-left: 24px;\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #7e7d82;\n`;\n\nexport const NavList = styled.ul`\n  margin-top: 32px;\n  margin-bottom: 511px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 511px;\n  text-decoration: none;\n  list-style: none;\n`;\n\nexport const NavItem = styled.li`\n  margin: 0;\n  width: 241px;\n  height: 56px;\n`;\n\nexport const Link = styled(NavLink)`\n  display: block;\n  padding-top: 18px;\n  padding-bottom: 18px;\n  padding-left: 54px;\n  text-decoration: none;\n\n  font-family: 'Inter';\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 19px;\n  color: #84828a;\n  &.active {\n    background: #e3f3ff;\n    border-radius: 8px;\n    color: #3e85f3;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-left: 24px;\n  text-decoration: none;\n  width: 131px;\n  height: 46px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${props => props.theme.radii.medium};\n  border: ${props => props.theme.borders.none};\n  margin-right: ${props => props.theme.space[4]}px;\n  margin-bottom: 200px;\n  margin-top: 32px;\n  color: ${props => (props.to === '/login' ? '#3E85F3' : '#FFFFFF')};\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  background-color: ${props => (props.to === '/login' ? '#FFFFFF' : '#3E85F3')};\n  box-shadow: 0 0 15px rgba(236, 236, 236, 0.5);\n\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n    color: #fff;\n  }\n  @media screen and (min-width: 768px) {\n    width: 121px;\n    height: 49px;\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logOut } from '../../redux/auth/authOperations';\nimport { MdLogout } from 'react-icons/md';\nimport * as SC from './LogOut.styled';\n\nexport const LogOut = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <SC.Button type=\"button\" onClick={() => dispatch(logOut())}>\n        Log Out\n        <MdLogout />\n      </SC.Button>\n    </>\n  );\n};\n","import * as SC from './AccountSidebar.styled';\nimport goose from '../../images/goose.png';\nimport { useTranslation } from 'react-i18next';\nimport { accountPages } from '../../helpers/pages';\nimport { LogOut } from '../LogOut/LogOut';\n\nexport const AccountSidebar = () => {\n  const { t } = useTranslation();\n\n  return (\n    <SC.Sidebar>\n      <SC.LogoWrapper>\n        <SC.LogoImg src={goose} alt=\"logo goose\" />\n        <SC.Title>\n          <SC.Span>Goose</SC.Span>Track\n        </SC.Title>\n      </SC.LogoWrapper>\n\n      <SC.NavTitle>User Panel</SC.NavTitle>\n      <SC.NavList>\n        {accountPages.map(({ href, name, id }) => (\n          <SC.NavItem key={id}>\n            <SC.Link to={href}>{t(`navigation.${name}`)}</SC.Link>\n          </SC.NavItem>\n        ))}\n      </SC.NavList>\n      <LogOut />\n    </SC.Sidebar>\n  );\n};\n","import { mainNav } from './interfaces/mainNav/mainNav';\n\nexport const authPages: mainNav[] = [\n  { name: 'Sign up', href: '/registration', id: 1 },\n  { name: 'Login', href: '/login', id: 2 },\n];\n\nexport const accountPages: mainNav[] = [\n  { name: 'My account', href: '/account', id: 3 },\n  { name: 'Calendar', href: '/calendar', id: 4 },\n];\n","import styled from 'styled-components';\n\nexport const CalendarHeaderWrapper = styled.span`\n  background-color: #2a2b2d;\n  height: 48px;\n`;\n","import * as SC from './CalendarHeader.styled';\n\nexport const CalendarHeader = () => {\n  return <SC.CalendarHeaderWrapper></SC.CalendarHeaderWrapper>;\n};\n","import styled from 'styled-components';\n\nexport const CalendarMonitorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  background-color: #565759;\n`;\n\nexport const TextWrapper = styled.span`\n  font-size: 32px;\n  margin-right: 10px;\n`;\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n  margin-right: 8px;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ButtonWrapper = styled.button`\n  border: unset;\n  cursor: pointer;\n  background-color: #565759;\n  height: 20px;\n  margin-right: 2px;\n  border-radius: 4px;\n  color: #e6e6e6;\n`;\n","import { NavLink } from 'react-router-dom';\nimport * as SC from './CalendarMonitor.styled';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n}: IProps) => {\n  return (\n    <SC.CalendarMonitorWrapper>\n      <div>\n        <div>\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </div>\n        <SC.ButtonsWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={prevHandler}>\n            &lt;\n          </SC.ButtonWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={todayHandler}>\n            Today\n          </SC.ButtonWrapper>\n          <SC.ButtonWrapper type=\"button\" onClick={nextHandler}>\n            &gt;\n          </SC.ButtonWrapper>\n        </SC.ButtonsWrapper>\n      </div>\n      <SC.ButtonsWrapper>\n        <NavLink to=\"/calendar\">Month/</NavLink>\n        <NavLink to=\"/calendar/day\">Day</NavLink>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","import styled from 'styled-components';\n\ninterface ICalendarGridProps {\n  isHeader?: boolean;\n}\n\ninterface ITopRopperInCellProps {\n  justifyContent: string;\n}\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isHeader?: boolean;\n  isSelectedMonth?: boolean;\n}\n\nexport const CalendarGrid = styled.div<ICalendarGridProps>`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  /* grid-template-rows: repeat(6, 1fr); */\n  grid-gap: 1px;\n  background-color: ${p => (p.isHeader ? '#1e1f21' : '#4d4c4d')};\n  ${p => p.isHeader && 'border-bottom: 1px solid #4d4c4d'}\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  min-width: 120px;\n  min-height: ${p => (p.isHeader ? 40 : 80)}px;\n  background-color: ${p => (p.isWeekend ? '#272829' : '#1e1f21')};\n  color: ${p => (p.isSelectedMonth ? 'wheat' : '#4d4c4d')};\n  ${p => p.isHeader && 'text-align:center'}\n`;\n\nexport const TopRopperInCell = styled.div<ITopRopperInCellProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${p => (p.justifyContent ? p.justifyContent : 'flex-start')};\n`;\n\nexport const DayWrapper = styled.div`\n  width: 33px;\n  height: 33px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 2px;\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: red;\n  border-radius: 50%;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ShowDaywrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import moment from 'moment';\nimport * as SC from './CalendarGrid.styled';\n\ninterface IProps {\n  startDay: moment.Moment;\n  today: moment.Moment;\n}\n\nexport const CalendarGrid = ({ startDay, today }: IProps) => {\n  const totalDays = 42;\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return moment().isSame(day, 'day');\n  };\n\n  const isSelectedMonth = (month: moment.Moment): boolean => {\n    return today.isSame(month, 'month');\n  };\n\n  return (\n    <>\n      <SC.CalendarGrid isHeader>\n        {[...Array(7)].map((_, idx) => (\n          <SC.CellWrapper isHeader key={idx} isSelectedMonth={true}>\n            {moment()\n              .day(idx + 1)\n              .format('ddd')\n              .toUpperCase()}\n          </SC.CellWrapper>\n        ))}\n      </SC.CalendarGrid>\n      <SC.CalendarGrid>\n        {daysArray.map(dayItem => (\n          <SC.CellWrapper\n            key={dayItem.format('DDMMYY')}\n            isWeekend={dayItem.day() === 6 || dayItem.day() === 0}\n            isSelectedMonth={isSelectedMonth(dayItem)}\n          >\n            <SC.TopRopperInCell justifyContent={'flex-end'}>\n              <SC.ShowDaywrapper>\n                <SC.DayWrapper>\n                  {isCurrentDay(dayItem) ? (\n                    <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                  ) : (\n                    dayItem.format('D')\n                  )}\n                </SC.DayWrapper>\n              </SC.ShowDaywrapper>\n              <ul style={{ paddingLeft: '10px' }}>\n                <li>tasks</li>\n                <li>tasks</li>\n              </ul>\n            </SC.TopRopperInCell>\n          </SC.CellWrapper>\n        ))}\n      </SC.CalendarGrid>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ShadowWrapper = styled.div`\n  border-radius: 8px;\n  height: 100%;\n  overflow: hidden;\n  border-top: 1px solid #737374;\n  border-left: 1px solid #464648;\n  border-right: 1px solid #464648;\n  border-bottom: 2px solid #464648;\n  box-shadow: 0 0 0 1px #1a1a1a 0 8px 20px 6px #888;\n`;\n","// import { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { CalendarHeader } from './CalendarHeader/CalendarHeader';\nimport { CalendarMonitor } from './CalendarMonitor/CalendarMonitor';\nimport { CalendarGrid } from './CalendarGrid/CalendarGrid';\nimport { AccountSidebar } from '../../components/Account/AccountSidebar';\nimport * as SC from './CalendarPage.styled';\nimport { useState } from 'react';\n\nexport const CalendarPage = () => {\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  // const today = moment();\n  const [today, setToday] = useState(() => moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  //\n  // const startDayQuery = startDay.clone().format('X');\n  // const endDayQuery = startDay.clone().add(42, \"days\").format('X');\n  //\n  const prevHandler = () => {\n    setToday(prev => prev.clone().subtract(1, 'month'));\n  };\n  const nextHandler = () => {\n    setToday(prev => prev.clone().add(1, 'month'));\n  };\n  const todayHandler = () => {\n    setToday(moment());\n  };\n\n  // const endDay = moment().endOf('month').endOf('week');\n\n  // const calendar = [];\n  // const day = startDay.clone();\n  // while (!day.isAfter(endDay)) {\n  //   calendar.push(day.clone());\n  //   day.add(1, 'day');\n  // }\n\n  // startDay.format('YYYY-MM-DD');\n\n  // const { t } = useTranslation();\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <AccountSidebar />\n      <SC.ShadowWrapper>\n        <CalendarHeader />\n        <CalendarMonitor\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n          todayHandler={todayHandler}\n          today={today}\n        />\n        <CalendarGrid startDay={startDay} today={today} />\n      </SC.ShadowWrapper>\n    </div>\n  );\n};\n"],"names":["Sidebar","styled","LogoImg","LogoWrapper","Title","Span","NavTitle","NavList","NavItem","Link","NavLink","Button","props","theme","radii","medium","borders","none","space","to","fontSizes","s","fontWeights","semiBold","LogOut","dispatch","useDispatch","type","onClick","logOut","AccountSidebar","t","useTranslation","src","goose","alt","accountPages","href","name","id","authPages","CalendarHeaderWrapper","CalendarHeader","CalendarMonitorWrapper","TextWrapper","TitleWrapper","ButtonsWrapper","ButtonWrapper","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","format","CalendarGrid","p","isHeader","CellWrapper","isWeekend","isSelectedMonth","TopRopperInCell","justifyContent","DayWrapper","CurrentDay","ShowDaywrapper","startDay","day","clone","subtract","daysArray","Array","map","add","isCurrentDay","moment","isSame","_","idx","toUpperCase","dayItem","month","style","paddingLeft","ShadowWrapper","CalendarPage","week","dow","useState","setToday","startOf","display","prev"],"sourceRoot":""}