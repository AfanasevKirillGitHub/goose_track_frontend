{"version":3,"file":"static/js/186.411b0e66.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","pages/CurrentDayPage/CurrentDayPage.styled.ts","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","pages/CurrentDayPage/CurrentDayPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 360px;\n  max-width: 1200px;\n  max-height: 90%;\n  padding: 40px 28px;\n  border-radius: ${props => props.theme.radii.normal};\n  background-color: ${p => p.theme.colors.modalBackground};\n  box-shadow: ${props => props.theme.shadows.modal};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 19px;\n  right: 19px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.black};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n      color: ${p => p.theme.colors.blue};\n      transform: scale(1.1);\n    }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { SVG } from '../../images';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const closeModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', closeModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <SVG.CloseIcon />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CalendarMonitorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 32px;\n  padding-bottom: 32px;\n  width: 100%;\n`;\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const TextWrapperOutline = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #3e85f3;\n  color: ${props => props.theme.colors.white};\n  padding: 8px 12px;\n  border-radius: 8px;\n  min-width: 173px;\n  height: 100%;\n`;\n\nexport const TextWrapper = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 0.9;\n  text-transform: uppercase;\n  color: #ffffff;\n  min-width: 24px;\n\n  &:not(:last-of-type) {\n    margin-right: 10px;\n  }\n`;\n\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  margin-left: 16px;\n  display: flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n`;\n\nexport const ChevronButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  color: #616161;\n\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n\nexport const TodayButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n  color: #616161;\n\n  margin-left: 16px;\n`;\n\nexport const ButtonWrapper = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  color: #616161;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #3e85f3;\n  padding: 9px 16px;\n  background-color: #e3f3ff;\n  min-width: 82px;\n  &.active.act {\n    background-color: #3e85f350;\n  }\n`;\n\nexport const LinkMonth = styled(Link)`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const LinkDay = styled(Link)`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport 'moment/locale/uk';\n\nimport * as SC from './CalendarMonitor.styled';\nimport { SVG } from '../../../images';\nimport { useLocation } from 'react-router-dom';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler?: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n  currentDay?: boolean;\n  nextDisabled?: boolean;\n  prevDisabled?: boolean;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n  currentDay,\n  nextDisabled,\n  prevDisabled,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n  console.log(pathname);\n\n  return (\n    <SC.CalendarMonitorWrapper>\n      <SC.LeftWrapper>\n        <SC.TextWrapperOutline>\n          {currentDay && <SC.TextWrapper>{today.format('D')}</SC.TextWrapper>}\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </SC.TextWrapperOutline>\n        <SC.ButtonsWrapper>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={prevHandler}\n            disabled={prevDisabled}\n            style={{\n              transform: 'rotate(180deg)',\n              color: prevDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={nextHandler}\n            disabled={nextDisabled}\n            style={{\n              color: nextDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n        </SC.ButtonsWrapper>\n        <SC.TodayButton type=\"button\" onClick={todayHandler}>\n          {t('Today')}\n        </SC.TodayButton>\n      </SC.LeftWrapper>\n      <SC.ButtonsWrapper>\n        <SC.LinkMonth\n          className={pathname.includes('day') ? '' : 'act'}\n          to=\"/user/calendar/month\"\n        >\n          {t('Month')}\n        </SC.LinkMonth>\n        <SC.LinkDay\n          className={pathname.includes('day') ? 'act' : ''}\n          to={`/user/calendar/month/day/${today.format('YYYY-MM-DD')}`}\n        >\n          {t('Day')}\n        </SC.LinkDay>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","import styled from 'styled-components';\n\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isHeader?: boolean;\n  isSelectedMonth?: boolean;\n}\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 32px;\n  padding-right: 32px;\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  ${p => p.isHeader && 'text-align:center'}\n  width: 27px;\n  height: 26px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.125;\n  color: #343434;\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const WeekWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n\n  justify-content: space-between;\n  width: 100%;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  padding: 10px 46px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.286;\n  color: #616161;\n`;\n\nexport const DayOfWeek = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n`;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAddTasksMutation } from '../../redux/task/taskOperations';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport 'moment/locale/uk';\n\nconst PRIORITY = ['low', 'medium', 'high'];\nconst taskCreateTime = moment(Date.now()).format('hh:mm');\n\nexport const TaskForm = ({ fieldsData }) => {\n  const addMinutes = minutes => +Date.now() + minutes * 60 * 1000;\n  //ts\n  // const lang = localStorage.getItem('i18nextLng') as string;\n\n  //js\n  const lang = localStorage.getItem('i18nextLng');\n\n  const defaultEndTime = moment(addMinutes(30)).format('hh:mm');\n\n  const { current } = useParams();\n\n  // const [title, setTitle] = useState(fieldsData?.title[lang] ?? '');\n  const [title, setTitle] = useState(fieldsData?.title ?? '');\n  const [start, setStart] = useState(fieldsData?.start ?? taskCreateTime);\n  const [end, setEnd] = useState(fieldsData?.end ?? defaultEndTime);\n  const [priority, setPriority] = useState(fieldsData?.priority ?? '');\n\n  const [addTask, { isLoading: taskIsLoading }] = useAddTasksMutation();\n  // const [{ isLoading: taskIsLoading }] = useAddTasksMutation();\n\n  const modalType = fieldsData.title\n    ? `Edit ${fieldsData.status}`\n    : `Add ${fieldsData.status}`;\n\n  // console.log('in form fieldsData :>> ', fieldsData);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  console.log('errors :>> ', errors);\n  // const onSubmit = e => {\n  //   e.preventDefault();\n\n  //   const formData = new FormData(e.target);\n\n  //   // const TEST_DATA = {\n  //   //   title: { en: 'form to back1' },\n  //   //   start: '2024-02-02',\n  //   //   end: '2024-05-02',\n  //   //   date: 'dateNow',\n  //   //   status: 'todo',\n  //   //   priority: 'high',\n  //   // };\n\n  //   const taskData = {\n  //     title: { [lang]: formData.get('title') },\n  //     start: formData.get('start'),\n  //     end: formData.get('end'),\n  //     priority: formData.get('priority'),\n  //     date: current,\n  //     status: fieldsData?.status ?? 'todo',\n  //   };\n\n  //   // console.log('taskData :>> ', { data: taskData, lang });\n  //   console.log('taskData :>> ', taskData);\n  //   addTask({ data: taskData, lang });\n  // };\n  const onError = (errors, e) => {\n    const errorFields = Object.keys(errors);\n    const notifyErrors = () =>\n      errorFields.forEach(errorField => {\n        toast.error(`Field ${errorField} ${errors[errorField]?.message}`);\n      });\n\n    notifyErrors();\n  };\n  const onSubmit = (data, e) => {\n    const isValidStartTime = start >= taskCreateTime;\n    const isValidEndTime = start <= end;\n\n    if (!isValidStartTime) {\n      toast.error(\"Start time can't be in past!\");\n      setStart(taskCreateTime);\n    }\n\n    if (!isValidEndTime) {\n      toast.error(\"End time can't be lower of start time!\");\n      setEnd(defaultEndTime);\n    }\n\n    // console.log('taskData :>> ', { data: taskData, lang });\n    console.log('formData :>> ', data);\n\n    const taskData = { ...data, status: fieldsData.status, date: current };\n    console.log('formData :>> ', taskData);\n    // addTask({ data: taskData, lang });\n\n    addTask({ data: taskData, lang });\n  };\n\n  const onInput = e => {\n    console.log('e.target.name :>> ', e.target.name);\n    switch (e.target.name) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'start':\n        setStart(e.target.value);\n        break;\n\n      case 'end':\n        setEnd(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  // console.log('taskIsLoading :>> ', taskIsLoading);\n\n  return (\n    <form\n      style={{\n        width: '303px',\n        paddingTop: '48px',\n        paddingBottom: '40px',\n        paddingLeft: '18px',\n        paddingRight: '18px',\n        backgroundColor: 'white',\n      }}\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <label>\n        Title\n        <input\n          type=\"text\"\n          placeholder=\"Enter text\"\n          {...register('title', {\n            required: ' is requared!',\n            maxLength: {\n              value: 250,\n              message: `must be lower then 250 chars!`,\n            },\n          })}\n          name=\"title\"\n          value={title}\n          onInput={onInput}\n        />\n      </label>\n      <label>\n        Start\n        <input\n          type=\"time\"\n          {...register('start', {\n            required: 'is requared!',\n          })}\n          value={start}\n          onInput={onInput}\n        />\n      </label>\n      <label>\n        End\n        <input\n          {...register('end', {\n            required: 'is requared!',\n          })}\n          type=\"time\"\n          value={end}\n          onInput={onInput}\n        />\n      </label>\n      {/* Блок PRIORITY */}\n      <div>\n        {PRIORITY.map((el, idx) => {\n          const sellectedByDefault = PRIORITY[idx] === PRIORITY[0];\n\n          const isSelected = priority\n            ? PRIORITY[idx].includes(priority)\n            : sellectedByDefault;\n\n          return (\n            <label key={el}>\n              <input\n                {...register('priority', {\n                  validate: {\n                    priority: value =>\n                      PRIORITY.includes(value) || 'is not valid',\n                  },\n                })}\n                type=\"radio\"\n                value={el}\n                defaultChecked={isSelected}\n                onChange={e => setPriority(e.target.value)}\n              />\n              {el}\n            </label>\n          );\n        })}\n      </div>\n      {!taskIsLoading && <button type=\"submit\">{modalType}</button>}\n    </form>\n  );\n};\n","import { Modal } from '../Modal/Modal';\nimport { TaskForm } from '../TaskForm';\nimport { useState } from 'react';\n\nexport const TaskModal = ({ status, data }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  // console.log('data :>> ', data);\n  const formData = { ...data, status };\n  // console.log('formData :>> ', formData);\n  const toggleModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={toggleModal}>\n        Open modal for {status}\n      </button>\n      {isOpenModal && (\n        <Modal toggleModal={toggleModal}>\n          <TaskForm fieldsData={formData} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { CalendarMonitor } from '../CalendarPage/CalendarMonitor/CalendarMonitor';\nimport * as SC from './CurrentDayPage.styled';\nimport { TaskModal } from '../../components/TaskModal';\nimport { useNavigate } from 'react-router-dom';\n// import { ITaskToEdit } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\n\nexport const CurrentDayPage = () => {\n  const { current } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  // const lang = localStorage.getItem('i18nextLng');\n\n  // Fake Modal Data ---------------------\n\n  const STATUS = ['todo', 'inprogress', 'done'];\n  // const PRIORITY = ['low', 'medium', 'high'];\n\n  // const TEMP_MODAL_DATA = {};\n  // const TEMP_STATUS = 'todo';\n  // const TEMP_MODAL_DATA: ITaskToEdit = {\n  //   title: { [lang as string]: 'text' },\n  //   start: '13:00',\n  //   end: '13:13',\n  //   date: 'data from back',\n  //   status: TEMP_STATUS,\n  //   priority: 'high1',\n  // };\n\n  const TEMP_MODAL_DATA = {\n    title: 'Edit me',\n    start: '11:00',\n    end: '12:00',\n    date: '2023-04-25',\n    priority: 'low',\n  };\n\n  // Fake Modal Data ---------------------\n\n  moment.updateLocale('en', { day: { dow: 1 } });\n  moment.locale(t(`lang`)!);\n\n  const [today, setToday] = useState(moment(current));\n\n  // const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const totalDays = 7;\n  const startDay = today.clone().startOf('isoWeek');\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const [nextDisabled, setNextDisabled] = useState(() => {\n    const nextDay = today.clone().add(1, 'day');\n    return nextDay.isAfter(startDay.clone().add(6, 'day')) ? true : false;\n  });\n  const [prevDisabled, setPrevDisabled] = useState(() => {\n    const prevDay = today.clone().subtract(1, 'day');\n    return prevDay.isBefore(startDay) ? true : false;\n  });\n\n  const prevHandler = () => {\n    const prevDay = today.clone().subtract(1, 'day');\n    if (prevDay.toLocaleString() === startDay.toLocaleString()) {\n      setPrevDisabled(true);\n    }\n\n    if (prevDay.isBefore(startDay)) {\n      setPrevDisabled(true);\n      setToday(startDay);\n      navigate(`/user/calendar/month/day/${startDay.format('YYYY-MM-DD')}`);\n    } else {\n      setNextDisabled(false);\n      setToday(prevDay);\n      navigate(`/user/calendar/month/day/${prevDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const nextHandler = () => {\n    const nextDay = today.clone().add(1, 'day');\n    if (nextDay.isAfter(startDay.clone().add(5, 'day'))) {\n      setNextDisabled(true);\n      setToday(startDay.clone().add(6, 'day'));\n      navigate(\n        `/user/calendar/month/day/${startDay\n          .clone()\n          .add(6, 'day')\n          .format('YYYY-MM-DD')}`\n      );\n    } else {\n      setPrevDisabled(false);\n\n      setToday(nextDay);\n      navigate(`/user/calendar/month/day/${nextDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const todayHandler = () => {\n    setPrevDisabled(false);\n    setNextDisabled(false);\n    setToday(moment());\n    navigate(`/user/calendar/month/day/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return today.isSame(day, 'day');\n  };\n\n  // const toggleModal = () => {\n  //   setIsOpenModal(!isOpenModal);\n  // };\n\n  const modalData = Object.keys(TEMP_MODAL_DATA).length\n    ? TEMP_MODAL_DATA\n    : null;\n  return (\n    <main style={{ width: '1151px' }}>\n      <SC.PageWrapper>\n        <CalendarMonitor\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n          todayHandler={todayHandler}\n          today={today}\n          currentDay={true}\n          nextDisabled={nextDisabled}\n          prevDisabled={prevDisabled}\n        />\n        <SC.WeekWrapper>\n          {daysArray.map(dayItem => (\n            <SC.DayOfWeek key={dayItem.format('DDMMYY')}>\n              <span>{dayItem.format('ddd').toUpperCase()}</span>\n              <SC.CellWrapper>\n                {isCurrentDay(dayItem) ? (\n                  <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </SC.CellWrapper>\n            </SC.DayOfWeek>\n          ))}\n        </SC.WeekWrapper>\n      </SC.PageWrapper>\n\n      <ul>\n        {STATUS.map(col => (\n          <li key={col}>\n            {/* <button type=\"button\" onClick={toggleModal}>\n              Open modal for {col}\n            </button> */}\n            {/* {isOpenModal && (\n              <TaskModal\n                status={col}\n                data={modalData}\n                closeModal={toggleModal}\n              />\n            )} */}\n            <>\n              <p>\n                ADD task button\n                <TaskModal status={col} data={null} />\n              </p>\n\n              <p>\n                EDIT task button\n                <TaskModal status={col} data={modalData} />\n              </p>\n              <br />\n            </>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n"],"names":["Overlay","styled","p","theme","colors","backdropBackground","Inner","props","radii","normal","modalBackground","shadows","modal","CloseBtn","black","blue","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","closeModal","evt","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","target","currentTarget","type","CalendarMonitorWrapper","LeftWrapper","TextWrapperOutline","white","TextWrapper","TitleWrapper","ButtonsWrapper","ChevronButton","TodayButton","Link","NavLink","LinkMonth","LinkDay","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","currentDay","nextDisabled","prevDisabled","t","useTranslation","pathname","useLocation","console","log","format","disabled","transform","color","className","includes","to","PageWrapper","CellWrapper","isHeader","CurrentDay","WeekWrapper","DayOfWeek","PRIORITY","taskCreateTime","moment","Date","now","TaskForm","minutes","fieldsData","lang","localStorage","getItem","defaultEndTime","current","useParams","useState","title","setTitle","start","setStart","end","setEnd","priority","setPriority","useAddTasksMutation","addTask","taskIsLoading","isLoading","modalType","status","useForm","register","handleSubmit","errors","formState","onInput","e","name","value","width","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","onSubmit","data","isValidEndTime","toast","taskData","date","Object","keys","forEach","errorField","message","placeholder","required","maxLength","map","el","idx","sellectedByDefault","isSelected","validate","defaultChecked","onChange","TaskModal","isOpenModal","setIsOpenModal","formData","CurrentDayPage","navigate","useNavigate","TEMP_MODAL_DATA","day","dow","setToday","startDay","clone","startOf","subtract","daysArray","Array","add","isAfter","setNextDisabled","isBefore","setPrevDisabled","isCurrentDay","isSame","modalData","length","prevDay","toLocaleString","nextDay","dayItem","toUpperCase","col"],"sourceRoot":""}