{"version":3,"file":"static/js/114.095f1076.chunk.js","mappings":"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","sources":["hooks/useInput.ts","hooks/useValidation.ts","components/RegisterForm/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.styled.ts","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import { useValidation } from './useValidation';\nimport { useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useInput = (initialValue: string, validations: ISetings) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n \n  const onBlur = (e: React.FocusEvent<HTMLElement>) => {\n    setIsDirty(true)\n  }\n\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useValidation = (value: string, validations: ISetings) => {\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, setConfirmError] = useState(false);\n  const [nameError, setNameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  const [validForm, setValidForm] = useState(false)\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation]\n            ? setConfirmError(false)\n            : setConfirmError(true);\n          break;\n        case 'isName':\n          const reName = /^\\p{L}+$/u\n          reName.test(String(value).toLowerCase())\n          ? setNameError(false)\n          : setNameError(true);\n          break\n        case 'isPassword':\n          const rePassword = /^(?=.*)[^\\s]{7,32}$/ \n          rePassword.test(String(value).toLowerCase())\n          ? setPasswordError(false)\n          : setPasswordError(true);\n          break\n        default:\n          console.log('нет такой проверки');\n      }\n    }\n  }, [value, validations]);\n\nuseEffect(() => {\n  if(emailError || nameError || passwordError || confirmError){\n    setValidForm(false)\n  } else{\n    setValidForm(true)\n  }\n},[emailError, nameError, passwordError, confirmError])\n\n  return {\n    emailError,\n    confirmError,\n    nameError,\n    passwordError,\n    validForm\n  };\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608;\n    height: 583;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    // height: 587px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 13px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\nexport const Google = styled.a`\n margin-bottom: 13px;\n height: 24px\n\n`\nexport const Eye = styled.span`\n    position: absolute;\n    right: 15px;\n    top: 55%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: #F59256;\n\n    @media (min-width: 768px) {\n        right: 20px;  \n    }\n`\n\n","import { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useInput } from '../../../hooks/useInput';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FormEvent, useState } from 'react';\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\nimport * as SC from './RegisterForm.styled';\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n  \n  const name = useInput('', { isName: true });\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { isPassword: true });\n  const confirmPassword = useInput('', { isSamePassword: password.value });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const payload: ICredentials = {\n      name: name.value,\n      email: email.value.toLowerCase(),\n      password: password.value\n    };\n\n    dispatch(signUp(payload));\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n      <div>\n        <SC.Title>{t('Sign Up')}</SC.Title>\n        <SC.Google href=\"https://your-tasks-hv5t.onrender.com/api/auth/google\">\n        <FcGoogle style={{ width: '1.5em', height: '1.5em' }} />\n      </SC.Google>\n      </div>\n      <SC.Div>\n        <label>\n          Name\n          <SC.Input\n            style={{\n              border:\n                ((name.isDirty &&\n                  !name.nameError &&\n                  '1px solid green') as string) ||\n                ((name.isDirty &&\n                  name.nameError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => name.onChange(e)}\n            onBlur={e => name.onBlur(e)}\n            value={name.value}\n            type=\"text\"\n            name=\"name\"\n            id='name'\n            placeholder={t('Enter your name')!}\n            required\n          />\n        </label>\n          {name.isDirty && name.nameError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your name pls')}\n            </SC.Notification>\n          )}\n          {name.isDirty && !name.nameError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Name is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n      <SC.Div>\n        <label>\n          Email\n        <SC.Input\n          style={{\n            border:\n              ((email.isDirty &&\n                !email.emailError &&\n                '1px solid green') as string) ||\n              ((email.isDirty &&\n                email.emailError &&\n                '1px solid red') as string),\n          }}\n          type=\"email\"\n          value={email.value}\n          onChange={e => email.onChange(e)}\n          onBlur={e => email.onBlur(e)}\n          name=\"email\"\n          placeholder={t('Enter your email')!}\n          required\n        />\n        </label>\n        {(email.isDirty && email.emailError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Email')}\n          </SC.Notification>\n        )) ||\n          (email.isDirty && !email.emailError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Email is correct')}\n            </SC.Notification>\n          ))}\n      </SC.Div>\n      <SC.Div>\n        <label>\n          Password\n        <SC.Input\n          style={{\n            border:\n              ((password.isDirty &&\n                !password.passwordError &&\n                '1px solid green') as string) ||\n              ((password.isDirty &&\n                password.passwordError &&\n                '1px solid red') as string),\n          }}\n          type={passwordType}\n          value={password.value}\n          onChange={e => password.onChange(e)}\n          onBlur={e => password.onBlur(e)}\n          name=\"password\"\n          placeholder={t('Enter your password')!}\n          required\n        />\n        </label>\n        {password.isDirty && password.passwordError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Password')}\n          </SC.Notification>\n        )}\n        {password.isDirty && !password.passwordError && (\n          <SC.Notification style={{ color: 'green' }}>\n            {t('Password is correct')}\n          </SC.Notification>\n        )}\n        <SC.Eye\n          onClick={() => {\n            passwordType === 'password'\n              ? setPasswordType('text')\n              : setPasswordType('password');\n          }}\n        >\n          {passwordType === 'password' ? <HiEye /> : <HiEyeOff />}\n        </SC.Eye>\n      </SC.Div>\n      <SC.Div>\n        <label>\n          Confirm Password\n        <SC.Input\n          style={{\n            border:\n              ((confirmPassword.isDirty &&\n                password.value === confirmPassword.value &&\n                '1px solid green') as string) ||\n              ((confirmPassword.isDirty &&\n                password.value !== confirmPassword.value &&\n                '1px solid red') as string),\n          }}\n          type={confirmPasswordType}\n          value={confirmPassword.value}\n          onChange={e => confirmPassword.onChange(e)}\n          onBlur={e => confirmPassword.onBlur(e)}\n          name=\"confirmPassword\"\n          placeholder={t('Confirm Password')!}\n          required\n        />\n        </label>\n        {confirmPassword.isDirty &&\n          password.value === confirmPassword.value && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('confirmPassword is correct')}\n            </SC.Notification>\n          )}\n        {confirmPassword.isDirty &&\n          password.value !== confirmPassword.value && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('confirmPassword is not correct')}\n            </SC.Notification>\n          )}\n        <SC.Eye\n          onClick={() => {\n            confirmPasswordType === 'password'\n              ? setConfirmPasswordType('text')\n              : setConfirmPasswordType('password');\n          }}\n        >\n          {confirmPasswordType === 'password' ? <HiEye /> : <HiEyeOff />}\n        </SC.Eye>\n      </SC.Div>\n      <SC.Button\n        disabled={!email.validForm || !password.validForm || !name.validForm || !confirmPassword.validForm}\n        type=\"submit\"\n      >\n        {t('Sign Up')}\n      </SC.Button>\n      </SC.Form>\n      <p>\n        {t('Already have an account')}?{' '}\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import { RegisterForm } from '../../components/RegisterForm/RegisterForm/RegisterForm';\nimport * as SC from './RegisterPage.styled';\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  // const [Step1, setStep1] = useState<boolean>(true);\n  // const [dataForm1, setDataForm1] = useState<IFormOneData | {}>({});\n\n  // const toggleForm = () => {\n  //   setStep1(!Step1);\n  // };\n\n  // const getDataForm1 = (data: IFormOneData) => {\n  //   setDataForm1(data);\n\n  return (\n    <SC.Main>\n        <RegisterForm />\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","emailError","setEmailError","confirmError","setConfirmError","nameError","setNameError","passwordError","setPasswordError","validForm","setValidForm","useEffect","validation","test","String","toLowerCase","console","log","useValidation","onChange","e","target","onBlur","Input","styled","Button","InnerDiv","Form","Title","Div","Notification","Google","Eye","RegisterForm","dispatch","useDispatch","t","useTranslation","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","name","isName","email","isEmail","password","isPassword","confirmPassword","isSamePassword","onSubmit","event","preventDefault","payload","signUp","autoComplete","href","style","width","height","border","type","id","placeholder","required","color","onClick","disabled","to","Main","RegisterPage"],"sourceRoot":""}