{"version":3,"file":"static/js/846.2c4170e3.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","pages/CurrentDayPage/CurrentDayPage.styled.ts","components/ColumnHeadBar/ColumnHeadBar.styled.jsx","components/ColumnHeadBar/ColumnHeadBar.jsx","components/ColumnTasksList/ColumnTasksList.jsx","components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.jsx","components/TaskForm/TaskForm.Styled.js","components/TaskForm/TaskFormButton/TaskFormButton.styled.js","components/TaskForm/TaskFormButton/TaskFormButton.jsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/TasksColumn/TasksColumn.styled.jsx","components/TasksColumn/TasksColumn.jsx","components/TasksColumnsList/TasksColumnsList.styled.jsx","components/TasksColumnsList/TasksColumnsList.jsx","pages/CurrentDayPage/CurrentDayPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 360px;\n  max-width: 1200px;\n  max-height: 90%;\n  padding: 40px 28px;\n  border-radius: ${props => props.theme.radii.normal};\n  background-color: ${p => p.theme.colors.modalBackground};\n  box-shadow: ${props => props.theme.shadows.modal};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 19px;\n  right: 19px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.black};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out, transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n      color: ${p => p.theme.colors.blue};\n      transform: scale(1.1);\n    }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { SVG } from '../../images';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const closeModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', closeModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <SVG.CloseIcon />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CalendarMonitorWrapper = styled.div`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 16px;\n  }\n`;\nexport const TextWrapperOutline = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #3e85f3;\n  color: ${props => props.theme.colors.white};\n  padding: 8px 12px;\n  border-radius: 8px;\n  height: 100%;\n  min-width: 155px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 173px;\n  }\n`;\n\nexport const TextWrapper = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.286;\n\n  text-transform: uppercase;\n\n  color: #ffffff;\n  min-width: 24px;\n\n  &:not(:last-of-type) {\n    margin-right: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const ChevronButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ChevronButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 7px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  color: #616161;\n\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n`;\n\nexport const TodayButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n  color: #616161;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n`;\n\nexport const ButtonWrapper = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  color: #616161;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #3e85f3;\n  padding: 9px 16px;\n  background-color: #e3f3ff;\n  min-width: 82px;\n  &.active.act {\n    background-color: #3e85f350;\n  }\n`;\n\nexport const LinkMonth = styled(Link)`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const LinkDay = styled(Link)`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport 'moment/locale/uk';\n\nimport * as SC from './CalendarMonitor.styled';\nimport { SVG } from '../../../images';\nimport { useLocation } from 'react-router-dom';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n  currentDay?: boolean;\n  nextDisabled?: boolean;\n  prevDisabled?: boolean;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n  currentDay,\n  nextDisabled,\n  prevDisabled,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n\n  return (\n    <SC.CalendarMonitorWrapper>\n      <SC.LeftWrapper>\n        <SC.TextWrapperOutline>\n          {currentDay && <SC.TextWrapper>{today.format('D')}</SC.TextWrapper>}\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </SC.TextWrapperOutline>\n        <SC.ChevronButtonsWrapper>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={prevHandler}\n            disabled={prevDisabled}\n            style={{\n              transform: 'rotate(180deg)',\n              color: prevDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={nextHandler}\n            disabled={nextDisabled}\n            style={{\n              color: nextDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n        </SC.ChevronButtonsWrapper>\n        <SC.TodayButton type=\"button\" onClick={todayHandler}>\n          {t('Today')}\n        </SC.TodayButton>\n      </SC.LeftWrapper>\n      <SC.ButtonsWrapper>\n        <SC.LinkMonth\n          className={pathname.includes('day') ? '' : 'act'}\n          to=\"/user/calendar\"\n        >\n          {t('Month')}\n        </SC.LinkMonth>\n        <SC.LinkDay\n          className={pathname.includes('day') ? 'act' : ''}\n          to={`/user/calendar/day/${today.format('YYYY-MM-DD')}`}\n        >\n          {t('Day')}\n        </SC.LinkDay>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","import styled from 'styled-components';\n\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isHeader?: boolean;\n  isSelectedMonth?: boolean;\n}\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 32px;\n  padding-right: 32px;\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  ${p => p.isHeader && 'text-align:center'}\n  width: 27px;\n  height: 26px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.125;\n  color: #343434;\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const WeekWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n\n  justify-content: space-between;\n  width: 100%;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  padding: 10px 46px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.286;\n  color: #616161;\n`;\n\nexport const DayOfWeek = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n\n  :nth-last-child(1) > span,\n  :nth-last-child(2) > span {\n    color: ${props => props.theme.colors.blue};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Header = styled.p`\n  margin: 7px 0px 28px 0px;\n  font-size: 20px;\n  line-height: 1.2;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n    'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  font-weight: 700;\n  color: #111111;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { Header } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ name }) => {\n  return <Header>{name}</Header>;\n};\n","export const ColumnTasksList = ({ tasks, status }) => {\n  const getTasksByStatus = () => {\n    return tasks?.filter(task => task.status === status);\n  };\n\n  const tasksByStatus = getTasksByStatus();\n\n  return (\n    /*\n    Тут будуть рендиритися картки тудушок\n    Передати tasksByStatus як проп\n    */\n    <ul>\n      {tasksByStatus?.map(task => (\n        <li style={{ listStyle: 'none' }} key={task.title}>\n          {task.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 52px;\n  gap: 8px;\n\n  font-family: 'Inter';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.29;\n\n  text-align: center;\n\n  color: #111111;\n\n  background-color: #e3f3ff;\n  border: 1px dashed #3e85f3;\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n","import { SVG } from '../../images';\nimport { AddButton } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ onClick }) => {\n  return (\n    <AddButton type=\"button\" onClick={onClick}>\n      <SVG.AddIcon />\n      Add task\n    </AddButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 303px;\n  padding-top: 8px;\n\n  font-family: ${p => p.theme.fontFamily.main};\n\n  @media screen and (min-width: 768px) {\n    width: 396px;\n    padding-top: 0px;\n  }\n`;\n\nexport const Field = styled.span`\n  display: block;\n  width: 100%;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  padding-right: 14px;\n\n  margin-bottom: ${p => {\n    return p.type === 'time' ? p.theme.space[0] : p.theme.space[4];\n  }}px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${p => {\n      return p.type === 'time' ? p.theme.space[0] : 18;\n    }}px;\n  }\n\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n\n  color: ${p => p.theme.colors.grey};\n  background-color: ${p => p.theme.colors.grey8};\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: ${p => p.theme.fontWeights.semiBold};\n    line-height: ${props => props.theme.lineHeights.xl};\n\n    color: ${p => p.theme.colors.grey};\n    background-color: ${p => p.theme.colors.grey8};\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n`;\n\nexport const Time = styled.div`\n  display: flex;\n  gap: 15px;\n\n  width: 100%;\n\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 28px;\n  }\n`;\n\nexport const PriorityList = styled.ul`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n\n  width: 100%;\n\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const PriorityItem = styled.li`\n  list-style: none;\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\nexport const CustomRadioButton = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n\n  color: ${p => {\n    switch (p.name) {\n      case 'low':\n        return p.theme.colors.blue5;\n      case 'medium':\n        return p.theme.colors.yellow;\n      case 'high':\n        return p.theme.colors.pink;\n      default:\n        return p.theme.colors.grey4;\n    }\n  }};\n\n  svg {\n    width: 12px;\n    height: 12px;\n  }\n\n  border-radius: ${p => p.theme.radii.round};\n`;\n\nexport const PriorityLabel = styled.label`\n  display: flex;\n  gap: 6px;\n  align-items: center;\n\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${p => p.theme.lineHeights.s};\n  text-transform: capitalize;\n\n  color: ${p => p.theme.colors.grey};\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: 14px;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  padding: 12px;\n\n  width: 100%;\n\n  text-transform: capitalize;\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n\n  color: ${p => {\n    return p.type === 'button' ? p.theme.colors.black : p.theme.colors.white;\n  }};\n  background-color: ${p => {\n    return p.type === 'button' ? p.theme.colors.grey2 : p.theme.colors.blue;\n  }};\n\n  border-radius: ${props => props.theme.radii.normal};\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverYellow};\n    color: ${p => p.theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 15px;\n  }\n`;\n","import * as SC from './TaskFormButton.styled';\n\nexport const TaskFormButton = ({ children, ...props }) => {\n  return (\n    <SC.Button type={props.type} onClick={props.onClick}>\n      {children}\n    </SC.Button>\n  );\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAddTasksMutation } from '../../redux/task/taskOperations';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport 'moment/locale/uk';\nimport { SVG } from '../../images';\nimport * as SC from './TaskForm.Styled';\nimport { TaskFormButton } from './TaskFormButton';\n\nconst PRIORITY = ['low', 'medium', 'high'];\nconst taskCreateTime = moment(Date.now()).format('HH:mm');\n\n// const TEMP_MODAL_DATA = {\n//   title: 'Edit me',\n//   start: '11:00',\n//   end: '12:00',\n//   date: '2023-04-25',\n//   priority: 'low',\n// };\n\nexport const TaskForm = ({ fieldsData, toggleModal }) => {\n  const addMinutes = minutes => +Date.now() + minutes * 60 * 1000;\n  //ts\n  // const lang = localStorage.getItem('i18nextLng') as string;\n\n  //js\n  const lang = localStorage.getItem('i18nextLng');\n\n  const defaultEndTime = moment(addMinutes(30)).format('HH:mm');\n\n  const { current } = useParams();\n\n  // const [title, setTitle] = useState(fieldsData?.title[lang] ?? '');\n  const [title, setTitle] = useState(fieldsData?.title ?? '');\n  const [start, setStart] = useState(fieldsData?.start ?? taskCreateTime);\n  const [end, setEnd] = useState(fieldsData?.end ?? defaultEndTime);\n  const [priority, setPriority] = useState(fieldsData?.priority ?? '');\n\n  const [addTask, { isLoading: taskIsLoading }] = useAddTasksMutation();\n  // const [{ isLoading: taskIsLoading }] = useAddTasksMutation();\n\n  const modalType = fieldsData.title ? `edit` : `add`;\n\n  // console.log('in form fieldsData :>> ', fieldsData);\n\n  const { register, handleSubmit } = useForm();\n\n  // console.log('errors :>> ', errors);\n\n  const onError = (errors, e) => {\n    const errorFields = Object.keys(errors);\n    const notifyErrors = () =>\n      errorFields.forEach(errorField => {\n        toast.error(`Field ${errorField} ${errors[errorField]?.message}`);\n      });\n\n    notifyErrors();\n  };\n  const onSubmit = (data, e) => {\n    const isValidStartTime = start >= taskCreateTime;\n    const isValidEndTime = start <= end;\n\n    if (!isValidStartTime) {\n      toast.error(\"Start time can't be in past!\");\n      setStart(taskCreateTime);\n      return;\n    }\n\n    if (!isValidEndTime) {\n      toast.error(\"End time can't be lower of start time!\");\n      setEnd(taskCreateTime);\n      return;\n    }\n\n    // console.log('taskData :>> ', { data: taskData, lang });\n    console.log('formData :>> ', data);\n\n    const taskData = { ...data, status: fieldsData.status, date: current };\n    console.log('formData :>> ', taskData);\n    // addTask({ data: taskData, lang });\n\n    addTask({ data: taskData, lang });\n    toggleModal();\n  };\n\n  const onInput = e => {\n    console.log('e.target.name :>> ', e.target.name);\n    switch (e.target.name) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'start':\n        setStart(e.target.value);\n        break;\n\n      case 'end':\n        setEnd(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <SC.Form onSubmit={handleSubmit(onSubmit, onError)}>\n      <SC.Field>\n        <SC.Label>Title</SC.Label>\n        <SC.Input\n          type=\"text\"\n          placeholder=\"Enter text\"\n          {...register('title', {\n            required: ' is requared!',\n            maxLength: {\n              value: 250,\n              message: `must be lower then 250 chars!`,\n            },\n          })}\n          name=\"title\"\n          value={title}\n          onInput={onInput}\n        />\n      </SC.Field>\n\n      {/* Блок TIME */}\n      <SC.Time>\n        <SC.Field>\n          <SC.Label>Start</SC.Label>\n          <SC.Input\n            type=\"time\"\n            {...register('start', {\n              required: 'is requared!',\n            })}\n            value={start}\n            onInput={onInput}\n          />\n        </SC.Field>\n        <SC.Field>\n          <SC.Label>End</SC.Label>\n          <SC.Input\n            {...register('end', {\n              required: 'is requared!',\n            })}\n            type=\"time\"\n            value={end}\n            onInput={onInput}\n          />\n        </SC.Field>\n      </SC.Time>\n\n      {/* Блок PRIORITY */}\n      <SC.PriorityList>\n        {PRIORITY.map((name, idx) => {\n          const sellectedByDefault = PRIORITY[idx] === PRIORITY[0];\n\n          const isSelected = priority\n            ? PRIORITY[idx].includes(priority)\n            : sellectedByDefault;\n\n          return (\n            <SC.PriorityItem key={name}>\n              <SC.PriorityLabel>\n                <SC.RadioButton\n                  {...register('priority', {\n                    validate: {\n                      priority: value =>\n                        PRIORITY.includes(value) || 'is not valid',\n                    },\n                  })}\n                  type=\"radio\"\n                  value={name}\n                  defaultChecked={isSelected}\n                  onChange={e => setPriority(e.target.value)}\n                />\n                <SC.CustomRadioButton name={name}>\n                  {isSelected ? <SVG.RadioButtonActive /> : <SVG.RadioButton />}\n                </SC.CustomRadioButton>\n                {name}\n              </SC.PriorityLabel>\n            </SC.PriorityItem>\n          );\n        })}\n      </SC.PriorityList>\n      <SC.Buttons>\n        <TaskFormButton type=\"submit\" disabled={taskIsLoading}>\n          {modalType === 'add' ? (\n            <SVG.AddIcon width=\"18px\" height=\"18px\" />\n          ) : (\n            <SVG.EditIcon />\n          )}\n          {modalType}\n        </TaskFormButton>\n        {modalType === 'add' && (\n          <TaskFormButton type=\"button\" onClick={toggleModal}>\n            Cancel\n          </TaskFormButton>\n        )}\n      </SC.Buttons>\n    </SC.Form>\n  );\n};\n","import { AddTaskBtn } from '../AddTaskBtn/AddTaskBtn';\nimport { Modal } from '../Modal/Modal';\nimport { TaskForm } from '../TaskForm';\nimport { useState } from 'react';\n\nexport const TaskModal = ({ status, data }) => {\n  const [isOpenModal, setIsOpenModal] = useState(true);\n  // console.log('data :>> ', data);\n  const formData = { ...data, status };\n  // console.log('formData :>> ', formData);\n  const toggleModal = () => {\n    setIsOpenModal(!isOpenModal);\n  };\n\n  return (\n    <>\n      <AddTaskBtn onClick={toggleModal} />\n\n      {!isOpenModal && (\n        <Modal toggleModal={toggleModal}>\n          <TaskForm fieldsData={formData} toggleModal={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Column = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 18px 23px 28px 20px;\n  width: 100%;\n  margin-top: 16px;\n  list-style: none;\n\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n`;\n","import { ColumnHeadBar } from '../ColumnHeadBar/ColumnHeadBar';\nimport { ColumnTasksList } from '../ColumnTasksList/ColumnTasksList';\nimport { TaskModal } from '../TaskModal';\nimport { Column } from './TasksColumn.styled';\n\nexport const TasksColumn = ({ name, tasks, status }) => {\n  const modalStatus = name;\n  switch (name) {\n    case 'todo':\n      name = 'To do';\n      break;\n    case 'inprogress':\n      name = 'In progress';\n      break;\n    case 'done':\n      name = 'Done';\n      break;\n    default:\n      return;\n  }\n\n  return (\n    <Column>\n      <ColumnHeadBar name={name}></ColumnHeadBar>\n      <ColumnTasksList tasks={tasks} status={status}></ColumnTasksList>\n      <TaskModal status={modalStatus} data={null} />\n    </Column>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  list-style: none;\n  width: 100%;\n  gap: 27px;\n  min-height: 100%;\n`;\n","import { TasksColumn } from '../TasksColumn/TasksColumn';\nimport { useFetchTasksQuery } from '../../redux/task/taskOperations';\nimport { ColumnList } from '../TasksColumnsList/TasksColumnsList.styled';\n\nexport const TasksColumnsList = ({ items, currentDate }) => {\n  const { data } = useFetchTasksQuery();\n\n  const getCurrentDayTasks = () => {\n    return data?.filter(task => task.date === currentDate);\n  };\n\n  const currentDayTasks = getCurrentDayTasks();\n\n  return (\n    <ColumnList>\n      {items.map(item => (\n        <TasksColumn\n          key={item}\n          name={item}\n          tasks={currentDayTasks}\n          status={item}\n        />\n      ))}\n    </ColumnList>\n  );\n};\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { CalendarMonitor } from '../CalendarPage/CalendarMonitor/CalendarMonitor';\nimport * as SC from './CurrentDayPage.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { TasksColumnsList } from '../../components/TasksColumnsList/TasksColumnsList';\n\nexport const CurrentDayPage = () => {\n  const { current } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  // const lang = localStorage.getItem('i18nextLng');\n\n  const STATUS = ['todo', 'inprogress', 'done'];\n\n  moment.updateLocale('en', { day: { dow: 1 } });\n  moment.locale(t(`lang`)!);\n\n  const [today, setToday] = useState(moment(current));\n\n  const totalDays = 7;\n  const startDay = today.clone().startOf('isoWeek');\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const [nextDisabled, setNextDisabled] = useState(() => {\n    const nextDay = today.clone().add(1, 'day');\n    return nextDay.isAfter(startDay.clone().add(6, 'day')) ? true : false;\n  });\n  const [prevDisabled, setPrevDisabled] = useState(() => {\n    const prevDay = today.clone().subtract(1, 'day');\n    return prevDay.isBefore(startDay) ? true : false;\n  });\n\n  const prevHandler = () => {\n    const prevDay = today.clone().subtract(1, 'day');\n    if (\n      prevDay.clone().format('YYYY-MM-DD') ===\n        today.clone().startOf('isoWeek').format('YYYY-MM-DD') &&\n      prevDay.clone().format('YYYY-MM-DD') !==\n        today.clone().endOf('isoWeek').format('YYYY-MM-DD')\n    ) {\n      setPrevDisabled(true);\n    }\n\n    if (prevDay.isBefore(startDay)) {\n      setPrevDisabled(true);\n      setToday(startDay);\n      navigate(`/user/calendar/day/${startDay.format('YYYY-MM-DD')}`);\n    } else {\n      setNextDisabled(false);\n      setToday(prevDay);\n      navigate(`/user/calendar/day/${prevDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const nextHandler = () => {\n    const nextDay = today.clone().add(1, 'day');\n    if (\n      nextDay.clone().format('YYYY-MM-DD') ===\n        today.clone().endOf('isoWeek').format('YYYY-MM-DD') &&\n      nextDay.clone().format('YYYY-MM-DD') !==\n        today.clone().startOf('isoWeek').format('YYYY-MM-DD')\n    ) {\n      setNextDisabled(true);\n      setToday(startDay.clone().add(6, 'day'));\n      navigate(\n        `/user/calendar/day/${startDay\n          .clone()\n          .add(6, 'day')\n          .format('YYYY-MM-DD')}`\n      );\n    } else {\n      setPrevDisabled(false);\n\n      setToday(nextDay);\n      navigate(`/user/calendar/day/${nextDay.format('YYYY-MM-DD')}`);\n    }\n  };\n\n  const todayHandler = () => {\n    setPrevDisabled(false);\n    setNextDisabled(false);\n    setToday(moment());\n    navigate(`/user/calendar/day/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return today.isSame(day, 'day');\n  };\n\n  const handleChangeDay = (dayItem: moment.Moment) => {\n    if (\n      dayItem.clone().format('YYYY-MM-DD') ===\n        today.clone().startOf('isoWeek').format('YYYY-MM-DD') &&\n      dayItem.clone().format('YYYY-MM-DD') !==\n        today.clone().endOf('isoWeek').format('YYYY-MM-DD')\n    ) {\n      setPrevDisabled(true);\n      setNextDisabled(false);\n    }\n    //\n    else if (\n      dayItem.clone().format('YYYY-MM-DD') ===\n        today.clone().endOf('isoWeek').format('YYYY-MM-DD') &&\n      dayItem.clone().format('YYYY-MM-DD') !==\n        today.clone().startOf('isoWeek').format('YYYY-MM-DD')\n    ) {\n      setNextDisabled(true);\n      setPrevDisabled(false);\n    } else {\n      setPrevDisabled(false);\n      setNextDisabled(false);\n    }\n\n    setToday(moment(dayItem.format('YYYY-MM-DD')));\n    navigate(`/user/calendar/day/${dayItem.format('YYYY-MM-DD')}`);\n  };\n\n  return (\n    <main style={{ width: '1151px' }}>\n      <SC.PageWrapper>\n        <CalendarMonitor\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n          todayHandler={todayHandler}\n          today={today}\n          currentDay={true}\n          nextDisabled={nextDisabled}\n          prevDisabled={prevDisabled}\n        />\n        <SC.WeekWrapper>\n          {daysArray.map(dayItem => (\n            <SC.DayOfWeek key={dayItem.format('DDMMYY')}>\n              <span>{dayItem.format('ddd').toUpperCase()}</span>\n              <SC.CellWrapper onClick={() => handleChangeDay(dayItem)}>\n                {isCurrentDay(dayItem) ? (\n                  <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </SC.CellWrapper>\n            </SC.DayOfWeek>\n          ))}\n        </SC.WeekWrapper>\n        <TasksColumnsList items={STATUS} currentDate={current} />\n      </SC.PageWrapper>\n    </main>\n  );\n};\n"],"names":["Overlay","styled","p","theme","colors","backdropBackground","Inner","props","radii","normal","modalBackground","shadows","modal","CloseBtn","black","blue","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","closeModal","evt","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","target","currentTarget","type","CalendarMonitorWrapper","LeftWrapper","TextWrapperOutline","white","TextWrapper","TitleWrapper","ButtonsWrapper","ChevronButtonsWrapper","ChevronButton","TodayButton","Link","NavLink","LinkMonth","LinkDay","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","currentDay","nextDisabled","prevDisabled","t","useTranslation","pathname","useLocation","format","disabled","transform","color","className","includes","to","PageWrapper","CellWrapper","isHeader","CurrentDay","WeekWrapper","DayOfWeek","Header","ColumnHeadBar","name","ColumnTasksList","tasks","status","tasksByStatus","filter","task","map","listStyle","title","AddButton","AddTaskBtn","Form","fontFamily","main","Field","Label","space","fontSizes","xs","Input","s","fontWeights","semiBold","lineHeights","xl","grey","grey8","Time","PriorityList","PriorityItem","RadioButton","CustomRadioButton","blue5","yellow","pink","grey4","round","PriorityLabel","Buttons","Button","grey2","hoverYellow","TaskFormButton","PRIORITY","taskCreateTime","moment","Date","now","TaskForm","minutes","fieldsData","lang","localStorage","getItem","defaultEndTime","current","useParams","useState","setTitle","start","setStart","end","setEnd","priority","setPriority","useAddTasksMutation","addTask","taskIsLoading","isLoading","modalType","useForm","register","handleSubmit","onInput","e","console","log","value","onSubmit","data","isValidEndTime","toast","taskData","date","errors","Object","keys","forEach","errorField","message","placeholder","required","maxLength","idx","sellectedByDefault","isSelected","validate","defaultChecked","onChange","width","height","TaskModal","isOpenModal","setIsOpenModal","formData","Column","TasksColumn","modalStatus","ColumnList","TasksColumnsList","items","currentDate","useFetchTasksQuery","currentDayTasks","item","CurrentDayPage","navigate","useNavigate","day","dow","setToday","startDay","clone","startOf","subtract","daysArray","Array","add","isAfter","setNextDisabled","isBefore","setPrevDisabled","isCurrentDay","isSame","prevDay","endOf","nextDay","dayItem","toUpperCase","handleChangeDay"],"sourceRoot":""}