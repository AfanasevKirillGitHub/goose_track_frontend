{"version":3,"file":"static/js/362.c247acb1.chunk.js","mappings":"mMAOaA,EAAW,SACtBC,EACAC,GAEA,OAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,ECPqB,SAACJ,EAAsBF,GAClD,OAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACA,GAAwCP,EAAAA,EAAAA,WAAS,GAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KACA,GAAkCT,EAAAA,EAAAA,WAAS,GAA3C,eAAOU,EAAP,KAAkBC,EAAlB,KACA,GAA0CX,EAAAA,EAAAA,WAAS,GAAnD,eAAOY,EAAP,KAAsBC,EAAtB,KACA,GAAkCb,EAAAA,EAAAA,WAAS,GAA3C,eAAOc,EAAP,KAAkBC,EAAlB,KACA,GAAoCf,EAAAA,EAAAA,WAAS,GAA7C,eAAOgB,EAAP,KAAmBC,EAAnB,KACA,GAAoCjB,EAAAA,EAAAA,WAAS,GAA7C,eAAOkB,EAAP,KAAmBC,EAAnB,KAwEA,OAtEAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IAAMC,KAActB,EACvB,OAAQsB,GACN,IAAK,UAED,yJACCC,KAAKC,OAAOtB,GAAOuB,eAClBjB,GAAc,GACdA,GAAc,GAClB,MACF,IAAK,iBACHN,IAAUF,EAAYsB,GAClBZ,GAAgB,GAChBA,GAAgB,GACpB,MACF,IAAK,SAED,6GACKa,KAAKC,OAAOtB,GAAOuB,eACtBb,GAAa,GACbA,GAAa,GACjB,MACF,IAAK,aACgB,sBACRW,KAAKC,OAAOtB,GAAOuB,eAC1BX,GAAiB,GACjBA,GAAiB,GACrB,MACF,IAAK,UACa,YACRS,KAAKC,OAAOtB,GAAOuB,eACvBP,GAAc,GACdA,GAAc,GAClB,MACF,IAAK,UACa,qBACJK,KAAKrB,GACfkB,GAAc,GAEdA,GAAc,GAEhB,MACF,QACE,OAGP,GAAE,CAAClB,EAAOF,KAEXqB,EAAAA,EAAAA,YAAU,WASNL,IAPAT,GACAI,GACAE,GACAJ,GACAQ,GACAE,GAMH,GAAE,CACDZ,EACAI,EACAE,EACAJ,EACAQ,EACAE,IAGK,CACLZ,WAAAA,EACAE,aAAAA,EACAE,UAAAA,EACAE,cAAAA,EACAE,UAAAA,EACAE,WAAAA,EACAE,WAAAA,EAEH,CDjFeO,CAAcxB,EAAOF,GAUnC,OAAO,QACLE,MAAAA,EACAyB,SAVe,SAACC,GAChBzB,EAASyB,EAAEC,OAAO3B,MACnB,EASC4B,OAPa,SAACF,GACdvB,GAAW,EACZ,EAMCD,QAAAA,GACGE,EAEN,C,kNEdYyB,G,QAAUC,EAAAA,GAAAA,IAAH,+YAWJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,KAaJC,EAAQL,EAAAA,GAAAA,GAAH,iUAKD,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAxB,IACH,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IACC,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYD,CAAxB,IAEP,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,MAAnB,IAWCC,EAAOZ,EAAAA,GAAAA,EAAH,yVAOA,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,YAAYO,QAAxB,IACH,SAAAZ,GAAC,OAAIA,EAAEC,MAAMM,UAAUM,EAAtB,IAGL,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOY,IAAnB,IAKK,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IAKLO,EAAQhB,EAAAA,GAAAA,KAAH,oHAOLiB,EAAYjB,EAAAA,GAAAA,IAAH,yVAkBTkB,EAAQlB,EAAAA,GAAAA,MAAH,wYAMN,SAAAC,GAAC,OAAIA,EAAEC,MAAMiB,QAAQC,SAApB,IAES,SAAAnB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAIN,SAAAH,GAAC,OAAIA,EAAEC,MAAMI,YAAYO,QAAxB,IACH,SAAAZ,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOkB,MAAnB,IAIK,SAAApB,GAAC,OAAIA,EAAEC,MAAMM,UAAUc,CAAtB,IAKLC,GAAWvB,EAAAA,EAAAA,IAAOwB,IAAPxB,CAAH,waAMT,SAAAC,GAAC,OACPA,EAAEwB,SACHxB,EAAEwB,UAA2B,OAAfxB,EAAEyB,UAAqB,gBADtB,qCAEfzB,EAAEwB,UAA2B,OAAfxB,EAAEyB,UAAqB,iBAH7B,IAMS,SAAAzB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAIN,SAAAH,GAAC,OAAIA,EAAEC,MAAMI,YAAYO,QAAxB,IACH,SAAAZ,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IAGL,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOkB,MAAnB,IAMK,SAAApB,GAAC,OAAIA,EAAEC,MAAMM,UAAUc,CAAtB,IAKLK,EAAY3B,EAAAA,GAAAA,MAAH,uIAUT4B,EAAY5B,EAAAA,GAAAA,IAAH,gJAST6B,EAAU7B,EAAAA,GAAAA,IAAH,qRAME,SAAA8B,GAAK,OAAIA,EAAM5B,MAAMC,OAAO4B,IAAvB,IAEhB,SAAAD,GAAK,OAAIA,EAAM5B,MAAMC,OAAOC,KAAvB,IAQH4B,EAAchC,EAAAA,GAAAA,IAAH,sQAeXiC,EAAYjC,EAAAA,GAAAA,IAAH,gjBAMV,SAAAC,GAAC,OAAIA,EAAEC,MAAMiB,QAAQe,MAApB,IAQW,SAAAJ,GAAK,OAAIA,EAAM5B,MAAMC,OAAOC,KAAvB,IAgBhB+B,EAAWnC,EAAAA,GAAAA,MAAH,uUAoBRoC,EAAWpC,EAAAA,GAAAA,MAAH,4VASN,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,UAAUM,EAAtB,IAGL,SAAAb,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,MAAnB,IAKK,SAAAV,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IAKL4B,EAAMrC,EAAAA,GAAAA,OAAH,+0BAUH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAKD,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAYG,SAAAH,GAAC,OAAIA,EAAEC,MAAMI,YAAYO,QAAxB,IACH,SAAAZ,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IAGM,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAO4B,IAAnB,IACZ,SAAA9B,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAKC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAO4B,IAAnB,IAkBDO,GANetC,EAAAA,GAAAA,KAAH,mGAMNA,EAAAA,GAAAA,IAAH,4KAUHuC,EAAgBvC,EAAAA,GAAAA,KAAH,mG,8BClVbwC,EAAW,WAAO,IAAD,UACpBC,GAAMC,EAAAA,EAAAA,MAAND,EACAE,GAASC,EAAAA,EAAAA,KAATD,KAER,GAAgC1E,EAAAA,EAAAA,UAC9B0E,EAAKE,SAAW,IAAIC,KAAKH,EAAKE,UAAY,IAD5C,eAAOA,EAAP,KAAiBE,EAAjB,KAIA,GAAkC9E,EAAAA,EAAAA,UAAsB,MAAxD,eAAO+E,EAAP,KAAkBC,EAAlB,KAEMC,GAAOpF,EAAAA,EAAAA,GAAQ,UAAC6E,EAAKO,YAAN,QAAc,GAAI,CAAEC,QAAQ,IAC3CC,GAAQtF,EAAAA,EAAAA,GAAQ,UAAC6E,EAAKS,aAAN,QAAe,GAAI,CAAEC,SAAS,IAC9CC,GAAQxF,EAAAA,EAAAA,GAAQ,UAAC6E,EAAKW,aAAN,QAAe,GAAI,CAAEC,SAAS,IAC9CC,GAAQ1F,EAAAA,EAAAA,GAAQ,UAAC6E,EAAKa,aAAN,QAAe,GAAI,CAAEC,SAAS,IAC9ChC,GAAW3D,EAAAA,EAAAA,GAAS+E,EAAU,CAAC,GAE/Ba,GAAWC,EAAAA,EAAAA,MA4BjB,OACE,SAAC,EAAD,WACE,UAAC,EAAD,CAAUC,aAAa,MAAMC,SAjBZ,WACnB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQd,EAAKhF,OAC7B4F,EAASE,OAAO,QAASZ,EAAMlF,OAC/B4F,EAASE,OAAO,QAASR,EAAMtF,OAC/B4F,EAASE,OAAO,QAASV,EAAMpF,OAC/B4F,EAASE,OAAO,WAAYnB,GAC5BiB,EAASE,OACP,SACAhB,GAAmCL,EAAKK,WAG1CU,GAASO,EAAAA,EAAAA,IAAWH,GACrB,EAIG,WACE,SAAC,EAAD,UACGd,GACC,SAAC,EAAD,CAAckB,IAAKC,IAAIC,gBAAgBpB,GAAYqB,IAAI,WACrD1B,EAAKK,WACP,SAAC,EAAD,CAAckB,IAAKvB,EAAKK,UAAWqB,IAAI,YAEvC,SAAC,eAAD,OAIJ,UAAC,EAAD,CAAaC,QAAQ,SAArB,WACE,SAAC,EAAD,WACE,SAAC,EAAD,WACE,SAAC,YAAD,SAIJ,SAAC,EAAD,CACEC,GAAG,SACHC,KAAK,OACL7E,SAjDW,SAAC8E,GACpB,MAAwBA,EAAI5E,OAApBqD,EAAR,EAAQA,KAAMwB,EAAd,EAAcA,MAEP,cADCxB,GAEJD,EAAayB,EAAO,GAKzB,EAyCSC,OAAO,gCACPzB,KAAK,kBAIT,UAAC,EAAD,gCAAYP,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,YAAlB,QAA0B,IAA1B,QACA,UAAC,EAAD,eAAWT,EAAE,QAAb,QAEA,UAAC,EAAD,YACE,UAAC,EAAD,YACE,UAAC,EAAD,CAAa6B,QAAQ,WAArB,UACG7B,EAAE,SACH,SAAC,EAAD,CACEmC,MAAO,CACLC,OACG3B,EAAK9E,UAAY8E,EAAKvE,UAAa,kBACnCuE,EAAK9E,SAAW8E,EAAKvE,WAAa,iBAEvC6F,KAAK,OACLtG,MAAOgF,EAAKhF,MACZgF,KAAK,OACLqB,GAAG,OACH5E,SAAU,SAAAC,GAAC,OAAIsD,EAAKvD,SAASC,EAAlB,EACXE,OAAQ,SAAAF,GAAC,OAAIsD,EAAKpD,OAAOF,EAAhB,EACTkF,YAAarC,EAAE,mBACfsC,UAAQ,OAGX7B,EAAK9E,SAAW8E,EAAKvE,YACpB,SAAC,EAAD,CAAkBiG,MAAO,CAAEI,MAAO,OAAlC,SACGvC,EAAE,yBAGNS,EAAK9E,UAAY8E,EAAKvE,YACrB,SAAC,EAAD,CAAkBiG,MAAO,CAAEI,MAAO,SAAlC,SACGvC,EAAE,uBAKT,UAAC,EAAD,YACE,UAAC,EAAD,CAAa6B,QAAQ,QAArB,UACG7B,EAAE,UACH,SAAC,EAAD,CACEmC,MAAO,CACLC,OACGrB,EAAMpF,UAAYoF,EAAMrE,WAAc,kBACtCqE,EAAMpF,SAAWoF,EAAMrE,YAAc,iBAE1CqF,KAAK,MACLtB,KAAK,QACLqB,GAAG,QACHrG,MAAOsF,EAAMtF,MACbyB,SAAU,SAAAC,GAAC,OAAI4D,EAAM7D,SAASC,EAAnB,EACXE,OAAQ,SAAAF,GAAC,OAAI4D,EAAM1D,OAAOF,EAAjB,OAGZ4D,EAAMpF,SAAWoF,EAAMrE,aACtB,SAAC,EAAD,CAAkByF,MAAO,CAAEI,MAAO,OAAlC,SACGvC,EAAE,0BAGNe,EAAMpF,UAAYoF,EAAMrE,aACvB,SAAC,EAAD,CAAkByF,MAAO,CAAEI,MAAO,SAAlC,SACGvC,EAAE,wBAKT,UAAC,EAAD,YACE,UAAC,EAAD,CAAa6B,QAAQ,WAArB,UACG7B,EAAE,aACH,SAAC,EAAD,CACES,KAAK,WACLqB,GAAG,OACHC,KAAK,OACLS,OAAO,EACPxD,SAAUA,EAASrD,QACnBsD,SAAUmB,EACV/C,OAAQ,SAAAF,GAAC,OAAI6B,EAAS3B,OAAOF,EAApB,EACTD,SAAU,SAAAuF,GAAI,OAAInC,EAAYmC,EAAhB,EACdC,WAAW,kBAGd1D,EAASrD,SAAwB,OAAbyE,IACnB,SAAC,EAAD,CAAkB+B,MAAO,CAAEI,MAAO,OAAlC,SACGvC,EAAE,6BAGNhB,EAASrD,SAAwB,OAAbyE,IACnB,SAAC,EAAD,CAAkB+B,MAAO,CAAEI,MAAO,SAAlC,SACGvC,EAAE,2BAKT,UAAC,EAAD,YACE,UAAC,EAAD,CAAa6B,QAAQ,QAArB,mBAEE,SAAC,EAAD,CACEM,MAAO,CACLC,OACGvB,EAAMlF,UAAYkF,EAAMrE,WAAc,kBACtCqE,EAAMlF,SAAWkF,EAAMrE,YAAc,iBAE1CuF,KAAK,OACLtB,KAAK,QACLqB,GAAG,QACHrG,MAAOoF,EAAMpF,MACbyB,SAAU,SAAAC,GAAC,OAAI0D,EAAM3D,SAASC,EAAnB,EACXE,OAAQ,SAAAF,GAAC,OAAI0D,EAAMxD,OAAOF,EAAjB,OAGZ0D,EAAMlF,SAAWkF,EAAMrE,aACtB,SAAC,EAAD,CAAkB2F,MAAO,CAAEI,MAAO,OAAlC,SACGvC,EAAE,0BAGNa,EAAMlF,UAAYkF,EAAMrE,aACvB,SAAC,EAAD,CAAkB2F,MAAO,CAAEI,MAAO,SAAlC,SACGvC,EAAE,wBAKT,UAAC,EAAD,YACE,UAAC,EAAD,CAAa6B,QAAQ,QAArB,UACG7B,EAAE,UACH,SAAC,EAAD,CACEmC,MAAO,CACLC,OACGzB,EAAMhF,UAAYgF,EAAM7E,WAAc,kBACtC6E,EAAMhF,SAAWgF,EAAM7E,YAAc,iBAE1CiG,KAAK,QACLtB,KAAK,QACLqB,GAAG,QACHrG,MAAOkF,EAAMlF,MACbyB,SAAU,SAAAC,GAAC,OAAIwD,EAAMzD,SAASC,EAAnB,EACXE,OAAQ,SAAAF,GAAC,OAAIwD,EAAMtD,OAAOF,EAAjB,EACTkF,YAAarC,EAAE,oBACfsC,UAAQ,OAGV3B,EAAMhF,SAAWgF,EAAM7E,aACvB,SAAC,EAAD,CAAkBqG,MAAO,CAAEI,MAAO,OAAlC,SACGvC,EAAE,0BAGJW,EAAMhF,UAAYgF,EAAM7E,aACvB,SAAC,EAAD,CAAkBqG,MAAO,CAAEI,MAAO,SAAlC,SACGvC,EAAE,6BAMb,SAAC,EAAD,CAAQ+B,KAAK,SAASY,UAAWhC,EAAMrE,YAAcmE,EAAKnE,UAA1D,SACG0D,EAAE,sBAKZ,EChPY4C,EAAc,WACzB,OACE,0BACE,SAAC7C,EAAD,KAGL,C","sources":["hooks/useInput.ts","hooks/useValidation.ts","components/UserForm/UserForm.styled.ts","components/UserForm/UserForm.tsx","pages/AccountPage/AccountPage.tsx"],"sourcesContent":["import { useValidation } from './useValidation';\nimport { useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useInput = (\n  initialValue: string | Date,\n  validations: ISetings\n) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = (e: React.FocusEvent<HTMLElement>) => {\n    setIsDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useValidation = (value: string | Date, validations: ISetings) => {\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, setConfirmError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [validForm, setValidForm] = useState(false);\n  const [skypeError, setSkypeError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation]\n            ? setConfirmError(false)\n            : setConfirmError(true);\n          break;\n        case 'isName':\n          const reName =\n            /^[a-zA-Zа-яА-Яіїєґ']{2,}( [a-zA-Zа-яА-Яіїєґ']{2,}){0,1}$/u;\n          reName.test(String(value).toLowerCase())\n            ? setNameError(false)\n            : setNameError(true);\n          break;\n        case 'isPassword':\n          const rePassword = /^(?=.*)[^\\s]{7,32}$/;\n          rePassword.test(String(value).toLowerCase())\n            ? setPasswordError(false)\n            : setPasswordError(true);\n          break;\n        case 'isSkype':\n          const reSkype = /^.{1,16}$/;\n          reSkype.test(String(value).toLowerCase())\n            ? setSkypeError(false)\n            : setSkypeError(true);\n          break;\n        case 'isPhone':\n          const rePhone = /^(\\+38)?[0-9]{10}$/;\n          if (rePhone.test(value as string)) {\n            setPhoneError(false);\n          } else {\n            setPhoneError(true);\n          }\n          break;\n        default:\n          return;\n      }\n    }\n  }, [value, validations]);\n\n  useEffect(() => {\n    if (\n      emailError ||\n      nameError ||\n      passwordError ||\n      confirmError ||\n      skypeError ||\n      phoneError\n    ) {\n      setValidForm(false);\n    } else {\n      setValidForm(true);\n    }\n  }, [\n    emailError,\n    nameError,\n    passwordError,\n    confirmError,\n    skypeError,\n    phoneError,\n  ]);\n\n  return {\n    emailError,\n    confirmError,\n    nameError,\n    passwordError,\n    validForm,\n    skypeError,\n    phoneError,\n  };\n};\n","import styled from 'styled-components';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\ninterface ICellBirhtDayProps {\n  birthDay: boolean;\n  selected: Date;\n  type: string;\n  input: boolean;\n}\n\ninterface IInput {\n  style?: any;\n}\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  width: 335px;\n  height: 653px;\n\n  background: ${p => p.theme.colors.white};\n  border-radius: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 854px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    height: 752px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 4px;\n  font-family: 'Inter';\n  font-style: normal;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.s};\n\n  color: ${p => p.theme.colors.black2};\n\n  @media screen and (max-width: 767px) {\n    margin-top: 59px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const User = styled.p`\n  margin-bottom: 40px;\n  width: 28px;\n  height: 14px;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.1667;\n\n  color: ${p => p.theme.colors.grey};\n\n  @media screen and (min-width: 768px) {\n    width: 32px;\n    height: 18px;\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.29px;\n  }\n`;\n\nexport const Forms = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const InputList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  p {\n    margin-bottom: 8px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    min-height: 458px;\n    justify-content: space-between;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    min-height: 264px;\n  }\n`;\n\nexport const Input = styled.input<IInput>`\n  width: 299px;\n  height: 42px;\n\n  padding-left: 18px;\n\n  border: ${p => p.theme.borders.userInput};\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.white};\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.29;\n\n  color: ${p => p.theme.colors.black5};\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.13;\n  }\n`;\n\nexport const DatePick = styled(DatePicker)<ICellBirhtDayProps>`\n  width: 299px;\n  height: 42px;\n\n  padding-left: 18px;\n\n  border: ${p =>\n    (!p.birthDay && '1px solid rgba(17, 17, 17, 0.15)') ||\n    (p.birthDay && p.selected === null && '1px solid red') ||\n    (p.birthDay && p.selected !== null && '1px solid green')};\n\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.white};\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: calc(18 / 14);\n\n  color: ${p => p.theme.colors.black5};\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.29;\n  }\n`;\n\nexport const InputFile = styled.input`\n  opacity: 0;\n  height: 0;\n  width: 0;\n  line-height: 0;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ImgAvatar = styled.img`\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const IconBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n  background-color: ${props => props.theme.colors.blue};\n  border-radius: 50%;\n  color: ${props => props.theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    width: 8px;\n    height: 8px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 72px;\n  height: 72px;\n  border: ${p => p.theme.borders.avatar};\n  border-radius: 50%;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    position: absolute;\n    top: -36px;\n    left: 132px;\n    background-color: ${props => props.theme.colors.white};\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    margin-bottom: 14px;\n\n    width: 124px;\n    height: 124px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 60px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const LabelImg = styled.label`\n  position: absolute;\n  left: 188px;\n  top: 55px;\n\n  @media screen and (max-width: 767px) {\n    left: 177px;\n    top: 23px;\n  }\n\n  @media screen and (min-width: 768px) {\n    left: 200px;\n    top: 143px;\n  }\n  @media screen and (min-width: 1440px) {\n    left: 400px;\n    top: 167px;\n  }\n`;\n\nexport const LabelBtn = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 18px;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.17px;\n\n  color: ${p => p.theme.colors.black2};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.29;\n  }\n`;\n\nexport const Btn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n\n  &:disabled {\n    background-color: rgba(62, 133, 243, 0.5);\n  }\n  &:disabled:hover {\n    background-color: rgba(62, 133, 243, 0.5);\n    color: ${p => p.theme.colors.white};\n    cursor: not-allowed;\n  }\n  &:disabled:focus {\n    background-color: rgba(62, 133, 243, 0.5);\n    color: ${p => p.theme.colors.white};\n  }\n\n  width: 195px;\n  height: 46px;\n\n  border-radius: 16px;\n  border: none;\n  cursor: pointer;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.29;\n\n  background-color: ${p => p.theme.colors.blue};\n  color: ${p => p.theme.colors.white};\n\n  :hover,\n  :focus {\n    background: gold;\n    color: ${p => p.theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Notification = styled.span`\n  position: absolute;\n  font-size: 12px;\n  left: 20px;\n  bottom: -35%;\n`;\nexport const Div = styled.div`\n  position: relative;\n  @media (max-width: 767px) {\n    margin-bottom: 24px;\n  }\n  @media (min-width: 768px) {\n    margin-bottom: 26px;\n  }\n`;\n\nexport const Notifications = styled.span`\n  position: absolute;\n  font-size: 12px;\n  left: 20px;\n  bottom: -35%;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ChangeEvent, useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useInput } from '../../hooks/useInput';\nimport { updateInfo } from '../../redux/auth/authOperations';\nimport * as SC from './UserForm.styled';\nimport { useTranslation } from 'react-i18next';\nimport { SVG } from '../../images';\nimport { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nexport const UserForm = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n\n  const [birthday, setBirthday] = useState(\n    user.birthday ? new Date(user.birthday) : ''\n  );\n\n  const [avatarURL, setAvatarURL] = useState<File | null>(null);\n\n  const name = useInput(user.name ?? '', { isName: true });\n  const email = useInput(user.email ?? '', { isEmail: true });\n  const skype = useInput(user.skype ?? '', { isSkype: true });\n  const phone = useInput(user.phone ?? '', { isPhone: true });\n  const birthDay = useInput(birthday, {});\n\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name, files } = evt.target;\n    switch (name) {\n      case 'avatarURL':\n        setAvatarURL(files![0] as File);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('name', name.value as string);\n    formData.append('email', email.value as string);\n    formData.append('phone', phone.value as string);\n    formData.append('skype', skype.value as string);\n    formData.append('birthday', birthday as string);\n    formData.append(\n      'avatar',\n      avatarURL ? (avatarURL as File) : (user.avatarURL as string)\n    );\n\n    dispatch(updateInfo(formData as ICredentials));\n  };\n\n  return (\n    <SC.Wrapper>\n      <SC.Forms autoComplete=\"off\" onSubmit={handleSubmit}>\n        <SC.Container>\n          {avatarURL ? (\n            <SC.ImgAvatar src={URL.createObjectURL(avatarURL)} alt=\"avatar\" />\n          ) : user.avatarURL ? (\n            <SC.ImgAvatar src={user.avatarURL} alt=\"avatar\" />\n          ) : (\n            <SVG.UserAvatar />\n          )}\n        </SC.Container>\n\n        <SC.LabelImg htmlFor=\"avatar\">\n          <SC.IconBtn>\n            <SC.IconWrapper>\n              <SVG.AddIcon />\n            </SC.IconWrapper>\n          </SC.IconBtn>\n\n          <SC.InputFile\n            id=\"avatar\"\n            type=\"file\"\n            onChange={handleChange}\n            accept=\"image/*,.png,.jpg,.jpeg,.webp\"\n            name=\"avatarURL\"\n          />\n        </SC.LabelImg>\n\n        <SC.Title> {user?.name ?? ' '} </SC.Title>\n        <SC.User> {t('User')} </SC.User>\n\n        <SC.InputList>\n          <SC.Div>\n            <SC.LabelBtn htmlFor=\"username\">\n              {t('Name')}\n              <SC.Input\n                style={{\n                  border:\n                    (name.isDirty && !name.nameError && '1px solid green') ||\n                    (name.isDirty && name.nameError && '1px solid red'),\n                }}\n                type=\"text\"\n                value={name.value as string}\n                name=\"name\"\n                id=\"name\"\n                onChange={e => name.onChange(e)}\n                onBlur={e => name.onBlur(e)}\n                placeholder={t('Enter your name')!}\n                required\n              />\n            </SC.LabelBtn>\n            {name.isDirty && name.nameError && (\n              <SC.Notifications style={{ color: 'red' }}>\n                {t('Enter your name pls')}\n              </SC.Notifications>\n            )}\n            {name.isDirty && !name.nameError && (\n              <SC.Notifications style={{ color: 'green' }}>\n                {t('Name is valid')}\n              </SC.Notifications>\n            )}\n          </SC.Div>\n\n          <SC.Div>\n            <SC.LabelBtn htmlFor=\"phone\">\n              {t('Phone')}\n              <SC.Input\n                style={{\n                  border:\n                    (phone.isDirty && !phone.phoneError && '1px solid green') ||\n                    (phone.isDirty && phone.phoneError && '1px solid red'),\n                }}\n                type=\"tel\"\n                name=\"phone\"\n                id=\"phone\"\n                value={phone.value as string}\n                onChange={e => phone.onChange(e)}\n                onBlur={e => phone.onBlur(e)}\n              ></SC.Input>\n            </SC.LabelBtn>\n            {phone.isDirty && phone.phoneError && (\n              <SC.Notifications style={{ color: 'red' }}>\n                {t('Enter your phone pls')}\n              </SC.Notifications>\n            )}\n            {phone.isDirty && !phone.phoneError && (\n              <SC.Notifications style={{ color: 'green' }}>\n                {t('Phone is valid')}\n              </SC.Notifications>\n            )}\n          </SC.Div>\n\n          <SC.Div>\n            <SC.LabelBtn htmlFor=\"birthday\">\n              {t('Birthday')}\n              <SC.DatePick\n                name=\"birthday\"\n                id=\"date\"\n                type=\"date\"\n                input={true}\n                birthDay={birthDay.isDirty}\n                selected={birthday as Date}\n                onBlur={e => birthDay.onBlur(e)}\n                onChange={data => setBirthday(data as Date)}\n                dateFormat=\"yyyy-MM-dd\"\n              />\n            </SC.LabelBtn>\n            {birthDay.isDirty && birthday === null && (\n              <SC.Notifications style={{ color: 'red' }}>\n                {t('Enter your birthday pls')}\n              </SC.Notifications>\n            )}\n            {birthDay.isDirty && birthday !== null && (\n              <SC.Notifications style={{ color: 'green' }}>\n                {t('birthday is valid')}\n              </SC.Notifications>\n            )}\n          </SC.Div>\n\n          <SC.Div>\n            <SC.LabelBtn htmlFor=\"skype\">\n              Skype\n              <SC.Input\n                style={{\n                  border:\n                    (skype.isDirty && !skype.skypeError && '1px solid green') ||\n                    (skype.isDirty && skype.skypeError && '1px solid red'),\n                }}\n                type=\"text\"\n                name=\"skype\"\n                id=\"skype\"\n                value={skype.value as string}\n                onChange={e => skype.onChange(e)}\n                onBlur={e => skype.onBlur(e)}\n              />\n            </SC.LabelBtn>\n            {skype.isDirty && skype.skypeError && (\n              <SC.Notifications style={{ color: 'red' }}>\n                {t('Enter your skype pls')}\n              </SC.Notifications>\n            )}\n            {skype.isDirty && !skype.skypeError && (\n              <SC.Notifications style={{ color: 'green' }}>\n                {t('Skype is valid')}\n              </SC.Notifications>\n            )}\n          </SC.Div>\n\n          <SC.Div>\n            <SC.LabelBtn htmlFor=\"email\">\n              {t('Email')}\n              <SC.Input\n                style={{\n                  border:\n                    (email.isDirty && !email.emailError && '1px solid green') ||\n                    (email.isDirty && email.emailError && '1px solid red'),\n                }}\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={email.value as string}\n                onChange={e => email.onChange(e)}\n                onBlur={e => email.onBlur(e)}\n                placeholder={t('Enter your email')!}\n                required\n              />\n            </SC.LabelBtn>\n            {(email.isDirty && email.emailError && (\n              <SC.Notifications style={{ color: 'red' }}>\n                {t('Enter a valid Email')}\n              </SC.Notifications>\n            )) ||\n              (email.isDirty && !email.emailError && (\n                <SC.Notifications style={{ color: 'green' }}>\n                  {t('Email is correct')}\n                </SC.Notifications>\n              ))}\n          </SC.Div>\n        </SC.InputList>\n\n        <SC.Btn type=\"submit\" disabled={!email.validForm || !name.validForm}>\n          {t('Save changes')}\n        </SC.Btn>\n      </SC.Forms>\n    </SC.Wrapper>\n  );\n};\n","import { UserForm } from '../../components/UserForm/UserForm';\n\nexport const AccountPage = () => {\n  return (\n    <div>\n      <UserForm />\n    </div>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","emailError","setEmailError","confirmError","setConfirmError","nameError","setNameError","passwordError","setPasswordError","validForm","setValidForm","skypeError","setSkypeError","phoneError","setPhoneError","useEffect","validation","test","String","toLowerCase","useValidation","onChange","e","target","onBlur","Wrapper","styled","p","theme","colors","white","Title","fontWeights","bold","fontSizes","s","lineHeights","black2","User","semiBold","xs","grey","Forms","InputList","Input","borders","userInput","black5","m","DatePick","DatePicker","birthDay","selected","InputFile","ImgAvatar","IconBtn","props","blue","IconWrapper","Container","avatar","LabelImg","LabelBtn","Btn","Div","Notifications","UserForm","t","useTranslation","user","useAuth","birthday","Date","setBirthday","avatarURL","setAvatarURL","name","isName","email","isEmail","skype","isSkype","phone","isPhone","dispatch","useDispatch","autoComplete","onSubmit","formData","FormData","append","updateInfo","src","URL","createObjectURL","alt","htmlFor","id","type","evt","files","accept","style","border","placeholder","required","color","input","data","dateFormat","disabled","AccountPage"],"sourceRoot":""}