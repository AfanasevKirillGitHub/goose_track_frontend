{"version":3,"file":"static/js/898.98f3ddb3.chunk.js","mappings":"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","sources":["components/ChangeLngElem/ChangeLngElem.styled.ts","components/ChangeLngElem/ChangeLngElem.tsx","hooks/useGetSearchParams.ts","hooks/useInput.ts","hooks/useValidation.ts","components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  padding: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport USA from '../../helpers/photos/usa.png';\nimport UA from '../../helpers/photos/ukraine.png';\nimport * as SC from './ChangeLngElem.styled';\n\nexport const ChangeLngElem = () => {\n  const { i18n } = useTranslation();\n  const { setSearchParams } = useGetSearchParams();\n\n  const onchangeLngClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    const { name } = evt.currentTarget;\n    setSearchParams({ lang: name });\n    i18n.changeLanguage(name);\n  };\n\n  const selectedLang = localStorage.getItem('i18nextLng');\n\n  return (\n    <SC.Wrap>\n      {selectedLang === 'ua' ? (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"en\">\n          <img src={USA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      ) : (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"ua\">\n          <img src={UA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      )}\n    </SC.Wrap>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useGetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const lang = searchParams.get('lang') ?? 'en';\n  const token = searchParams.get('token') ?? '';\n\n  return { lang, token, setSearchParams };\n};\n","import { useValidation } from './useValidation';\nimport { useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useInput = (\n  initialValue: string | Date,\n  validations: ISetings\n) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = (e: React.FocusEvent<HTMLElement>) => {\n    setIsDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useValidation = (value: string | Date, validations: ISetings) => {\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, setConfirmError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [validForm, setValidForm] = useState(false);\n  const [skypeError, setSkypeError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation]\n            ? setConfirmError(false)\n            : setConfirmError(true);\n          break;\n        case 'isName':\n          const reName =\n            /^[a-zA-Zа-яА-Яіїєґ']{2,}( [a-zA-Zа-яА-Яіїєґ']{2,}){0,1}$/u;\n          reName.test(String(value).toLowerCase())\n            ? setNameError(false)\n            : setNameError(true);\n          break;\n        case 'isPassword':\n          const rePassword = /^(?=.*)[^\\s]{7,32}$/;\n          rePassword.test(String(value).toLowerCase())\n            ? setPasswordError(false)\n            : setPasswordError(true);\n          break;\n        case 'isSkype':\n          const reSkype = /^.{1,16}$/;\n          reSkype.test(String(value).toLowerCase())\n            ? setSkypeError(false)\n            : setSkypeError(true);\n          break;\n        case 'isPhone':\n          const rePhone = /^(\\+38)?[0-9]{10}$/;\n          if (rePhone.test(value as string)) {\n            setPhoneError(false);\n          } else {\n            setPhoneError(true);\n          }\n          break;\n        default:\n          return;\n      }\n    }\n  }, [value, validations]);\n\n  useEffect(() => {\n    if (\n      emailError ||\n      nameError ||\n      passwordError ||\n      confirmError ||\n      skypeError ||\n      phoneError\n    ) {\n      setValidForm(false);\n    } else {\n      setValidForm(true);\n    }\n  }, [\n    emailError,\n    nameError,\n    passwordError,\n    confirmError,\n    skypeError,\n    phoneError,\n  ]);\n\n  return {\n    emailError,\n    confirmError,\n    nameError,\n    passwordError,\n    validForm,\n    skypeError,\n    phoneError,\n  };\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: ${props => props.theme.colors.loginBackground};\n`;\n\nexport const InnerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 335px;\n  padding: 40px 24px;\n  margin-bottom: 18px;\n  background-color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: ${props => props.theme.fontSizes.l};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n  color: ${props => props.theme.colors.blue};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xxxl};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.l};\n  color: ${props => props.theme.colors.columnHeader};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  width: 100%;\n  border: ${props => props.theme.borders.task};\n  border-radius: ${props => props.theme.radii.normal};\n  margin-top: ${props => props.theme.space[3]}px;\n  padding: 14px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.black};\n  &::placeholder {\n    font-weight: ${props => props.theme.fontWeights.regular};\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.xl};\n    color: ${props => props.theme.colors.grey4};\n    @media (min-width: 768px) {\n      font-size: ${props => props.theme.fontSizes.m};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: 287px;\n  height: 44px;\n  padding: 14px;\n  margin-top: ${props => props.theme.space[4]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.medium};\n  background: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white3};\n\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.xl};\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:disabled {\n    background-color: ${p => p.theme.colors.disabledButton};\n  }\n  &:disabled:hover {\n    background-color: ${p => p.theme.colors.disabledButton};\n    color: ${p => p.theme.colors.white};\n    cursor: not-allowed;\n  }\n  &:disabled:focus {\n    background-color: ${p => p.theme.colors.disabledButton};\n    color: ${p => p.theme.colors.white};\n  }\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n    width: 18px;\n    height: 18px;\n  }\n  &:hover,\n  &:focus {\n    background-color: #ffee00;\n    color: ${props => props.theme.colors.blue};\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: ${props => props.theme.fontSizes.l};\n\n    svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nexport const Div = styled.div`\n  position: relative;\n  @media (max-width: 767px) {\n    margin-bottom: 24px;\n  }\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Notification = styled.span`\n  position: absolute;\n  font-size: 12px;\n  left: 20px;\n  bottom: -30%;\n`;\n\nexport const Google = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  border: ${props => props.theme.borders.userInput};\n  padding: 10px 16px;\n  border-radius: ${props => props.theme.radii.medium};\n  margin-top: ${props => props.theme.space[4]}px;\n\n  text-decoration: none;\n\n  color: ${props => props.theme.colors.blue};\n  font-family: ${props => props.theme.fontFamily.logo};\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.hoverYellow};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 16px;\n  }\n`;\n\nexport const GoogleName = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Eye = styled.span`\n  position: absolute;\n  right: 15px;\n  top: 70%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  fill: ${props => props.theme.colors.blue};\n\n  @media (min-width: 768px) {\n    right: 20px;\n  }\n`;\n\nexport const GooseImage = styled.img`\n  display: none;\n  @media (min-width: 1440px) {\n    display: block;\n    position: fixed;\n    right: 60px;\n    bottom: 20px;\n    width: 370px;\n    height: 520px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n  color: ${props => props.theme.colors.navLink};\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: ${props => props.theme.lineHeights.m};\n  }\n`;\n\nexport const TitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 32px;\n`;\n\nexport const Span = styled.span`\n  font-size: ${props => props.theme.fontSizes.s};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nimport { signIn } from '../../redux/auth/authOperations';\nimport { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport * as SC from './LoginForm.styled';\nimport { useInput } from '../../hooks/useInput';\nimport { ChangeLngElem } from '../ChangeLngElem/ChangeLngElem';\nimport { SVG, IMG, IMG2x } from '../../images';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const [passwordType, setPasswordType] = useState('password');\n\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { isPassword: true });\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    const payload: ICredentials = {\n      email: (email.value as string).toLowerCase(),\n      password: password.value as string,\n    };\n    dispatch(signIn(payload));\n  };\n  return (\n    <SC.Wrapper>\n      <SC.InnerDiv>\n        <SC.Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <SC.TitleDiv>\n            <SC.Title>{t('Log In')}</SC.Title>\n            <ChangeLngElem />\n          </SC.TitleDiv>\n          <SC.Div>\n            <SC.Label>\n              {t('Email')}\n              <SC.Input\n                style={{\n                  border:\n                    ((email.isDirty &&\n                      !email.emailError &&\n                      '1px solid green') as string) ||\n                    ((email.isDirty &&\n                      email.emailError &&\n                      '1px solid red') as string),\n                }}\n                onChange={e => email.onChange(e)}\n                onBlur={e => email.onBlur(e)}\n                type=\"email\"\n                value={email.value as string}\n                name=\"email\"\n                placeholder={t('Example@gmail.com')!}\n                required\n              />\n            </SC.Label>\n            {(email.isDirty && email.emailError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Email')}\n              </SC.Notification>\n            )) ||\n              (email.isDirty && !email.emailError && (\n                <SC.Notification style={{ color: 'green' }}>\n                  {t('Email is correct')}\n                </SC.Notification>\n              ))}\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Password')}\n              <SC.Input\n                style={{\n                  border:\n                    ((password.isDirty &&\n                      password.passwordError &&\n                      '1px solid red') as string) ||\n                    ((password.isDirty &&\n                      !password.passwordError &&\n                      '1px solid green') as string),\n                }}\n                onChange={e => password.onChange(e)}\n                onBlur={e => password.onBlur(e)}\n                type={passwordType}\n                value={password.value as string}\n                name=\"password\"\n                placeholder={t('Password')!}\n                required\n              />\n            </SC.Label>\n            {password.isDirty && password.passwordError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Password')}\n              </SC.Notification>\n            )}\n            {password.isDirty && !password.passwordError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Password is correct')}\n              </SC.Notification>\n            )}\n            <SC.Eye\n              onClick={() => {\n                passwordType === 'password'\n                  ? setPasswordType('text')\n                  : setPasswordType('password');\n              }}\n            >\n              {passwordType === 'password' ? (\n                <SVG.EyeIcon />\n              ) : (\n                <SVG.EyeClosedIcon />\n              )}\n            </SC.Eye>\n          </SC.Div>\n\n          <SC.Button\n            type=\"submit\"\n            disabled={!email.validForm || !password.validForm}\n          >\n            {t('Log In')}\n            <SVG.LogInIcon />\n          </SC.Button>\n\n          <SC.Google href=\"https://your-tasks-hv5t.onrender.com/api/auth/google\">\n            <SC.Span>{t('login with')}</SC.Span>\n            <SC.GoogleName>\n              <SVG.GoogleIcon />\n              <SC.Span>\n                <i>oo</i>gle\n              </SC.Span>\n            </SC.GoogleName>\n          </SC.Google>\n        </SC.Form>\n\n        <SC.Link to=\"/registration\">{t('Sign Up')}</SC.Link>\n        <SC.GooseImage\n          srcSet={`${IMG.rocket} 1x, ${IMG2x.rocket2x} 2x`}\n          alt=\"goose\"\n        />\n      </SC.InnerDiv>\n    </SC.Wrapper>\n  );\n};\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\n\nexport const LoginPage = () => {\n  return (\n      <LoginForm />\n  );\n};\n"],"names":["Wrap","styled","Btn","ChangeLngElem","i18n","useTranslation","setSearchParams","useGetSearchParams","onchangeLngClick","evt","name","currentTarget","lang","changeLanguage","selectedLang","localStorage","getItem","type","onClick","src","USA","alt","style","width","UA","useSearchParams","searchParams","get","token","useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","emailError","setEmailError","confirmError","setConfirmError","nameError","setNameError","passwordError","setPasswordError","validForm","setValidForm","skypeError","setSkypeError","phoneError","setPhoneError","useEffect","validation","test","String","toLowerCase","useValidation","onChange","e","target","onBlur","Wrapper","props","theme","colors","loginBackground","InnerDiv","Form","white","radii","normal","Title","fontSizes","l","fontWeights","semiBold","lineHeights","xl","blue","xxxl","Label","xs","columnHeader","s","Input","borders","task","space","black","regular","grey4","m","Button","medium","white3","p","disabledButton","Div","Notification","Google","userInput","fontFamily","logo","hoverYellow","GoogleName","Eye","GooseImage","Link","NavLink","navLink","TitleDiv","Span","LoginForm","dispatch","useDispatch","t","passwordType","setPasswordType","email","isEmail","password","isPassword","onSubmit","preventDefault","payload","signIn","autoComplete","border","placeholder","required","color","disabled","href","to","srcSet","IMG","IMG2x","LoginPage"],"sourceRoot":""}