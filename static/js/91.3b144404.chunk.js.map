{"version":3,"file":"static/js/91.3b144404.chunk.js","mappings":"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","sources":["components/ChangeLngElem/ChangeLngElem.styled.ts","components/ChangeLngElem/ChangeLngElem.tsx","hooks/useGetSearchParams.ts","hooks/useInput.ts","hooks/useValidation.ts","components/RegisterForm/RegisterForm/RegisterForm.styled.ts","components/RegisterForm/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  padding: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport USA from '../../helpers/photos/usa.png';\nimport UA from '../../helpers/photos/ukraine.png';\nimport * as SC from './ChangeLngElem.styled';\n\nexport const ChangeLngElem = () => {\n  const { i18n } = useTranslation();\n  const { setSearchParams } = useGetSearchParams();\n\n  const onchangeLngClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    const { name } = evt.currentTarget;\n    setSearchParams({ lang: name });\n    i18n.changeLanguage(name);\n  };\n\n  const selectedLang = localStorage.getItem('i18nextLng');\n\n  return (\n    <SC.Wrap>\n      {selectedLang === 'ua' ? (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"en\">\n          <img src={USA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      ) : (\n        <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"ua\">\n          <img src={UA} alt=\"usa flag\" style={{ width: '36px' }} />\n        </SC.Btn>\n      )}\n    </SC.Wrap>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useGetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const lang = searchParams.get('lang') ?? 'en';\n  const token = searchParams.get('token') ?? '';\n\n  return { lang, token, setSearchParams };\n};\n","import { useValidation } from './useValidation';\nimport { useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useInput = (\n  initialValue: string | Date,\n  validations: ISetings\n) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = (e: React.FocusEvent<HTMLElement>) => {\n    setIsDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string | Date;\n}\n\nexport const useValidation = (value: string | Date, validations: ISetings) => {\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, setConfirmError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [validForm, setValidForm] = useState(false);\n  const [skypeError, setSkypeError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation]\n            ? setConfirmError(false)\n            : setConfirmError(true);\n          break;\n        case 'isName':\n          const reName =\n            /^[a-zA-Zа-яА-Яіїєґ']{2,}( [a-zA-Zа-яА-Яіїєґ']{2,}){0,1}$/u;\n          reName.test(String(value).toLowerCase())\n            ? setNameError(false)\n            : setNameError(true);\n          break;\n        case 'isPassword':\n          const rePassword = /^(?=.*)[^\\s]{7,32}$/;\n          rePassword.test(String(value).toLowerCase())\n            ? setPasswordError(false)\n            : setPasswordError(true);\n          break;\n        case 'isSkype':\n          const reSkype = /^.{1,16}$/;\n          reSkype.test(String(value).toLowerCase())\n            ? setSkypeError(false)\n            : setSkypeError(true);\n          break;\n        case 'isPhone':\n          const rePhone = /^(\\+38)?[0-9]{10}$/;\n          if (rePhone.test(value as string)) {\n            setPhoneError(false);\n          } else {\n            setPhoneError(true);\n          }\n          break;\n        default:\n          return;\n      }\n    }\n  }, [value, validations]);\n\n  useEffect(() => {\n    if (\n      emailError ||\n      nameError ||\n      passwordError ||\n      confirmError ||\n      skypeError ||\n      phoneError\n    ) {\n      setValidForm(false);\n    } else {\n      setValidForm(true);\n    }\n  }, [\n    emailError,\n    nameError,\n    passwordError,\n    confirmError,\n    skypeError,\n    phoneError,\n  ]);\n\n  return {\n    emailError,\n    confirmError,\n    nameError,\n    passwordError,\n    validForm,\n    skypeError,\n    phoneError,\n  };\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: ${props => props.theme.colors.loginBackground};\n`;\n\nexport const InnerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 335px;\n  padding: 32px 24px;\n  margin-bottom: 18px;\n  background-color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 24px 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: ${props => props.theme.fontSizes.l};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n  color: ${props => props.theme.colors.blue};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xxxl};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.l};\n  color: ${props => props.theme.colors.columnHeader};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  width: 100%;\n  border: ${props => props.theme.borders.task};\n  border-radius: ${props => props.theme.radii.normal};\n  margin-top: 4px;\n  padding: 14px;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.black};\n  &::placeholder {\n    font-weight: ${props => props.theme.fontWeights.regular};\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.xl};\n    color: ${props => props.theme.colors.grey4};\n    @media (min-width: 768px) {\n      font-size: ${props => props.theme.fontSizes.m};\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: 287px;\n  height: 46px;\n  padding: 14px;\n\n  &:disabled {\n    background-color: ${p => p.theme.colors.disabledButton};\n  }\n  &:disabled:hover {\n    background-color: ${p => p.theme.colors.disabledButton};\n    color: ${p => p.theme.colors.white};\n    cursor: not-allowed;\n  }\n  &:disabled:focus {\n    background-color: ${p => p.theme.colors.disabledButton};\n    color: ${p => p.theme.colors.white};\n  }\n\n  border: none;\n  border-radius: ${props => props.theme.radii.medium};\n  background: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white3};\n  background-color: ${p => p.theme.colors.blue};\n\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.xl};\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n    width: 18px;\n    height: 18px;\n  }\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.hoverYellow};\n    color: ${props => props.theme.colors.blue};\n  }\n\n  @media (min-width: 768px) {\n    width: 400px;\n    height: 48px;\n    font-size: ${props => props.theme.fontSizes.l};\n\n    svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n\nexport const Div = styled.div`\n  position: relative;\n  @media (max-width: 767px) {\n    margin-bottom: 24px;\n  }\n  @media (min-width: 768px) {\n    margin-bottom: 20px;\n\n    :last-of-type {\n      margin-bottom: 26px;\n    }\n  }\n`;\n\nexport const Notification = styled.span`\n  position: absolute;\n  font-size: 12px;\n  left: 20px;\n  bottom: -30%;\n`;\n\nexport const Google = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  border: ${props => props.theme.borders.userInput};\n  padding: 10px 16px;\n  border-radius: ${props => props.theme.radii.medium};\n  margin-top: ${props => props.theme.space[4]}px;\n\n  text-decoration: none;\n\n  color: ${props => props.theme.colors.blue};\n  font-family: ${props => props.theme.fontFamily.logo};\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.hoverYellow};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n`;\n\nexport const GoogleName = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Eye = styled.span`\n  position: absolute;\n  right: 15px;\n  top: 70%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  fill: ${props => props.theme.colors.blue};\n\n  @media (min-width: 768px) {\n    right: 20px;\n  }\n`;\n\nexport const GooseImage = styled.img`\n  display: none;\n  @media (min-width: 1440px) {\n    display: block;\n    position: fixed;\n    left: 50px;\n    bottom: 0px;\n    width: 400px;\n    height: 450px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: ${props => props.theme.fontSizes.s};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n  color: ${props => props.theme.colors.navLink};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: ${props => props.theme.lineHeights.m};\n  }\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const TitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const Span = styled.span`\n  font-size: ${props => props.theme.fontSizes.s};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xl};\n  }\n`;\n","import { FormEvent, useState } from 'react';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useInput } from '../../../hooks/useInput';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport * as SC from './RegisterForm.styled';\nimport { SVG, IMG, IMG2x } from '../../../images';\nimport { ChangeLngElem } from '../../ChangeLngElem/ChangeLngElem';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n\n  const name = useInput('', { isName: true });\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { isPassword: true });\n  const confirmPassword = useInput('', { isSamePassword: password.value });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const payload: ICredentials = {\n      name: name.value as string,\n      email: (email.value as string).toLowerCase(),\n      password: password.value as string,\n    };\n\n    dispatch(signUp(payload));\n  };\n\n  return (\n    <SC.Wrapper>\n      <SC.InnerDiv>\n        <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n          <SC.TitleDiv>\n            <SC.Title>{t('Sign Up')}</SC.Title>\n            <ChangeLngElem />\n          </SC.TitleDiv>\n          <SC.Div>\n            <SC.Label>\n              {t('Name')}\n              <SC.Input\n                style={{\n                  border:\n                    ((name.isDirty &&\n                      !name.nameError &&\n                      '1px solid green') as string) ||\n                    ((name.isDirty &&\n                      name.nameError &&\n                      '1px solid red') as string),\n                }}\n                onChange={e => name.onChange(e)}\n                onBlur={e => name.onBlur(e)}\n                value={name.value as string}\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder={t('Enter your name')!}\n                required\n              />\n            </SC.Label>\n            {name.isDirty && name.nameError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter your name pls')}\n              </SC.Notification>\n            )}\n            {name.isDirty && !name.nameError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Name is valid')}\n              </SC.Notification>\n            )}\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Email')}\n              <SC.Input\n                style={{\n                  border:\n                    ((email.isDirty &&\n                      !email.emailError &&\n                      '1px solid green') as string) ||\n                    ((email.isDirty &&\n                      email.emailError &&\n                      '1px solid red') as string),\n                }}\n                type=\"email\"\n                value={email.value as string}\n                onChange={e => email.onChange(e)}\n                onBlur={e => email.onBlur(e)}\n                name=\"email\"\n                placeholder={t('Enter your email')!}\n                required\n              />\n            </SC.Label>\n            {(email.isDirty && email.emailError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Email')}\n              </SC.Notification>\n            )) ||\n              (email.isDirty && !email.emailError && (\n                <SC.Notification style={{ color: 'green' }}>\n                  {t('Email is correct')}\n                </SC.Notification>\n              ))}\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Password')}\n              <SC.Input\n                style={{\n                  border:\n                    ((password.isDirty &&\n                      !password.passwordError &&\n                      '1px solid green') as string) ||\n                    ((password.isDirty &&\n                      password.passwordError &&\n                      '1px solid red') as string),\n                }}\n                type={passwordType}\n                value={password.value as string}\n                onChange={e => password.onChange(e)}\n                onBlur={e => password.onBlur(e)}\n                name=\"password\"\n                placeholder={t('Enter your password')!}\n                required\n              />\n            </SC.Label>\n            {password.isDirty && password.passwordError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Password')}\n              </SC.Notification>\n            )}\n            {password.isDirty && !password.passwordError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Password is correct')}\n              </SC.Notification>\n            )}\n            <SC.Eye\n              onClick={() => {\n                passwordType === 'password'\n                  ? setPasswordType('text')\n                  : setPasswordType('password');\n              }}\n            >\n              {passwordType === 'password' ? (\n                <SVG.EyeIcon />\n              ) : (\n                <SVG.EyeClosedIcon />\n              )}\n            </SC.Eye>\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Confirm Password')}\n              <SC.Input\n                style={{\n                  border:\n                    ((confirmPassword.isDirty &&\n                      password.value === confirmPassword.value &&\n                      '1px solid green') as string) ||\n                    ((confirmPassword.isDirty &&\n                      password.value !== confirmPassword.value &&\n                      '1px solid red') as string),\n                }}\n                type={confirmPasswordType}\n                value={confirmPassword.value as string}\n                onChange={e => confirmPassword.onChange(e)}\n                onBlur={e => confirmPassword.onBlur(e)}\n                name=\"confirmPassword\"\n                placeholder={t('Confirm Password')!}\n                required\n              />\n            </SC.Label>\n            {confirmPassword.isDirty &&\n              password.value === confirmPassword.value && (\n                <SC.Notification style={{ color: 'green' }}>\n                  {t('confirmPassword is correct')}\n                </SC.Notification>\n              )}\n            {confirmPassword.isDirty &&\n              password.value !== confirmPassword.value && (\n                <SC.Notification style={{ color: 'red' }}>\n                  {t('confirmPassword is not correct')}\n                </SC.Notification>\n              )}\n            <SC.Eye\n              onClick={() => {\n                confirmPasswordType === 'password'\n                  ? setConfirmPasswordType('text')\n                  : setConfirmPasswordType('password');\n              }}\n            >\n              {confirmPasswordType === 'password' ? (\n                <SVG.EyeIcon />\n              ) : (\n                <SVG.EyeClosedIcon />\n              )}\n            </SC.Eye>\n          </SC.Div>\n\n          <SC.Button\n            disabled={\n              !email.validForm ||\n              !password.validForm ||\n              !name.validForm ||\n              !confirmPassword.validForm\n            }\n            type=\"submit\"\n          >\n            {t('Sign Up')}\n            <SVG.LogInIcon />\n          </SC.Button>\n          <SC.Google href=\"https://your-tasks-hv5t.onrender.com/api/auth/google\">\n            <SC.Span>{t('register with')}</SC.Span>\n            <SC.GoogleName>\n              <SVG.GoogleIcon />\n              <SC.Span>\n                <i>oo</i>gle\n              </SC.Span>\n            </SC.GoogleName>\n          </SC.Google>\n        </SC.Form>\n        <SC.Link to=\"/login\">{t('Log In')}</SC.Link>\n        <SC.GooseImage\n          srcSet={`${IMG.register} 1x, ${IMG2x.register2x} 2x`}\n          alt=\"goose\"\n        />\n      </SC.InnerDiv>\n    </SC.Wrapper>\n  );\n};\n","import { RegisterForm } from '../../components/RegisterForm/RegisterForm/RegisterForm';\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  return (\n        <RegisterForm />\n  );\n};\n"],"names":["Wrap","styled","Btn","ChangeLngElem","i18n","useTranslation","setSearchParams","useGetSearchParams","onchangeLngClick","evt","name","currentTarget","lang","changeLanguage","selectedLang","localStorage","getItem","type","onClick","src","USA","alt","style","width","UA","useSearchParams","searchParams","get","token","useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","emailError","setEmailError","confirmError","setConfirmError","nameError","setNameError","passwordError","setPasswordError","validForm","setValidForm","skypeError","setSkypeError","phoneError","setPhoneError","useEffect","validation","test","String","toLowerCase","useValidation","onChange","e","target","onBlur","Wrapper","props","theme","colors","loginBackground","InnerDiv","Form","white","radii","normal","Title","fontSizes","l","fontWeights","semiBold","lineHeights","xl","blue","xxxl","Label","xs","columnHeader","s","Input","borders","task","black","regular","grey4","m","Button","p","disabledButton","medium","white3","space","hoverYellow","Div","Notification","Google","userInput","fontFamily","logo","GoogleName","Eye","GooseImage","Link","NavLink","navLink","TitleDiv","Span","RegisterForm","dispatch","useDispatch","t","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","isName","email","isEmail","password","isPassword","confirmPassword","isSamePassword","onSubmit","event","preventDefault","payload","signUp","autoComplete","border","id","placeholder","required","color","disabled","href","to","srcSet","IMG","IMG2x","RegisterPage"],"sourceRoot":""}