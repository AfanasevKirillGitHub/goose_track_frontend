{"version":3,"file":"static/js/346.e2d743d6.chunk.js","mappings":"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","sources":["pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","pages/CalendarPage/CalendarGrid/CalendarGrid.styled.ts","pages/CalendarPage/CalendarGrid/CalendarGrid.tsx","pages/CalendarPage/CalendarPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CalendarMonitorWrapper = styled.div`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 16px;\n  }\n`;\nexport const TextWrapperOutline = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #3e85f3;\n  color: ${props => props.theme.colors.white};\n  padding: 8px 12px;\n  border-radius: 8px;\n  height: 100%;\n  min-width: 155px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 173px;\n  }\n`;\n\nexport const TextWrapper = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.286;\n\n  text-transform: uppercase;\n\n  color: #ffffff;\n  min-width: 24px;\n\n  &:not(:last-of-type) {\n    margin-right: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const ChevronButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ChevronButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 7px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background-color: ${props => props.theme.colors.white};\n  color: #616161;\n\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n`;\n\nexport const TodayButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.1667;\n  background-color: ${props => props.theme.colors.white};\n  color: #616161;\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const ButtonWrapper = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  color: #616161;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: #3e85f3;\n  padding: 9px 16px;\n  background-color: #e3f3ff;\n  min-width: 82px;\n  &.active.act {\n    background-color: #3e85f350;\n  }\n`;\n\nexport const LinkMonth = styled(Link)`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const LinkDay = styled(Link)`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport 'moment/locale/uk';\n\nimport * as SC from './CalendarMonitor.styled';\nimport { SVG } from '../../../images';\nimport { useLocation } from 'react-router-dom';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n  currentDay?: boolean;\n  nextDisabled?: boolean;\n  prevDisabled?: boolean;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n  currentDay,\n  nextDisabled,\n  prevDisabled,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n\n  return (\n    <SC.CalendarMonitorWrapper>\n      <SC.LeftWrapper>\n        <SC.TextWrapperOutline>\n          {currentDay && <SC.TextWrapper>{today.format('D')}</SC.TextWrapper>}\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </SC.TextWrapperOutline>\n        <SC.ChevronButtonsWrapper>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={prevHandler}\n            disabled={prevDisabled}\n            style={{\n              transform: 'rotate(180deg)',\n              color: prevDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={nextHandler}\n            disabled={nextDisabled}\n            style={{\n              color: nextDisabled ? '#DCE3E5' : '#616161',\n            }}\n          >\n            <SVG.Chevron />\n          </SC.ChevronButton>\n        </SC.ChevronButtonsWrapper>\n        <SC.TodayButton type=\"button\" onClick={todayHandler}>\n          {t('Today')}\n        </SC.TodayButton>\n      </SC.LeftWrapper>\n      <SC.ButtonsWrapper>\n        <SC.LinkMonth\n          className={pathname.includes('day') ? '' : 'act'}\n          to=\"/user/calendar\"\n        >\n          {t('Month')}\n        </SC.LinkMonth>\n        <SC.LinkDay\n          className={pathname.includes('day') ? 'act' : ''}\n          to={`/user/calendar/day/${today.format('YYYY-MM-DD')}`}\n        >\n          {t('Day')}\n        </SC.LinkDay>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface ICalendarGridProps {\n  isHeader?: boolean;\n}\n\ninterface ITopRopperInCellProps {\n  justifyContent: string;\n}\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isSelectedMonth?: boolean;\n}\ninterface ITaskListItem {\n  design: string;\n}\n\nexport const CalendarContainer = styled.div`\n  width: 100%;\n  padding-top: 12px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 16px;\n    padding-bottom: 32px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const CalendarGrid = styled.div<ICalendarGridProps>`\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: 1px;\n  background-color: ${p =>\n    p.isHeader ? 'rgba(220, 227, 229, 0.8)' : 'rgba(220, 227, 229, 0.8)'};\n  ${p => p.isHeader && 'border-bottom: 1px solid #4d4c4d'}\n  width:100%;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: ${props => props.theme.radii.normal};\n\n  overflow: hidden;\n`;\n\nexport const WeekWrapper = styled.ul<ICellWrapperProps>`\n  list-style: none;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 15px;\n  padding: 14px 0;\n\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: ${props => props.theme.radii.normal};\n\n  background-color: ${props => props.theme.colors.white};\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.286;\n  color: #616161;\n`;\n\nexport const DayOfWeekItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n\n  &:nth-last-child(2) > span,\n  &:nth-last-child(1) > span {\n    color: ${props => props.theme.colors.blue};\n  }\n`;\n\nexport const DayOfWeek = styled.span`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.125;\n  text-transform: uppercase;\n\n  color: #616161;\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  min-width: 100%;\n  min-height: 94px;\n  padding: 2px;\n  padding-top: 8px;\n  background-color: ${p => (p.isWeekend ? '#FFFFFF' : '#FFFFFF')};\n  color: ${p => (p.isSelectedMonth ? '#343434' : 'rgba(220, 227, 229, 0.8)')};\n\n  @media screen and (min-width: 768px) {\n    min-height: 144px;\n    padding: 4px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-height: 104px;\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const TopRopperInCell = styled.div<ITopRopperInCellProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${p => (p.justifyContent ? p.justifyContent : 'flex-start')};\n`;\n\nexport const DayWrapper = styled.div`\n  width: 21px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.1667;\n\n  @media screen and (min-width: 768px) {\n    width: 27px;\n    height: 26px;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n  border-radius: 6px;\n  width: 100%;\n  height: 100%;\n\n  @media screen and (min-width: 768px) {\n    border-radius: ${props => props.theme.radii.normal};\n  }\n`;\n\nexport const ShowDaywrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const TasksList = styled.ul`\n  list-style: none;\n  margin-top: 4px;\n`;\n\nexport const TasksListItem = styled.li<ITaskListItem>`\n  background-color: ${p => {\n    console.log(p);\n    switch (p.design) {\n      case 'low':\n        return p.theme.colors.blue4;\n      case 'medium':\n        return p.theme.colors.lightYellow;\n      case 'high':\n        return p.theme.colors.lightPink;\n      default:\n        return p.theme.colors.grey4;\n    }\n  }};\n  color: ${p => {\n    switch (p.design) {\n      case 'low':\n        return p.theme.colors.blue;\n      case 'medium':\n        return p.theme.colors.yellow;\n      case 'high':\n        return p.theme.colors.pink;\n      default:\n        return p.theme.colors.grey8;\n    }\n  }};\n  border-radius: ${props => props.theme.radii.normal};\n  font-size: ${props => props.theme.fontSizes.xxs};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  padding: 4px 10px;\n\n  :not(:last-child) {\n    margin-bottom: 2px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const TasksListItemDiv = styled.li`\n  display: inline-block;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n  @media screen and (max-width: 767px) {\n    :nth-child(n + 3) {\n      display: none;\n    }\n  }\n`;\n\nexport const TasksListItemMany = styled(TasksListItem)<ITaskListItem>`\n  width: 20px;\n  height: 20px;\n`;\n","import moment from 'moment';\nimport * as SC from './CalendarGrid.styled';\nimport { useFetchTasksQuery } from '../../../redux/task/taskOperations';\n\ninterface IProps {\n  startDay: moment.Moment;\n  today: moment.Moment;\n}\n\nexport const CalendarGrid = ({ startDay, today }: IProps) => {\n  const totalDays = 42;\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const { data } = useFetchTasksQuery(null);\n\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return moment().isSame(day, 'day');\n  };\n\n  const isSelectedMonth = (month: moment.Moment): boolean => {\n    return today.isSame(month, 'month');\n  };\n\n  const isMobileView = window.innerWidth < 768;\n\n  return (\n    <SC.CalendarContainer>\n      <SC.WeekWrapper>\n        {[...Array(7)].map((_, idx) => (\n          <SC.DayOfWeekItem key={idx}>\n            <SC.DayOfWeek>\n              {isMobileView\n                ? moment()\n                    .day(idx + 1)\n                    .format('dd')\n                    .slice(0, 1)\n                : moment()\n                    .day(idx + 1)\n                    .format('ddd')\n                    .toUpperCase()}\n            </SC.DayOfWeek>\n          </SC.DayOfWeekItem>\n        ))}\n      </SC.WeekWrapper>\n      <SC.CalendarGrid>\n        {daysArray.map(dayItem => (\n          <SC.Link\n            to={`/user/calendar/day/${dayItem.format('YYYY-MM-DD')}`}\n            key={dayItem.format('DDMMYY')}\n          >\n            <SC.CellWrapper\n              isWeekend={dayItem.day() === 6 || dayItem.day() === 0}\n              isSelectedMonth={isSelectedMonth(dayItem)}\n            >\n              <SC.TopRopperInCell justifyContent={'flex-end'}>\n                <SC.ShowDaywrapper>\n                  <SC.DayWrapper>\n                    {isCurrentDay(dayItem) ? (\n                      <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                    ) : (\n                      dayItem.format('D')\n                    )}\n                  </SC.DayWrapper>\n                </SC.ShowDaywrapper>\n                <SC.TasksList>\n                  {(function () {\n                    const dayTasks = data?.filter(\n                      ({ date }) => date === dayItem.format('YYYY-MM-DD')\n                    );\n                    return dayTasks?.map(todo => {\n                      return dayTasks.length <= 2 ? (\n                        <SC.TasksListItem\n                          key={todo.title}\n                          design={todo.priority}\n                        >\n                          {todo.title.slice(0, isMobileView ? 2 : 8)}...\n                        </SC.TasksListItem>\n                      ) : (\n                        <SC.TasksListItemDiv>\n                          <SC.TasksListItemMany\n                            design={todo.priority}\n                          ></SC.TasksListItemMany>\n                        </SC.TasksListItemDiv>\n                      );\n                    });\n                  })()}\n                </SC.TasksList>\n              </SC.TopRopperInCell>\n            </SC.CellWrapper>\n          </SC.Link>\n        ))}\n      </SC.CalendarGrid>\n    </SC.CalendarContainer>\n  );\n};\n","// import { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport 'moment/locale/uk';\nimport { useTranslation } from 'react-i18next';\nimport { CalendarMonitor } from './CalendarMonitor/CalendarMonitor';\nimport { CalendarGrid } from './CalendarGrid/CalendarGrid';\n\nexport const CalendarPage = () => {\n  const { t } = useTranslation();\n\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  moment.locale(t(`lang`)!);\n\n  const [today, setToday] = useState(moment());\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  const prevHandler = () => {\n    setToday(prev => prev.clone().subtract(1, 'month'));\n  };\n  const nextHandler = () => {\n    setToday(prev => prev.clone().add(1, 'month'));\n  };\n  const todayHandler = () => {\n    setToday(moment());\n  };\n\n  return (\n    <>\n      <CalendarMonitor\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n        todayHandler={todayHandler}\n        today={today}\n      />\n      <CalendarGrid startDay={startDay} today={today} />\n    </>\n  );\n};\n"],"names":["CalendarMonitorWrapper","styled","LeftWrapper","TextWrapperOutline","props","theme","colors","white","TextWrapper","TitleWrapper","ButtonsWrapper","ChevronButtonsWrapper","ChevronButton","TodayButton","Link","NavLink","LinkMonth","LinkDay","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","currentDay","nextDisabled","prevDisabled","t","useTranslation","pathname","useLocation","format","type","onClick","disabled","style","transform","color","className","includes","to","CalendarContainer","CalendarGrid","p","isHeader","radii","normal","WeekWrapper","DayOfWeekItem","blue","DayOfWeek","CellWrapper","isWeekend","isSelectedMonth","TopRopperInCell","justifyContent","DayWrapper","CurrentDay","ShowDaywrapper","TasksList","TasksListItem","console","log","design","blue4","lightYellow","lightPink","grey4","yellow","pink","grey8","fontSizes","xxs","fontWeights","bold","s","TasksListItemDiv","TasksListItemMany","startDay","day","clone","subtract","daysArray","Array","map","add","data","useFetchTasksQuery","isCurrentDay","moment","isSame","isMobileView","window","innerWidth","_","idx","slice","toUpperCase","dayItem","month","dayTasks","filter","date","todo","length","priority","title","CalendarPage","week","dow","useState","setToday","startOf","prev"],"sourceRoot":""}