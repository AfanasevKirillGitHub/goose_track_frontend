{"version":3,"file":"static/js/137.d0e0a52a.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","pages/CalendarPage/CalendarMonitor/CalendarMonitor.styled.ts","pages/CalendarPage/CalendarMonitor/CalendarMonitor.tsx","helpers/enums.ts","pages/CurrentDayPage/CurrentDayPage.styled.ts","hooks/useModal.ts","components/AddTaskBtn/AddTaskBtn.styled.ts","components/AddTaskBtn/AddTaskBtn.tsx","components/ColumnHeadBar/ColumnHeadBar.styled.ts","components/ColumnHeadBar/ColumnHeadBar.tsx","components/TaskColumnCard/TaskColumnCard.styled.ts","components/TaskForm/TaskForm.Styled.ts","components/TaskForm/TaskFormButton/TaskFormButton.styled.ts","components/TaskForm/TaskFormButton/TaskFormButton.tsx","components/TaskForm/TaskForm.tsx","components/TaskModal/ConfirmDelete/ConfirmDelete.styled.ts","components/TaskModal/ConfirmDelete/ConfirmDelete.tsx","components/TaskModal/TaskModal.tsx","components/TaskColumnCard/ChangeStatusPopUp/ChangeStatusPopUp.styled.ts","components/TaskColumnCard/ChangeStatusPopUp/ChangeStatusPopUp.tsx","components/TaskColumnCard/TaskToolbar/TaskToolbar.styled.ts","components/TaskColumnCard/TaskToolbar/TaskToolbar.tsx","components/TaskColumnCard/TaskColumnCard.tsx","components/ColumnTasksList/ColumnTasksList.styled.ts","helpers/scrollbars.ts","components/ColumnTasksList/ColumnTasksList.tsx","components/TasksColumn/TasksColumn.styled.ts","components/TasksColumn/TasksColumn.tsx","components/TasksColumnsList/TasksColumnsList.styled.ts","components/TasksColumnsList/TasksColumnsList.tsx","pages/CurrentDayPage/CurrentDayPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  min-width: 360px;\n  max-width: 1200px;\n  max-height: 90%;\n  padding: 40px 28px;\n  border-radius: ${props => props.theme.radii.normal};\n  background-color: ${p => p.theme.colors.modalBackground};\n  box-shadow: ${props => props.theme.shadows.modal};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 8px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.black};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    transform: scale(1.1);\n  }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { SVG } from '../../images';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const closeModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', closeModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n      // document.body.style.overflow = '';\n      const mobileMenu = document.querySelector('#menuContainer') as HTMLElement;\n      mobileMenu?.classList.contains('is-open') ? document.body.style.overflow = 'hidden' : document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <SVG.CloseIcon />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CalendarMonitorWrapper = styled.div`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n\nexport const LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    justify-content: space-between;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 16px;\n  }\n`;\nexport const TextWrapperOutline = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  background-color: ${props => props.theme.colors.currentDay};\n\n  color: ${props => props.theme.colors.white};\n  padding: 8px 12px;\n  border-radius: 8px;\n  height: 100%;\n  min-width: 155px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 173px;\n  }\n`;\n\nexport const TextWrapper = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.286;\n\n  text-transform: uppercase;\n\n  color: ${props => props.theme.colors.white3};\n  min-width: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const TitleWrapper = styled(TextWrapper)`\n  font-weight: bold;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.125;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const ChevronButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ChevronButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 7px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.grey};\n\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n\n  &:disabled {\n    color: ${props => props.theme.colors.grey9};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n`;\n\nexport const HiddenTitle = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n\n  :active,\n  :focus {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    white-space: normal;\n    width: auto;\n  }\n`;\n\nexport const TodayButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.1667;\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.grey};\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 16px;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n`;\n\nexport const ButtonWrapper = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: transparent;\n  border-radius: 8px;\n  padding: 8px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n\n  color: #616161;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => props.theme.colors.navLink};\n  padding: 9px 16px;\n  background-color: ${props => props.theme.colors.monitorLink};\n  min-width: 82px;\n  &.active.act {\n    background-color: ${props => props.theme.colors.monitorActiveLink};\n  }\n`;\n\nexport const LinkMonth = styled(Link)`\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n`;\n\nexport const LinkDay = styled(Link)`\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n`;\n","import moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport 'moment/locale/uk';\n\nimport * as SC from './CalendarMonitor.styled';\nimport { SVG } from '../../../images';\nimport { useLocation } from 'react-router-dom';\n\ninterface IProps {\n  today: moment.Moment;\n  todayHandler: () => void;\n  nextHandler: () => void;\n  prevHandler: () => void;\n  currentDay?: boolean;\n}\n\nexport const CalendarMonitor = ({\n  today,\n  prevHandler,\n  nextHandler,\n  todayHandler,\n  currentDay,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n\n  today.locale(t(`lang`)!);\n\n  return (\n    <SC.CalendarMonitorWrapper>\n      <SC.LeftWrapper>\n        <SC.TextWrapperOutline>\n          {currentDay && <SC.TextWrapper>{today.format('D')}</SC.TextWrapper>}\n          <SC.TitleWrapper>{today.format('MMMM')}</SC.TitleWrapper>\n          <SC.TextWrapper>{today.format('YYYY')}</SC.TextWrapper>\n        </SC.TextWrapperOutline>\n        <SC.ChevronButtonsWrapper>\n          <SC.ChevronButton\n            type=\"button\"\n            onClick={prevHandler}\n            style={{\n              transform: 'rotate(180deg)',\n            }}\n          >\n            <SVG.Chevron />\n            <SC.HiddenTitle>Previous</SC.HiddenTitle>\n          </SC.ChevronButton>\n          <SC.ChevronButton type=\"button\" onClick={nextHandler}>\n            <SVG.Chevron />\n            <SC.HiddenTitle>Next</SC.HiddenTitle>\n          </SC.ChevronButton>\n        </SC.ChevronButtonsWrapper>\n        <SC.TodayButton type=\"button\" onClick={todayHandler}>\n          {t('Today')}\n        </SC.TodayButton>\n      </SC.LeftWrapper>\n      <SC.ButtonsWrapper>\n        <SC.LinkMonth\n          className={pathname.includes('day') ? '' : 'act'}\n          to=\"/user/calendar\"\n        >\n          {t('Month')}\n        </SC.LinkMonth>\n        <SC.LinkDay\n          className={pathname.includes('day') ? 'act' : ''}\n          to={`/user/calendar/day/${today.format('YYYY-MM-DD')}`}\n        >\n          {t('Day')}\n        </SC.LinkDay>\n      </SC.ButtonsWrapper>\n    </SC.CalendarMonitorWrapper>\n  );\n};\n","export enum ESTATUS {\n  TODO = 'todo',\n  INPROGRESS = 'inprogress',\n  DONE = 'done',\n}\n\nexport enum EPRIORITY {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n}\n\nexport const STATUS = [ESTATUS.TODO, ESTATUS.INPROGRESS, ESTATUS.DONE];\nexport const PRIORITY = [EPRIORITY.LOW, EPRIORITY.MEDIUM, EPRIORITY.HIGH];\n","import styled from 'styled-components';\n\ninterface ICellWrapperProps {\n  isWeekend?: boolean;\n  isHeader?: boolean;\n  isSelectedMonth?: boolean;\n}\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CurrDayWrapper = styled.div`\n  padding-top: 16px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n\nexport const CellWrapper = styled.div<ICellWrapperProps>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  ${p => p.isHeader && 'text-align:center'}\n  width: 27px;\n  height: 26px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.125;\n  color: ${props => props.theme.colors.black};\n`;\n\nexport const CurrentDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.currentDay};\n  color: ${props => props.theme.colors.white3};\n  border-radius: ${props => props.theme.radii.normal};\n\n  width: 100%;\n  height: 100%;\n`;\n\nexport const WeekWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 14px 18px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.286;\n\n  background-color: ${props => props.theme.colors.white};\n  color: ${props => props.theme.colors.grey3};\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 46px;\n  }\n`;\n\nexport const DayOfWeek = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n\n  :nth-last-child(1) > span,\n  :nth-last-child(2) > span {\n    color: ${props => props.theme.colors.blue};\n  }\n`;\n","import { useState } from 'react';\n\nexport const useModal = () => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setIsOpenModal(prev => !prev);\n  };\n\n  return { isOpenModal, toggleModal };\n};\n","import styled from 'styled-components';\n\nexport const AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 52px;\n  gap: 8px;\n  margin-top: auto;\n\n  font-family: ${p => p.theme.fontFamily.main};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.xl};\n\n  text-align: center;\n\n  color: ${p => p.theme.colors.black2};\n\n  background-color: ${p => p.theme.colors.blue3};\n  border: ${p => p.theme.borders.addButton};\n  border-radius: ${p => p.theme.radii.normal};\n\n  cursor: pointer;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { SVG } from '../../images';\nimport * as SC from './AddTaskBtn.styled';\n\ninterface IAddBtnProps {\n  onClick: () => void;\n}\n\nexport const AddTaskBtn = ({ onClick }: IAddBtnProps) => {\n  const { t } = useTranslation();\n  return (\n    <SC.AddButton type=\"button\" onClick={onClick}>\n      <SVG.AddIcon />\n      {t('Add task')}\n    </SC.AddButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.p`\n  margin: 7px 0px 28px 0px;\n  font-size: ${props => props.theme.fontSizes.xl};\n  line-height: ${props => props.theme.lineHeights.m};\n  font-family: ${props => props.theme.fontFamily.main};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  color: ${props => props.theme.colors.columnHeader};\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import * as SC from './ColumnHeadBar.styled';\n\ninterface IColumnHeadBarProps {\n  name: string;\n}\n\nexport const ColumnHeadBar = ({ name }: IColumnHeadBarProps) => {\n  return <SC.Header>{name}</SC.Header>;\n};\n","import styled from 'styled-components';\n\ninterface ITaskPriority {\n  name: string;\n}\n\nexport const TaskCard = styled.article`\n  width: 100%;\n\n  padding-top: 14px;\n  padding-bottom: 18px;\n  padding-left: 14px;\n  padding-right: 14px;\n\n  background-color: ${p => p.theme.colors.taskCardBackground};\n\n  border: ${p => p.theme.borders.tasks};\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const TaskTitle = styled.h3`\n  margin-bottom: 28px;\n\n  font-style: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: ${p => p.theme.lineHeights.l};\n\n  color: ${p => p.theme.colors.columnHeader};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TaskWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const TaskAvatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${p => p.theme.space[5]}px;\n  height: ${p => p.theme.space[5]}px;\n\n  overflow: hidden;\n\n  border: ${p => p.theme.borders.avatar};\n  border-radius: ${p => p.theme.radii.round};\n\n  background-color: ${p => p.theme.colors.white};\n`;\n\nexport const TaskImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const TaskPriority = styled.div<ITaskPriority>`\n  padding-top: ${p => p.theme.space[1]}px;\n  padding-bottom: ${p => p.theme.space[1]}px;\n  padding-left: 12px;\n  padding-right: 12px;\n\n  font-style: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${p => p.theme.lineHeights.l};\n\n  color: ${p => p.theme.colors.white2};\n  background-color: ${p => {\n    switch (p.name) {\n      case 'low':\n        return p.theme.colors.blue5;\n      case 'medium':\n        return p.theme.colors.yellow;\n      case 'high':\n        return p.theme.colors.pink;\n      default:\n        return p.theme.colors.grey4;\n    }\n  }};\n\n  border-radius: ${p => p.theme.radii.small};\n`;\n","import styled from 'styled-components';\n\ninterface ICustomRadioButton {\n  name: string;\n}\n\nexport const Form = styled.form`\n  width: 303px;\n  padding-top: 8px;\n\n  font-family: ${p => p.theme.fontFamily.main};\n\n  @media screen and (min-width: 768px) {\n    width: 396px;\n    padding-top: 0px;\n  }\n`;\n\nexport const Field = styled.span`\n  display: block;\n  width: 100%;\n`;\n\nexport const Label = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 14px;\n  padding-right: 14px;\n\n  margin-bottom: ${p => {\n    return p.type === 'time' ? p.theme.space[0] : p.theme.space[4];\n  }}px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${p => {\n      return p.type === 'time' ? p.theme.space[0] : 18;\n    }}px;\n  }\n\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n\n  color: ${p => p.theme.colors.grey};\n  background-color: ${p => p.theme.colors.grey8};\n  outline: ${p => p.theme.borders.modalInput};\n\n  border: none;\n  border-radius: ${props => props.theme.radii.normal};\n\n  &::placeholder {\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: ${p => p.theme.fontWeights.semiBold};\n    line-height: ${props => props.theme.lineHeights.xl};\n\n    color: ${p => p.theme.colors.grey};\n    background-color: ${p => p.theme.colors.grey8};\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  &:disabled {\n    color: ${p => p.theme.colors.disabled};\n  }\n`;\n\nexport const Time = styled.div`\n  display: flex;\n  gap: 15px;\n\n  width: 100%;\n\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 28px;\n  }\n`;\n\nexport const PriorityList = styled.ul`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n\n  width: 100%;\n\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const PriorityItem = styled.li`\n  list-style: none;\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n\n  &:disabled {\n    color: ${p => p.theme.colors.disabled};\n  }\n`;\n\nexport const CustomRadioButton = styled.span<ICustomRadioButton>`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n\n  color: ${p => {\n    switch (p.name) {\n      case 'low':\n        return p.theme.colors.blue5;\n      case 'medium':\n        return p.theme.colors.yellow;\n      case 'high':\n        return p.theme.colors.pink;\n      default:\n        return p.theme.colors.grey4;\n    }\n  }};\n\n  svg {\n    width: 12px;\n    height: 12px;\n  }\n\n  border-radius: ${p => p.theme.radii.round};\n`;\n\nexport const PriorityLabel = styled.label`\n  display: flex;\n  gap: 6px;\n  align-items: center;\n\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${p => p.theme.lineHeights.s};\n  text-transform: capitalize;\n\n  color: ${p => p.theme.colors.grey};\n\n  cursor: pointer;\n\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: 14px;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  padding: 12px;\n\n  width: 100%;\n\n  text-transform: capitalize;\n  font-family: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n\n  color: ${p => {\n    return p.type === 'button' ? p.theme.colors.black1 : p.theme.colors.white3;\n  }};\n  background-color: ${p => {\n    return p.type === 'button' ? p.theme.colors.grey2 : p.theme.colors.blue;\n  }};\n\n  border-radius: ${props => props.theme.radii.normal};\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverYellow};\n    color: ${p => p.theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 15px;\n  }\n`;\n","import * as SC from './TaskFormButton.styled';\n\ninterface IProps {\n  children: React.ReactNode;\n  type: 'button' | 'submit';\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nexport const TaskFormButton = ({\n  children,\n  type,\n  onClick,\n  disabled,\n}: IProps) => {\n  return (\n    <SC.Button type={type} onClick={onClick} disabled={disabled}>\n      {children}\n    </SC.Button>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport { SubmitErrorHandler, SubmitHandler, useForm } from 'react-hook-form';\nimport {\n  useAddTasksMutation,\n  useUpdateTasksMutation,\n} from '../../redux/task/taskOperations';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport 'moment/locale/uk';\nimport { SVG } from '../../images';\nimport * as SC from './TaskForm.Styled';\nimport { TaskFormButton } from './TaskFormButton';\nimport { PRIORITY } from '../../helpers/enums';\nimport { t } from 'i18next';\nimport { ITask } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\n\ninterface IProps {\n  toggleModal: () => void;\n\n  fieldsData: Partial<ITask>;\n}\n\nexport const TaskForm = ({ fieldsData, toggleModal }: IProps) => {\n  const { current } = useParams();\n  const taskDay = fieldsData?.date ? fieldsData.date : current;\n\n  const dayNow = moment(Date.now()).format('YYYY-MM-DD');\n\n  const lang = localStorage.getItem('i18nextLng');\n\n  const modalType = (fieldsData.title as string) ? `edit` : `add`;\n\n  const taskCreateTime = fieldsData?.start\n    ? fieldsData.start\n    : moment(Date.now()).format('HH:mm');\n\n  const addMinutes = (minutes: number) => Date.now() + minutes * 60 * 1000;\n\n  const defaultEndTime = moment(addMinutes(60)).format('HH:mm');\n\n  const [title, setTitle] = useState(fieldsData?.title ?? '');\n  const [start, setStart] = useState(fieldsData?.start ?? taskCreateTime);\n  const [end, setEnd] = useState(fieldsData?.end ?? defaultEndTime);\n  const [priority, setPriority] = useState(fieldsData?.priority ?? '');\n\n  const [addTask, { isLoading: taskIsLoading }] = useAddTasksMutation();\n  const [updateTask, { isLoading: isUpdatind }] = useUpdateTasksMutation();\n\n  const { register, handleSubmit } = useForm();\n\n  const onError: SubmitErrorHandler<any> = (errors, e) => {\n    const errorFields = Object.keys(errors);\n    const notifyErrors = () =>\n      errorFields.forEach(errorField => {\n        toast.error(\n          `${t('taskModalMsg.Field')} ${t(`taskModalMsg.${errorField}`)} ${\n            errors[errorField]?.message\n          }`\n        );\n      });\n\n    notifyErrors();\n  };\n\n  const isValidStartTime = (day: string, time: any) => {\n    if (day === dayNow && time >= taskCreateTime) return true;\n    if (day > dayNow) return true;\n  };\n  const isValidEndTime = start <= end;\n\n  const onSubmit: SubmitHandler<any> = (data, e) => {\n    switch (modalType) {\n      case 'edit':\n        if (!isValidStartTime(taskDay as string, start)) {\n          toast.error(t('taskModalMsg.editInPast'));\n          setStart(taskCreateTime);\n          return;\n        }\n        if (!isValidEndTime) {\n          toast.error(t('taskModalMsg.endTimeWrong'));\n          setEnd(defaultEndTime);\n          return;\n        }\n        updateTask({ ...fieldsData, ...data });\n        toggleModal();\n\n        break;\n\n      default:\n        if (!isValidStartTime(taskDay as string, start)) {\n          toast.error(t('taskModalMsg.startTimeInPast'));\n          setStart(taskCreateTime);\n          return;\n        }\n\n        if (!isValidEndTime) {\n          toast.error(t('taskModalMsg.endTimeWrong'));\n          setEnd(defaultEndTime);\n          return;\n        }\n        const taskData = {\n          ...data,\n          status: fieldsData.status,\n          date: current,\n        };\n        addTask({ data: taskData, lang });\n        toggleModal();\n\n        break;\n    }\n  };\n\n  const onInput = (e: ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.name) {\n      case 'title':\n        setTitle(e.target.value);\n        break;\n\n      case 'start':\n        setStart(e.target.value);\n        break;\n\n      case 'end':\n        setEnd(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <SC.Form onSubmit={handleSubmit(onSubmit, onError)}>\n      <SC.Field>\n        <SC.Label>{t('Title')}</SC.Label>\n        <SC.Input\n          type=\"text\"\n          placeholder={t('Enter text')!}\n          {...register('title', {\n            required: t('taskModalMsg.requared') as string,\n            maxLength: {\n              value: 250,\n              message: t('taskModalMsg.maxLength'),\n            },\n          })}\n          name=\"title\"\n          value={title}\n          onInput={onInput}\n        />\n      </SC.Field>\n\n      {/* Блок TIME */}\n      <SC.Time>\n        <SC.Field>\n          <SC.Label>{t('Start')}</SC.Label>\n          <SC.Input\n            type=\"time\"\n            {...register('start', {\n              required: t('taskModalMsg.requared') as string,\n            })}\n            value={start}\n            onInput={onInput}\n          />\n        </SC.Field>\n\n        <SC.Field>\n          <SC.Label>{t('End')}</SC.Label>\n          <SC.Input\n            {...register('end', {\n              required: t('taskModalMsg.requared') as string,\n            })}\n            type=\"time\"\n            value={end}\n            onInput={onInput}\n          />\n        </SC.Field>\n      </SC.Time>\n\n      {/* Блок PRIORITY */}\n      <SC.PriorityList>\n        {PRIORITY.map((name, idx) => {\n          const sellectedByDefault = PRIORITY[idx] === PRIORITY[0];\n\n          const isSelected = priority\n            ? PRIORITY[idx].includes(priority)\n            : sellectedByDefault;\n\n          return (\n            <SC.PriorityItem key={name}>\n              <SC.PriorityLabel>\n                <SC.RadioButton\n                  {...register('priority', {\n                    validate: {\n                      priority: value =>\n                        PRIORITY.includes(value) ||\n                        (t('taskModalMsg.priorityIsNotValid') as string),\n                    },\n                  })}\n                  type=\"radio\"\n                  value={name}\n                  defaultChecked={isSelected}\n                  onChange={e => setPriority(e.target.value)}\n                />\n                <SC.CustomRadioButton name={name}>\n                  {isSelected ? <SVG.RadioButtonActive /> : <SVG.RadioButton />}\n                </SC.CustomRadioButton>\n                {t(name)}\n              </SC.PriorityLabel>\n            </SC.PriorityItem>\n          );\n        })}\n      </SC.PriorityList>\n\n      <SC.Buttons>\n        <TaskFormButton type=\"submit\" disabled={taskIsLoading || isUpdatind}>\n          {modalType === 'add' ? (\n            <SVG.AddIcon width=\"18px\" height=\"18px\" />\n          ) : (\n            <SVG.EditIcon />\n          )}\n          {t(modalType)}\n        </TaskFormButton>\n\n        {modalType === 'add' && (\n          <TaskFormButton type=\"button\" onClick={toggleModal}>\n            {t('Cancel')}\n          </TaskFormButton>\n        )}\n      </SC.Buttons>\n    </SC.Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.navBcg};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    transform: scale(1.2);\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 24px;\n  font-family: 'Inter';\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.m};\n  color: ${p => p.theme.colors.grey3};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${props => props.theme.space[5]}px;\n  }\n`;\n\nexport const ModalList = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  list-style: none;\n`;\n\nexport const ItemBtn = styled.button`\n  width: ${props => props.theme.space[8]}px;\n  height: ${props => props.theme.space[6]}px;\n  padding: ${props => props.theme.space[0]}px;\n  border-radius: ${props => props.theme.radii.normal};\n  border: ${props => props.theme.borders.none};\n  color: ${p => p.theme.colors.white3};\n  background-color: ${p => p.theme.colors.blue};\n  cursor: pointer;\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: ${props => props.theme.lineHeights.xl};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out,\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.blue};\n    background-color: ${p => p.theme.colors.hoverBackground};\n  }\n`;\n\nexport const SecondaryItemBtn = styled(ItemBtn)`\n  background-color: ${p => p.theme.colors.grey2};\n  color: ${p => p.theme.colors.black4};\n`;\n","import { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\n\nimport { useRemoveTasksMutation } from '../../../redux/task/taskOperations';\nimport * as SC from './ConfirmDelete.styled';\n\ninterface IDelete {\n  id: string;\n  toggleModal: () => void;\n}\n\nexport const ConfirmDelete = ({ id, toggleModal }: IDelete) => {\n  const { t } = useTranslation();\n  const [deleteTask] = useRemoveTasksMutation();\n\n  const handleDelete = () => {\n    deleteTask(id);\n    toggleModal();\n\n    localStorage.getItem('i18nextLng') === 'en'\n      ? toast.success('Yaay, more free time!')\n      : toast.success('Юху, більше вільного часу!');\n  };\n\n  return (\n    <>\n      <SC.ModalTitle>{t(`confirm delete`)}</SC.ModalTitle>\n      <SC.ModalList>\n        <SC.ItemBtn type=\"button\" onClick={handleDelete}>\n          {t(`Yes`)}\n        </SC.ItemBtn>\n        <SC.SecondaryItemBtn type=\"button\" onClick={toggleModal}>\n          {t(`No`)}\n        </SC.SecondaryItemBtn>\n      </SC.ModalList>\n    </>\n  );\n};\n","import { ITask } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\nimport { Modal } from '../Modal/Modal';\nimport { TaskForm } from '../TaskForm';\nimport { ConfirmDelete } from './ConfirmDelete/ConfirmDelete';\n\ninterface IProps {\n  status: string;\n  data: ITask | null;\n  btnClicked: string;\n  toggleModal: () => void;\n}\n\nexport const TaskModal = ({\n  status,\n  data,\n  btnClicked,\n  toggleModal,\n}: IProps) => {\n  let formData: Partial<ITask>;\n  if (!data) {\n    formData = { status };\n  } else {\n    formData = { ...data, status };\n  }\n\n  return (\n    <Modal toggleModal={toggleModal}>\n      {btnClicked === 'edit' || btnClicked === 'add' ? (\n        <TaskForm fieldsData={formData} toggleModal={toggleModal} />\n      ) : (\n        <ConfirmDelete id={data?._id as string} toggleModal={toggleModal} />\n      )}\n    </Modal>\n  );\n};\n","import Popup from 'reactjs-popup';\nimport styled from 'styled-components';\n\nexport const TaskToolbarBtn = styled.button`\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  color: ${p => p.theme.colors.black};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.blue};\n  }\n\n  &:disabled {\n    cursor: default;\n  }\n`;\n\nexport const PopupContainer = styled(Popup)`\n  &-content {\n  }\n`;\n\nexport const PopupContent = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 14px;\n\n  padding-top: 12px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  padding-right: 14px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n\nexport const PopupItem = styled.li`\n  list-style: none;\n  width: 100%;\n`;\n\nexport const PopupButton = styled.button`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n  gap: ${p => p.theme.space[3]}px;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  font-style: ${p => p.theme.fontFamily.main};\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: ${p => p.theme.lineHeights.m};\n\n  color: ${p => p.theme.colors.popup};\n\n  cursor: pointer;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover &:not(:disabled) {\n    color: ${p => p.theme.colors.blue};\n  }\n\n  &:disabled {\n    cursor: default;\n    color: ${p => p.theme.colors.grey4};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-style: ${p => p.theme.fontFamily.main};\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: ${p => p.theme.fontWeights.medium};\n    line-height: ${p => p.theme.lineHeights.l};\n  }\n`;\n","import 'reactjs-popup/dist/index.css';\nimport { SVG } from '../../../images';\nimport * as SC from './ChangeStatusPopUp.styled';\nimport { ESTATUS, STATUS } from '../../../helpers/enums';\nimport { useMediaQuery } from '@react-hook/media-query';\nimport { useUpdateTasksMutation } from '../../../redux/task/taskOperations';\nimport { useTranslation } from 'react-i18next';\nimport { ITask } from '../../../helpers/interfaces/taskApiInterface/taskApiInterface';\n\ninterface IProps {\n  taskData: ITask;\n}\n\nexport const ChangeStatusPopUp = ({ taskData }: IProps) => {\n  const [updateTask, { isLoading: isUpdatind }] = useUpdateTasksMutation();\n\n  const tablet = useMediaQuery('screen and (min-width: 768px)');\n  const { t } = useTranslation();\n\n  const changeStatus = (data: string) => {\n    const updatedTask = { ...taskData, status: data };\n\n    updateTask(updatedTask);\n  };\n\n  return (\n    <SC.PopupContainer\n      trigger={\n        <SC.TaskToolbarBtn>\n          <SVG.ArrowCircle />\n        </SC.TaskToolbarBtn>\n      }\n      position={tablet ? 'top center' : 'top center'}\n      arrow={false}\n      offsetY={tablet ? 14 : 27}\n      lockScroll\n      closeOnDocumentClick\n      closeOnEscape\n      contentStyle={{\n        width: 'auto',\n        height: tablet ? '90px' : '70px',\n        padding: 0,\n        borderRadius: '8px',\n        boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n      }}\n    >\n      <SC.PopupContent>\n        {STATUS.filter(status => status !== taskData.status).map(status => {\n          let buttonName = status;\n          switch (buttonName) {\n            case ESTATUS.TODO:\n              buttonName = t('To do');\n              break;\n            case ESTATUS.INPROGRESS:\n              buttonName = t('In progress');\n              break;\n            case ESTATUS.DONE:\n              buttonName = t('Done');\n              break;\n            default:\n              return null;\n          }\n\n          return (\n            <SC.PopupItem key={status}>\n              <SC.PopupButton\n                onClick={() => changeStatus(status)}\n                disabled={isUpdatind}\n              >\n                {buttonName}{' '}\n                <SVG.ArrowCircle\n                  width={tablet ? '14px' : '12px'}\n                  height={tablet ? '14px' : '12px'}\n                />\n              </SC.PopupButton>\n            </SC.PopupItem>\n          );\n        })}\n      </SC.PopupContent>\n    </SC.PopupContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TaskToolbar = styled.div`\n  display: flex;\n  align-items: end;\n  gap: 10px;\n`;\n\nexport const TaskToolbarBtn = styled.button`\n  display: flex;\n  align-items: end;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  cursor: pointer;\n\n  color: ${p => p.theme.colors.black};\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.blue};\n  }\n\n  &:disabled {\n    cursor: default;\n  }\n`;\n","import { useState } from 'react';\nimport { ITask } from '../../../helpers/interfaces/taskApiInterface/taskApiInterface';\nimport { useModal } from '../../../hooks/useModal';\nimport { SVG } from '../../../images';\nimport { useUpdateTasksMutation } from '../../../redux/task/taskOperations';\nimport { TaskModal } from '../../TaskModal';\nimport { ChangeStatusPopUp } from '../ChangeStatusPopUp';\nimport * as SC from './TaskToolbar.styled';\n\ninterface IProps {\n  taskData: ITask;\n}\n\nexport const TaskToolbar = ({ taskData }: IProps) => {\n  const [btnClicked, setBtnClicked] = useState('');\n  const { isOpenModal, toggleModal } = useModal();\n\n  const [, { isLoading: isUpdatind }] = useUpdateTasksMutation();\n\n  const handleClick = (evt: React.MouseEvent<HTMLButtonElement>) => {\n    setBtnClicked(evt.currentTarget.name);\n    toggleModal();\n  };\n\n  return (\n    <>\n      <SC.TaskToolbar>\n        <ChangeStatusPopUp taskData={taskData} />\n\n        <SC.TaskToolbarBtn\n          type=\"button\"\n          name=\"edit\"\n          onClick={handleClick}\n          disabled={isUpdatind}\n        >\n          <SVG.EditIcon />\n        </SC.TaskToolbarBtn>\n\n        <SC.TaskToolbarBtn\n          type=\"button\"\n          name=\"delete\"\n          onClick={handleClick}\n          disabled={isUpdatind}\n        >\n          <SVG.Delete />\n        </SC.TaskToolbarBtn>\n      </SC.TaskToolbar>\n\n      {isOpenModal && (\n        <TaskModal\n          status={taskData.status}\n          data={taskData}\n          toggleModal={toggleModal}\n          btnClicked={btnClicked}\n        />\n      )}\n    </>\n  );\n};\n","import { useAuth } from '../../hooks/useAuth';\nimport * as SC from './TaskColumnCard.styled';\nimport EllipsisText from 'react-ellipsis-text';\nimport { SVG } from '../../images';\nimport { TaskToolbar } from './TaskToolbar';\nimport { t } from 'i18next';\nimport { ITask } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\n\ninterface IProps {\n  taskData: ITask;\n}\n\nexport const TaskColumnCard = ({ taskData }: IProps) => {\n  const {\n    user: { avatarURL },\n  } = useAuth();\n\n  return (\n    <SC.TaskCard>\n      <SC.TaskTitle>\n        <EllipsisText text={taskData.title} length={30} tooltip=\"true\" />\n      </SC.TaskTitle>\n      <SC.TaskWrapper>\n        <SC.TaskWrapper>\n          <SC.TaskAvatar>\n            {avatarURL ? (\n              <SC.TaskImage src={avatarURL} alt=\"user\" />\n            ) : (\n              <SVG.UserAvatar width=\"16px\" higth=\"16px\" />\n            )}\n          </SC.TaskAvatar>\n          <SC.TaskPriority name={taskData.priority}>\n            {t(taskData.priority)}\n          </SC.TaskPriority>\n        </SC.TaskWrapper>\n        <TaskToolbar taskData={taskData} />\n      </SC.TaskWrapper>\n    </SC.TaskCard>\n  );\n};\n","import styled from 'styled-components';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { IScroll } from '../../helpers/scrollbars';\n\ninterface IOverlayProps {\n  element: string;\n  options: { scrollbars: IScroll };\n}\n\nexport const TaskList = styled(OverlayScrollbarsComponent)<IOverlayProps>`\n  max-height: 290px;\n\n  margin-bottom: 8;\n\n  @media screen and (min-width: 768px) {\n    max-height: 378px;\n    margin-bottom: ${p => p.theme.space[5]}px;\n\n    background-color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const TaskElement = styled.li`\n  list-style: none;\n  :not(:last-child) {\n    margin-bottom: 14px;\n  }\n\n  @media screen and (min-width: 768px) {\n    :not(:last-child) {\n      margin-bottom: 18px;\n    }\n  }\n`;\n","export interface IScroll {\n  [key: string]: string | number | boolean;\n}\n\nexport const scrollbars: IScroll = {\n  theme: 'os-theme-dark',\n  visibility: 'auto',\n  autoHide: 'move',\n  autoHideDelay: 700,\n  dragScroll: true,\n};\n","import { TaskColumnCard } from '../TaskColumnCard';\nimport * as SC from './ColumnTasksList.styled';\nimport { scrollbars } from '../../helpers/scrollbars';\nimport { ITask } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\n\ninterface IColumnTasksListProps {\n  tasks: ITask[];\n  status: string;\n}\n\nexport const ColumnTasksList: React.FC<IColumnTasksListProps> = ({\n  tasks,\n  status,\n}: IColumnTasksListProps) => {\n  const getTasksByStatus = () => {\n    return tasks?.filter(task => task.status === status);\n  };\n\n  const tasksByStatus = getTasksByStatus();\n\n  return (\n    <SC.TaskList element=\"ul\" options={{ scrollbars }}>\n      {tasksByStatus?.map(task => (\n        <SC.TaskElement key={task._id}>\n          <TaskColumnCard taskData={task as ITask} />\n        </SC.TaskElement>\n      ))}\n    </SC.TaskList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Column = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 18px 18px 10px 18px;\n  min-width: 335px;\n  width: 100%;\n  max-height: 432px;\n  list-style: none;\n  overflow-y: auto;\n\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n\n  background-color: ${p => p.theme.colors.white};\n\n  scroll-snap-align: start;\n\n  @media screen and (min-width: 768px) {\n    min-width: 344px;\n    max-height: 568px;\n    padding: 18px 20px 28px 20px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { ITask } from '../../helpers/interfaces/taskApiInterface/taskApiInterface';\nimport { useModal } from '../../hooks/useModal';\nimport { AddTaskBtn } from '../AddTaskBtn/AddTaskBtn';\nimport { ColumnHeadBar } from '../ColumnHeadBar/ColumnHeadBar';\nimport { ColumnTasksList } from '../ColumnTasksList/ColumnTasksList';\nimport { TaskModal } from '../TaskModal';\nimport * as SC from './TasksColumn.styled';\n\ninterface ITaskColumnProps {\n  name: string;\n  status: string;\n  tasks: ITask[];\n}\n\nexport const TasksColumn = ({ name, tasks, status }: ITaskColumnProps) => {\n  const { isOpenModal, toggleModal } = useModal();\n  const { t } = useTranslation();\n\n  const modalStatus = name;\n  switch (name) {\n    case 'todo':\n      name = t('To do');\n      break;\n    case 'inprogress':\n      name = t('In progress');\n      break;\n    case 'done':\n      name = t('Done');\n      break;\n    default:\n      return null;\n  }\n\n  return (\n    <SC.Column>\n      <ColumnHeadBar name={name}></ColumnHeadBar>\n      <ColumnTasksList tasks={tasks} status={status}></ColumnTasksList>\n      {isOpenModal && (\n        <TaskModal\n          status={modalStatus}\n          btnClicked=\"add\"\n          data={null}\n          toggleModal={toggleModal}\n        />\n      )}\n\n      <AddTaskBtn onClick={toggleModal} />\n    </SC.Column>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnList = styled.ul`\n  display: flex;\n  list-style: none;\n  width: 100%;\n  gap: 16px;\n  min-height: 100%;\n  margin-top: 16px;\n\n  overflow: hidden;\n  overflow-x: auto;\n\n  scroll-snap-type: x mandatory;\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n  }\n`;\n","import { TasksColumn } from '../TasksColumn/TasksColumn';\nimport { useFetchTasksQuery } from '../../redux/task/taskOperations';\nimport { Loader } from '../Loader/Loader';\nimport * as SC from './TasksColumnsList.styled';\n\ninterface ITasksColumnsListProps {\n  items: string[];\n  currentDate: string;\n}\n\nexport const TasksColumnsList = ({\n  items,\n  currentDate,\n}: ITasksColumnsListProps) => {\n  const { data, isLoading } = useFetchTasksQuery(null);\n\n  const getCurrentDayTasks = () => {\n    return data?.filter(task => task.date === currentDate);\n  };\n\n  const currentDayTasks = getCurrentDayTasks();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SC.ColumnList>\n        {items.map(item => (\n          <TasksColumn\n            key={item}\n            name={item}\n            tasks={currentDayTasks!}\n            status={item}\n          />\n        ))}\n      </SC.ColumnList>\n    </>\n  );\n};\n","import moment from 'moment';\nimport 'moment/locale/uk';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CalendarMonitor } from '../CalendarPage/CalendarMonitor/CalendarMonitor';\nimport * as SC from './CurrentDayPage.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { TasksColumnsList } from '../../components/TasksColumnsList/TasksColumnsList';\nimport { useTranslation } from 'react-i18next';\nimport { STATUS } from '../../helpers/enums';\n\nexport const CurrentDayPage = () => {\n  const { current } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  moment.updateLocale('en', { day: { dow: 1 } });\n\n  const [today, setToday] = useState(moment(current));\n  today.locale(t(`lang`)!);\n\n  const totalDays = 7;\n  const startDay = today.clone().startOf('isoWeek');\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const prevHandler = () => {\n    const prevDay = today.clone().subtract(1, 'day');\n\n    setToday(prevDay);\n    navigate(`/user/calendar/day/${prevDay.format('YYYY-MM-DD')}`);\n  };\n\n  const nextHandler = () => {\n    const nextDay = today.clone().add(1, 'day');\n\n    setToday(nextDay);\n    navigate(`/user/calendar/day/${nextDay.format('YYYY-MM-DD')}`);\n  };\n\n  const todayHandler = () => {\n    setToday(moment());\n    navigate(`/user/calendar/day/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  const isCurrentDay = (day: moment.Moment): boolean => {\n    return today.isSame(day, 'day');\n  };\n\n  const handleChangeDay = (dayItem: moment.Moment) => {\n    setToday(moment(dayItem.format('YYYY-MM-DD')));\n    navigate(`/user/calendar/day/${dayItem.format('YYYY-MM-DD')}`);\n  };\n\n  const isMobileView = window.innerWidth < 768;\n\n  return (\n    <SC.PageWrapper>\n      <CalendarMonitor\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n        todayHandler={todayHandler}\n        today={today}\n        currentDay={true}\n      />\n      <SC.CurrDayWrapper>\n        <SC.WeekWrapper>\n          {daysArray.map(dayItem => (\n            <SC.DayOfWeek key={dayItem.format('DDMMYY')}>\n              <span>\n                {dayItem.format(isMobileView ? 'dd' : 'ddd').toUpperCase()}\n              </span>\n              <SC.CellWrapper onClick={() => handleChangeDay(dayItem)}>\n                {isCurrentDay(dayItem) ? (\n                  <SC.CurrentDay>{dayItem.format('D')}</SC.CurrentDay>\n                ) : (\n                  dayItem.format('D')\n                )}\n              </SC.CellWrapper>\n            </SC.DayOfWeek>\n          ))}\n        </SC.WeekWrapper>\n        <TasksColumnsList items={STATUS} currentDate={current!} />\n      </SC.CurrDayWrapper>\n    </SC.PageWrapper>\n  );\n};\n"],"names":["Overlay","styled","p","theme","colors","backdropBackground","Inner","props","radii","normal","modalBackground","shadows","modal","CloseBtn","black","blue","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","closeModal","evt","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","mobileMenu","classList","contains","createPortal","onClick","target","currentTarget","type","CalendarMonitorWrapper","LeftWrapper","TextWrapperOutline","currentDay","white","TextWrapper","white3","TitleWrapper","ButtonsWrapper","ChevronButtonsWrapper","ChevronButton","grey","grey9","HiddenTitle","TodayButton","Link","NavLink","navLink","monitorLink","monitorActiveLink","LinkMonth","LinkDay","CalendarMonitor","today","prevHandler","nextHandler","todayHandler","t","useTranslation","pathname","useLocation","locale","format","transform","className","includes","to","ESTATUS","EPRIORITY","PageWrapper","CurrDayWrapper","CellWrapper","isHeader","CurrentDay","WeekWrapper","grey3","DayOfWeek","useModal","useState","isOpenModal","setIsOpenModal","prev","AddButton","fontFamily","main","fontWeights","semiBold","fontSizes","s","lineHeights","xl","black2","blue3","borders","addButton","AddTaskBtn","Header","m","bold","columnHeader","ColumnHeadBar","name","TaskCard","taskCardBackground","tasks","TaskTitle","medium","l","TaskWrapper","space","TaskAvatar","avatar","round","TaskImage","TaskPriority","xs","white2","blue5","yellow","pink","grey4","small","Form","Field","Label","Input","grey8","modalInput","disabled","Time","PriorityList","PriorityItem","RadioButton","CustomRadioButton","PriorityLabel","Buttons","Button","black1","grey2","hoverYellow","TaskFormButton","STATUS","TODO","INPROGRESS","DONE","PRIORITY","LOW","MEDIUM","HIGH","TaskForm","minutes","fieldsData","current","useParams","taskDay","date","dayNow","moment","Date","now","lang","localStorage","getItem","modalType","title","taskCreateTime","start","defaultEndTime","setTitle","setStart","end","setEnd","priority","setPriority","useAddTasksMutation","addTask","taskIsLoading","isLoading","useUpdateTasksMutation","updateTask","isUpdatind","useForm","register","handleSubmit","isValidStartTime","day","time","isValidEndTime","onInput","e","value","onSubmit","data","toast","taskData","status","errors","Object","keys","forEach","errorField","message","placeholder","required","maxLength","map","idx","sellectedByDefault","isSelected","validate","defaultChecked","onChange","width","height","ModalTitle","navBcg","ModalList","ItemBtn","none","hoverBackground","SecondaryItemBtn","black4","ConfirmDelete","id","useRemoveTasksMutation","deleteTask","TaskModal","formData","btnClicked","_id","TaskToolbarBtn","PopupContainer","Popup","PopupContent","PopupItem","PopupButton","popup","ChangeStatusPopUp","tablet","useMediaQuery","trigger","position","arrow","offsetY","lockScroll","closeOnDocumentClick","closeOnEscape","contentStyle","padding","borderRadius","boxShadow","filter","buttonName","updatedTask","changeStatus","TaskToolbar","setBtnClicked","handleClick","TaskColumnCard","avatarURL","useAuth","user","text","length","tooltip","src","alt","higth","TaskList","OverlayScrollbarsComponent","TaskElement","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","ColumnTasksList","tasksByStatus","task","element","options","Column","TasksColumn","modalStatus","ColumnList","TasksColumnsList","items","currentDate","useFetchTasksQuery","currentDayTasks","Loader","item","CurrentDayPage","navigate","useNavigate","dow","setToday","clone","startOf","subtract","daysArray","Array","add","isCurrentDay","isSame","isMobileView","innerWidth","prevDay","nextDay","dayItem","toUpperCase","handleChangeDay"],"sourceRoot":""}