{"version":3,"file":"static/js/91.44758c7c.chunk.js","mappings":"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","sources":["components/ChangeLngElem/ChangeLngElem.styled.ts","components/ChangeLngElem/ChangeLngElem.tsx","hooks/useGetSearchParams.ts","hooks/useInput.ts","hooks/useValidation.ts","components/RegisterForm/RegisterForm/RegisterForm.styled.ts","components/RegisterForm/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  :hover {\n    transform: scale(1.4);\n  }\n`;\n","import { MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport USA from '../../helpers/photos/usa.png';\nimport UA from '../../helpers/photos/ukraine.png';\nimport * as SC from './ChangeLngElem.styled';\n\nexport const ChangeLngElem = () => {\n  const { i18n } = useTranslation();\n  const { setSearchParams } = useGetSearchParams();\n\n  const onchangeLngClick = (evt: MouseEvent<HTMLButtonElement>) => {\n    const { name } = evt.currentTarget;\n    setSearchParams({ lang: name });\n    i18n.changeLanguage(name);\n  };\n\n  return (\n    <SC.Wrap>\n      <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"en\">\n        <img src={USA} alt=\"usa flag\" style={{ width: '24px' }} />\n      </SC.Btn>\n      <span>/</span>\n      <SC.Btn type=\"button\" onClick={onchangeLngClick} name=\"ua\">\n        <img src={UA} alt=\"usa flag\" style={{ width: '24px' }} />\n      </SC.Btn>\n    </SC.Wrap>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useGetSearchParams = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const lang = searchParams.get('lang') ?? 'en';\n  const token = searchParams.get('token') ?? '';\n\n  return { lang, token, setSearchParams };\n};\n","import { useValidation } from './useValidation';\nimport { useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useInput = (initialValue: string, validations: ISetings) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n \n  const onBlur = (e: React.FocusEvent<HTMLElement>) => {\n    setIsDirty(true)\n  }\n\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useValidation = (value: string, validations: ISetings) => {\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, setConfirmError] = useState(false);\n  const [nameError, setNameError] = useState(false)\n  const [passwordError, setPasswordError] = useState(false)\n  const [validForm, setValidForm] = useState(false)\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation]\n            ? setConfirmError(false)\n            : setConfirmError(true);\n          break;\n        case 'isName':\n          const reName = /^\\p{L}+$/u\n          reName.test(String(value).toLowerCase())\n          ? setNameError(false)\n          : setNameError(true);\n          break\n        case 'isPassword':\n          const rePassword = /^(?=.*)[^\\s]{7,32}$/ \n          rePassword.test(String(value).toLowerCase())\n          ? setPasswordError(false)\n          : setPasswordError(true);\n          break\n        default:\n          console.log('нет такой проверки');\n      }\n    }\n  }, [value, validations]);\n\nuseEffect(() => {\n  if(emailError || nameError || passwordError || confirmError){\n    setValidForm(false)\n  } else{\n    setValidForm(true)\n  }\n},[emailError, nameError, passwordError, confirmError])\n\n  return {\n    emailError,\n    confirmError,\n    nameError,\n    passwordError,\n    validForm\n  };\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.blue2};\n`;\n\nexport const InnerDiv = styled.div`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 335px;\n  padding: 40px 24px;\n  margin-bottom: 18px;\n  background-color: ${props => props.theme.colors.white};\n  border-radius: ${props => props.theme.radii.normal};\n  @media (min-width: 768px) {\n    width: 480px;\n    padding: 40px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: ${props => props.theme.fontSizes.l};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.xl};\n  color: ${props => props.theme.colors.blue};\n  @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.xxxl};\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  line-height: ${props => props.theme.lineHeights.l};\n  color: ${props => props.theme.colors.black2};\n   @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.s};\n  }\n`;\n\nexport const Input = styled.input`\n  outline: none;\n  width: 100%;\n  border: ${props => props.theme.borders.task};\n  border-radius: ${props => props.theme.radii.normal};\n  margin-top: ${props => props.theme.space[3]}px;\n  padding: 14px;\n  &::placeholder {\n    font-weight: ${props => props.theme.fontWeights.regular};\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.xl};\n    color: ${props => props.theme.colors.grey4};\n    @media (min-width: 768px) {\n    font-size: ${props => props.theme.fontSizes.m};\n  }\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: 287px;\n  height: 44px;\n  padding: 14px;\n  margin-top: ${props => props.theme.space[5]}px;\n\n  border: none;\n  border-radius: ${props => props.theme.radii.medium};\n  background: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n  box-shadow: ${props => props.theme.shadows.button};\n\n  font-weight: ${props => props.theme.fontWeights.semiBold};\n  font-size: ${props => props.theme.fontSizes.s};\n  line-height: ${props => props.theme.lineHeights.xl};\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  svg {\n    margin-left: ${props => props.theme.space[3]}px;\n    width: 18px;\n    height: 18px;\n  }\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.hoverYellow};\n    color: ${props => props.theme.colors.blue};\n  }\n  \n  @media (min-width: 768px) {\n    width: 400px;\n    height: 56px;\n    font-size: ${props => props.theme.fontSizes.l};\n  }\n`;\n\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 26px;\n};\n`;\n\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -35%;\n`;\n\nexport const Google = styled.a`\n height: 24px;\n text-decoration: none;\n display:flex;\n align-items:center;\n color: ${props => props.theme.colors.blue};\n font-family: ${props => props.theme.fontFamily.logo};\n`;\n\nexport const Eye = styled.span`\n    position: absolute;\n    right: 15px;\n    top: 70%;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: ${props => props.theme.colors.blue};\n\n    @media (min-width: 768px) {\n        right: 20px;  \n    }\n`;\n\nexport const GooseImage = styled.img`\n  display: none;\n  @media (min-width: 1440px) {\n    display: block;\n    position: fixed;\n    left: 50px;\n    bottom: 0px;\n    width: 400px;\n    height: 450px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n   font-size: ${props => props.theme.fontSizes.s};\n   font-weight: ${props => props.theme.fontWeights.semiBold};\n   line-height: ${props => props.theme.lineHeights.xl};\n   color: ${props => props.theme.colors.blue};\n    @media (min-width: 768px) {\n       font-size: ${props => props.theme.fontSizes.l};\n        line-height: ${props => props.theme.lineHeights.m};\n    }\n`;\n\nexport const TitleDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 32px;\n`\n\nexport const Span = styled.span`\nfont-size: ${props => props.theme.fontSizes.xl}\n`","import { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useInput } from '../../../hooks/useInput';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FormEvent, useState } from 'react';\nimport { HiEye, HiEyeOff } from 'react-icons/hi';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\nimport * as SC from './RegisterForm.styled';\nimport register from '../../../images/register.png';\nimport { ChangeLngElem } from '../../ChangeLngElem/ChangeLngElem';\nimport { SVG } from '../../../images';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n\n  const name = useInput('', { isName: true });\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { isPassword: true });\n  const confirmPassword = useInput('', { isSamePassword: password.value });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const payload: ICredentials = {\n      name: name.value,\n      email: email.value.toLowerCase(),\n      password: password.value,\n    };\n\n    dispatch(signUp(payload));\n  };\n\n  return (\n    <SC.Wrapper>\n      <SC.InnerDiv>\n        <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n        <SC.TitleDiv>\n          <SC.Title>{t('Sign Up')}</SC.Title>\n          <ChangeLngElem />\n          <SC.Google href=\"https://your-tasks-hv5t.onrender.com/api/auth/google\">\n            <FcGoogle style={{ width: '1.5em', height: '1.5em' }} />\n            <SC.Span><i>oo</i>gle</SC.Span>\n          </SC.Google>\n          </SC.TitleDiv>\n          <SC.Div>\n            <SC.Label>\n              {t('Name')}\n              <SC.Input\n                style={{\n                  border:\n                    ((name.isDirty &&\n                      !name.nameError &&\n                      '1px solid green') as string) ||\n                    ((name.isDirty &&\n                      name.nameError &&\n                      '1px solid red') as string),\n                }}\n                onChange={e => name.onChange(e)}\n                onBlur={e => name.onBlur(e)}\n                value={name.value}\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder={t('Enter your name')!}\n                required\n              />\n            </SC.Label>\n            {name.isDirty && name.nameError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter your name pls')}\n              </SC.Notification>\n            )}\n            {name.isDirty && !name.nameError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Name is valid')}\n              </SC.Notification>\n            )}\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Email')}\n              <SC.Input\n                style={{\n                  border:\n                    ((email.isDirty &&\n                      !email.emailError &&\n                      '1px solid green') as string) ||\n                    ((email.isDirty &&\n                      email.emailError &&\n                      '1px solid red') as string),\n                }}\n                type=\"email\"\n                value={email.value}\n                onChange={e => email.onChange(e)}\n                onBlur={e => email.onBlur(e)}\n                name=\"email\"\n                placeholder={t('Enter your email')!}\n                required\n              />\n            </SC.Label>\n            {(email.isDirty && email.emailError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Email')}\n              </SC.Notification>\n            )) ||\n              (email.isDirty && !email.emailError && (\n                <SC.Notification style={{ color: 'green' }}>\n                  {t('Email is correct')}\n                </SC.Notification>\n              ))}\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Password')}\n              <SC.Input\n                style={{\n                  border:\n                    ((password.isDirty &&\n                      !password.passwordError &&\n                      '1px solid green') as string) ||\n                    ((password.isDirty &&\n                      password.passwordError &&\n                      '1px solid red') as string),\n                }}\n                type={passwordType}\n                value={password.value}\n                onChange={e => password.onChange(e)}\n                onBlur={e => password.onBlur(e)}\n                name=\"password\"\n                placeholder={t('Enter your password')!}\n                required\n              />\n            </SC.Label>\n            {password.isDirty && password.passwordError && (\n              <SC.Notification style={{ color: 'red' }}>\n                {t('Enter a valid Password')}\n              </SC.Notification>\n            )}\n            {password.isDirty && !password.passwordError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Password is correct')}\n              </SC.Notification>\n            )}\n            <SC.Eye\n              onClick={() => {\n                passwordType === 'password'\n                  ? setPasswordType('text')\n                  : setPasswordType('password');\n              }}\n            >\n              {passwordType === 'password' ? <HiEye /> : <HiEyeOff />}\n            </SC.Eye>\n          </SC.Div>\n          <SC.Div>\n            <SC.Label>\n              {t('Confirm Password')}\n              <SC.Input\n                style={{\n                  border:\n                    ((confirmPassword.isDirty &&\n                      password.value === confirmPassword.value &&\n                      '1px solid green') as string) ||\n                    ((confirmPassword.isDirty &&\n                      password.value !== confirmPassword.value &&\n                      '1px solid red') as string),\n                }}\n                type={confirmPasswordType}\n                value={confirmPassword.value}\n                onChange={e => confirmPassword.onChange(e)}\n                onBlur={e => confirmPassword.onBlur(e)}\n                name=\"confirmPassword\"\n                placeholder={t('Confirm Password')!}\n                required\n              />\n            </SC.Label>\n            {confirmPassword.isDirty &&\n              password.value === confirmPassword.value && (\n                <SC.Notification style={{ color: 'green' }}>\n                  {t('confirmPassword is correct')}\n                </SC.Notification>\n              )}\n            {confirmPassword.isDirty &&\n              password.value !== confirmPassword.value && (\n                <SC.Notification style={{ color: 'red' }}>\n                  {t('confirmPassword is not correct')}\n                </SC.Notification>\n              )}\n            <SC.Eye\n              onClick={() => {\n                confirmPasswordType === 'password'\n                  ? setConfirmPasswordType('text')\n                  : setConfirmPasswordType('password');\n              }}\n            >\n              {confirmPasswordType === 'password' ? <HiEye /> : <HiEyeOff />}\n            </SC.Eye>\n          </SC.Div>\n          <SC.Button\n            disabled={\n              !email.validForm ||\n              !password.validForm ||\n              !name.validForm ||\n              !confirmPassword.validForm\n            }\n            type=\"submit\"\n          >\n            {t('Sign Up')}\n            <SVG.LogInIcon />\n          </SC.Button>\n        </SC.Form>\n        <SC.Link to=\"/login\">{t('Log In')}</SC.Link>\n        <SC.GooseImage src={register} alt=\"goose\" />\n      </SC.InnerDiv>\n    </SC.Wrapper>\n  );\n};\n","import { RegisterForm } from '../../components/RegisterForm/RegisterForm/RegisterForm';\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  return (\n        <RegisterForm />\n  );\n};\n"],"names":["Wrap","styled","Btn","ChangeLngElem","i18n","useTranslation","setSearchParams","useGetSearchParams","onchangeLngClick","evt","name","currentTarget","lang","changeLanguage","type","onClick","src","USA","alt","style","width","UA","useSearchParams","searchParams","get","token","useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","emailError","setEmailError","confirmError","setConfirmError","nameError","setNameError","passwordError","setPasswordError","validForm","setValidForm","useEffect","validation","test","String","toLowerCase","console","log","useValidation","onChange","e","target","onBlur","Wrapper","props","theme","colors","blue2","InnerDiv","Form","white","radii","normal","Title","fontSizes","l","fontWeights","semiBold","lineHeights","xl","blue","xxxl","Label","xs","black2","s","Input","borders","task","space","regular","grey4","m","Button","medium","shadows","button","hoverYellow","Div","Notification","Google","fontFamily","logo","Eye","GooseImage","Link","NavLink","TitleDiv","Span","RegisterForm","dispatch","useDispatch","t","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","isName","email","isEmail","password","isPassword","confirmPassword","isSamePassword","onSubmit","event","preventDefault","payload","signUp","autoComplete","href","height","border","id","placeholder","required","color","disabled","to","register","RegisterPage"],"sourceRoot":""}